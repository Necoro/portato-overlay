==== Patch <0.8.9.2> level 1
Source: 0d5daa73-5169-4a83-8e4c-b6d9a920c5be:/trunk:669
Target: 0d5daa73-5169-4a83-8e4c-b6d9a920c5be:/0.8.9:636
Log:
Patch.
=== i18n/de.po
==================================================================
--- i18n/de.po	(revision 636)
+++ i18n/de.po	(patch 0.8.9.2 level 1)
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: Portato\n"
 "POT-Creation-Date: \n"
-"PO-Revision-Date: 2008-01-14 23:09+0100\n"
+"PO-Revision-Date: 2008-01-18 02:40+0100\n"
 "Last-Translator: René 'Necoro' Neumann <necoro@necoro.net>\n"
 "Language-Team: \n"
 "MIME-Version: 1.0\n"
@@ -25,7 +25,7 @@
 msgstr "Aktua_lisiere Portage-Cache"
 
 #: portato/gui/templates/portato.glade:68
-#: portato/gui/templates/portato.glade:1840
+#: portato/gui/templates/portato.glade:1962
 msgid "gtk-quit"
 msgstr ""
 
@@ -34,275 +34,268 @@
 msgstr "_Emerge"
 
 #: portato/gui/templates/portato.glade:89
-#: portato/gui/templates/portato.glade:945
-msgid "E_merge"
-msgstr "E_merge"
+#: portato/gui/templates/portato.glade:497
+msgid "_Install"
+msgstr "_Installieren"
 
-#: portato/gui/templates/portato.glade:104
-#: portato/gui/templates/portato.glade:979
-msgid "_Unmerge"
-msgstr "_Unmerge"
+#: portato/gui/templates/portato.glade:105
+#: portato/gui/templates/portato.glade:508
+msgid "_Uninstall"
+msgstr "_Deinstallieren"
 
-#: portato/gui/templates/portato.glade:118
-#: portato/gui/templates/portato.glade:998
+#: portato/gui/templates/portato.glade:121
+#: portato/gui/templates/portato.glade:951
 msgid "Update _World"
 msgstr "Update _World"
 
-#: portato/gui/templates/portato.glade:127
+#: portato/gui/templates/portato.glade:130
 msgid "Show Updatable P_ackages"
 msgstr "Zeige Pakete mit _Updates"
 
-#: portato/gui/templates/portato.glade:136
-msgid "Show Only _Installed Packages"
-msgstr "Zeige nur _installierte Pakete"
+#: portato/gui/templates/portato.glade:139
+msgid "Show _Only Installed Packages"
+msgstr "_Zeige nur installierte Pakete"
 
-#: portato/gui/templates/portato.glade:150
+#: portato/gui/templates/portato.glade:153
 msgid "_Sync"
 msgstr "_Sync"
 
-#: portato/gui/templates/portato.glade:166
+#: portato/gui/templates/portato.glade:169
 msgid "Save _Flags"
 msgstr "Speichere _Flags"
 
-#: portato/gui/templates/portato.glade:187
-#: portato/gui/templates/portato.glade:279
-#: portato/gui/templates/portato.glade:1815
+#: portato/gui/templates/portato.glade:190
+#: portato/gui/templates/portato.glade:282
+#: portato/gui/templates/portato.glade:1937
 msgid "Emerge _Paused"
 msgstr "Emerge _angehalten"
 
-#: portato/gui/templates/portato.glade:195
-#: portato/gui/templates/portato.glade:261
-#: portato/gui/templates/portato.glade:1822
+#: portato/gui/templates/portato.glade:198
+#: portato/gui/templates/portato.glade:264
+#: portato/gui/templates/portato.glade:1944
 msgid "_Kill Emerge"
 msgstr "_Kill Emerge"
 
-#: portato/gui/templates/portato.glade:218
-#: portato/gui/gtk/windows.py:1022
+#: portato/gui/templates/portato.glade:221
+#: portato/gui/gtk/windows.py:1064
 msgid "Queue"
 msgstr "Queue"
 
-#: portato/gui/templates/portato.glade:225
+#: portato/gui/templates/portato.glade:228
 msgid "Oneshot"
 msgstr "Oneshot"
 
-#: portato/gui/templates/portato.glade:237
-#: portato/gui/gtk/windows.py:1182
+#: portato/gui/templates/portato.glade:240
+#: portato/gui/gtk/windows.py:1231
 msgid "Console"
 msgstr "Konsole"
 
-#: portato/gui/templates/portato.glade:244
+#: portato/gui/templates/portato.glade:247
 msgid "_Copy"
 msgstr "_Kopieren"
 
-#: portato/gui/templates/portato.glade:290
+#: portato/gui/templates/portato.glade:293
 msgid "Plu_gins"
 msgstr "Plu_gins"
 
-#: portato/gui/templates/portato.glade:302
+#: portato/gui/templates/portato.glade:305
 msgid "_?"
 msgstr "_?"
 
-#: portato/gui/templates/portato.glade:310
+#: portato/gui/templates/portato.glade:313
 msgid "_About"
 msgstr "_Über"
 
-#: portato/gui/templates/portato.glade:328
+#: portato/gui/templates/portato.glade:331
 msgid "_Plugins"
 msgstr "_Plugins"
 
-#: portato/gui/templates/portato.glade:365
+#: portato/gui/templates/portato.glade:368
 msgid "gtk-find"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:464
-msgid "Add to Emerge Queue"
-msgstr "Füge zur Emerge Queue hinzu"
+#: portato/gui/templates/portato.glade:472
+#: portato/gui/templates/portato.glade:652
+#: portato/gui/templates/portato.glade:668
+msgid "label"
+msgstr ""
 
-#: portato/gui/templates/portato.glade:476
-msgid "Remove from Emerge Queue"
-msgstr "Entferne aus der Emerge Queue"
+#: portato/gui/templates/portato.glade:496
+msgid "Install onto system"
+msgstr "Füge zum System hinzu"
 
-#: portato/gui/templates/portato.glade:488
+#: portato/gui/templates/portato.glade:507
+msgid "Uninstall from system"
+msgstr "Lösche vom System"
+
+#: portato/gui/templates/portato.glade:518
 msgid "Revert changes"
 msgstr "Rückgängig"
 
-#: portato/gui/templates/portato.glade:510
-#: portato/gui/templates/portato.glade:633
-#: portato/gui/templates/portato.glade:648
-msgid "label"
-msgstr ""
+#: portato/gui/templates/portato.glade:519
+msgid "Re_vert"
+msgstr "Rü_ckgängig"
 
-#: portato/gui/templates/portato.glade:555
-msgid "<b>Installed, but not in portage anymore</b>"
-msgstr "<b>Installiert, aber nicht mehr im Portage-Tree vorhanden</b>"
+#: portato/gui/templates/portato.glade:565
+#: portato/gui/gtk/windows.py:755
+#: portato/gui/gtk/windows.py:758
+#: portato/gui/gtk/windows.py:825
+#: portato/gui/gtk/windows.py:829
+msgid "Testing"
+msgstr "Testing"
 
-#: portato/gui/templates/portato.glade:570
-msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
-msgstr "<span foreground='red'><b>FEHLENDES KEYWORD</b></span>"
+#: portato/gui/templates/portato.glade:598
+#: portato/gui/gtk/windows.py:738
+#: portato/gui/gtk/windows.py:741
+#: portato/gui/gtk/windows.py:744
+#: portato/gui/gtk/windows.py:852
+#: portato/gui/gtk/windows.py:856
+#: portato/gui/gtk/windows.py:863
+#: portato/gui/gtk/windows.py:867
+msgid "Masked"
+msgstr "Masked"
 
-#: portato/gui/templates/portato.glade:602
-msgid "<b>Description:</b>"
-msgstr "<b>Beschreibung</b>"
-
 #: portato/gui/templates/portato.glade:617
-msgid "<b>Overlay:</b>"
-msgstr "<b>Overlay:</b>"
+#: portato/gui/gtk/windows.py:610
+msgid "Installed"
+msgstr "Installiert"
 
-#: portato/gui/templates/portato.glade:665
+#: portato/gui/templates/portato.glade:635
 msgid "<b>Homepage:</b>"
 msgstr "<b>Homepage:</b>"
 
-#: portato/gui/templates/portato.glade:682
-#: portato/gui/gtk/windows.py:575
-msgid "Installed"
-msgstr "Installiert"
+#: portato/gui/templates/portato.glade:683
+msgid "<b>Overlay:</b>"
+msgstr "<b>Overlay:</b>"
 
-#: portato/gui/templates/portato.glade:701
-#: portato/gui/gtk/windows.py:703
-#: portato/gui/gtk/windows.py:706
-#: portato/gui/gtk/windows.py:709
-#: portato/gui/gtk/windows.py:811
-#: portato/gui/gtk/windows.py:815
-#: portato/gui/gtk/windows.py:822
-#: portato/gui/gtk/windows.py:826
-msgid "Masked"
-msgstr "Masked"
+#: portato/gui/templates/portato.glade:699
+msgid "<b>Description:</b>"
+msgstr "<b>Beschreibung</b>"
 
-#: portato/gui/templates/portato.glade:734
-#: portato/gui/gtk/windows.py:720
-#: portato/gui/gtk/windows.py:723
-#: portato/gui/gtk/windows.py:784
-#: portato/gui/gtk/windows.py:788
-msgid "Testing"
-msgstr "Testing"
+#: portato/gui/templates/portato.glade:730
+msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
+msgstr "<span foreground='red'><b>FEHLENDES KEYWORD</b></span>"
 
-#: portato/gui/templates/portato.glade:754
+#: portato/gui/templates/portato.glade:745
+msgid "<b>Installed, but not in portage anymore</b>"
+msgstr "<b>Installiert, aber nicht mehr im Portage-Tree vorhanden</b>"
+
+#: portato/gui/templates/portato.glade:762
 msgid "_General"
 msgstr "All_gemein"
 
-#: portato/gui/templates/portato.glade:786
+#: portato/gui/templates/portato.glade:794
 msgid "U_se List"
 msgstr "U_se-Flag-Liste"
 
-#: portato/gui/templates/portato.glade:814
+#: portato/gui/templates/portato.glade:822
 msgid "E_build"
 msgstr "E_build"
 
-#: portato/gui/templates/portato.glade:842
+#: portato/gui/templates/portato.glade:850
 msgid "C_hangelog"
 msgstr "C_hangelog"
 
-#: portato/gui/templates/portato.glade:870
-msgid "F_iles"
-msgstr "Date_ien"
+#: portato/gui/templates/portato.glade:878
+msgid "Fi_les"
+msgstr "_Dateien"
 
-#: portato/gui/templates/portato.glade:926
-msgid "Install all packages in the \"Emerge Queue\""
-msgstr "Installiere alle Pakete aus der \"Emerge Queue\""
+#: portato/gui/templates/portato.glade:916
+msgid "Execute the current selected queue"
+msgstr "Führe die aktuell gewählte Queue aus"
 
-#: portato/gui/templates/portato.glade:960
-msgid "Deinstall all packages in the \"Unmerge Queue\""
-msgstr "Deinstalliere alle Pakete aus der \"Unmerge Queue\""
+#: portato/gui/templates/portato.glade:935
+msgid "E_xecute"
+msgstr "_Ausführen"
 
-#: portato/gui/templates/portato.glade:997
+#: portato/gui/templates/portato.glade:950
 msgid "Calculate the packages which will be installed during an \"update world\""
 msgstr "Berechnet die Pakete, welche während eines \"update world\" installiert werden würden"
 
-#: portato/gui/templates/portato.glade:1010
+#: portato/gui/templates/portato.glade:963
 msgid "Remove the selected package from the queue"
 msgstr "Löscht das gewählte Paket aus der Queue"
 
-#: portato/gui/templates/portato.glade:1011
+#: portato/gui/templates/portato.glade:964
 msgid "_Remove"
 msgstr "_Löschen"
 
-#: portato/gui/templates/portato.glade:1033
+#: portato/gui/templates/portato.glade:1007
 msgid "_Queue"
 msgstr "_Queue"
 
-#: portato/gui/templates/portato.glade:1059
+#: portato/gui/templates/portato.glade:1033
 msgid "_Console"
 msgstr "_Konsole"
 
-#: portato/gui/templates/portato.glade:1094
+#: portato/gui/templates/portato.glade:1068
 msgid "L_og"
 msgstr "L_og"
 
-#: portato/gui/templates/portato.glade:1129
+#: portato/gui/templates/portato.glade:1103
 msgid "Portato - A Portage GUI"
 msgstr "Portato - A Portage GUI"
 
-#: portato/gui/templates/portato.glade:1146
+#: portato/gui/templates/portato.glade:1120
 msgid "Search Results"
 msgstr "Ergebnisse"
 
-#: portato/gui/templates/portato.glade:1186
-#: portato/gui/templates/portato.glade:1781
-#: portato/gui/templates/portato.glade:1889
+#: portato/gui/templates/portato.glade:1160
+#: portato/gui/templates/portato.glade:1903
+#: portato/gui/templates/portato.glade:2011
 msgid "gtk-cancel"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1198
+#: portato/gui/templates/portato.glade:1172
 msgid "gtk-jump-to"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1213
+#: portato/gui/templates/portato.glade:1187
 msgid "gtk-ok"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1234
+#: portato/gui/templates/portato.glade:1208
 msgid "Preferences"
 msgstr "Einstellungen"
 
-#: portato/gui/templates/portato.glade:1269
+#: portato/gui/templates/portato.glade:1243
 msgid "Debug"
 msgstr "Debug"
 
-#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1256
 msgid "Browser command: "
 msgstr "Browser-Befehl: "
 
-#: portato/gui/templates/portato.glade:1308
+#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1709
 msgid "<b>General Options</b>"
 msgstr "<b>Allgemeine Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1358
+#: portato/gui/templates/portato.glade:1332
 msgid "<b>Update World Options</b>"
 msgstr "<b>Optionen für \"update world\"</b>"
 
-#: portato/gui/templates/portato.glade:1386
+#: portato/gui/templates/portato.glade:1360
 msgid "Sync command: "
 msgstr "Sync-Befehl: "
 
-#: portato/gui/templates/portato.glade:1407
+#: portato/gui/templates/portato.glade:1381
 msgid "<b>Sync Options</b>"
 msgstr "<b>Sync Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1458
-msgid "File name to use, if package.use is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.use ein Verzeichnis ist:"
+#: portato/gui/templates/portato.glade:1422
+msgid "<u><i>Masking Keywords</i></u>"
+msgstr "<u><i>Masking Keywords</i></u>"
 
-#: portato/gui/templates/portato.glade:1469
-msgid "Add only exact version to package.use"
-msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+#: portato/gui/templates/portato.glade:1437
+msgid "<u><i>Testing Keywords</i></u>"
+msgstr "<u><i>Testing Keywords</i></u>"
 
-#: portato/gui/templates/portato.glade:1482
-msgid "Add only exact version to package.keywords"
-msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+#: portato/gui/templates/portato.glade:1452
+msgid "<u><i>Use-Flags</i></u>"
+msgstr "<u><i>Use-Flags</i></u>"
 
-#: portato/gui/templates/portato.glade:1496
-msgid "File name to use, if package.keywords is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.keywords ein Verzeichnis ist:"
-
-#: portato/gui/templates/portato.glade:1530
-msgid "File name to use, if package.mask/package.unmask is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.mask/package.unmask ein Verzeichnis ist:"
-
-#: portato/gui/templates/portato.glade:1541
-msgid "Add only exact version to package.mask/package.unmask"
-msgstr "Füge nur die exakte Paketversion zu package.mask/package.unmask hinzu"
-
-#: portato/gui/templates/portato.glade:1563
+#: portato/gui/templates/portato.glade:1474
 msgid ""
 "<u>You may use the following placeholders:</u>\n"
 "\n"
@@ -316,64 +309,92 @@
 "<i>$(pkg)</i>: Paketname\n"
 "<i>$(cat-1)/$(cat-2)</i>: erster/zweiter Teil der Kategorie"
 
-#: portato/gui/templates/portato.glade:1589
-msgid "<u><i>Use-Flags</i></u>"
-msgstr "<u><i>Use-Flags</i></u>"
+#: portato/gui/templates/portato.glade:1498
+msgid "Add only exact version to package.mask/package.unmask"
+msgstr "Füge nur die exakte Paketversion zu package.mask/package.unmask hinzu"
 
-#: portato/gui/templates/portato.glade:1604
-msgid "<u><i>Testing Keywords</i></u>"
-msgstr "<u><i>Testing Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1512
+msgid "File name to use, if package.mask/package.unmask is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.mask/package.unmask ein Verzeichnis ist:"
 
-#: portato/gui/templates/portato.glade:1619
-msgid "<u><i>Masking Keywords</i></u>"
-msgstr "<u><i>Masking Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1546
+msgid "File name to use, if package.keywords is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.keywords ein Verzeichnis ist:"
 
-#: portato/gui/templates/portato.glade:1636
+#: portato/gui/templates/portato.glade:1557
+msgid "Add only exact version to package.keywords"
+msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+
+#: portato/gui/templates/portato.glade:1570
+msgid "Add only exact version to package.use"
+msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+
+#: portato/gui/templates/portato.glade:1584
+msgid "File name to use, if package.use is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.use ein Verzeichnis ist:"
+
+#: portato/gui/templates/portato.glade:1610
 msgid "<b>Use Flag and Keyword Options</b>"
 msgstr "<b>Use-Flag- und Keyword-Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1654
+#: portato/gui/templates/portato.glade:1628
 msgid "General"
 msgstr "Allgemein"
 
-#: portato/gui/templates/portato.glade:1677
+#: portato/gui/templates/portato.glade:1665
+msgid "Enable systray"
+msgstr "Aktiviere Systray"
+
+#: portato/gui/templates/portato.glade:1678
 msgid "Show emerge progress in title - similar to the console tab"
 msgstr "Zeige den Emerge Prozess im Fenstertitel (wie im Konsolen-Tab)"
 
-#: portato/gui/templates/portato.glade:1693
-msgid "Enable systray"
-msgstr "Aktiviere Systray"
-
-#: portato/gui/templates/portato.glade:1707
+#: portato/gui/templates/portato.glade:1692
 msgid "Hide on minimization (only if systray is enabled)"
 msgstr "Minimiere zu Systray"
 
-#: portato/gui/templates/portato.glade:1726
+#: portato/gui/templates/portato.glade:1743
 msgid "Console Font"
 msgstr "Schriftart in Konsole"
 
-#: portato/gui/templates/portato.glade:1736
+#: portato/gui/templates/portato.glade:1753
 msgid "Chose a console font"
 msgstr "Wähle eine Schriftart"
 
-#: portato/gui/templates/portato.glade:1763
+#: portato/gui/templates/portato.glade:1770
+msgid "<b>Console Options</b>"
+msgstr "<b>Konsolen Optionen</b>"
+
+#: portato/gui/templates/portato.glade:1810
+msgid "Package Tabs"
+msgstr "Pakettabs"
+
+#: portato/gui/templates/portato.glade:1835
+msgid "System Tabs"
+msgstr "Systemtabs"
+
+#: portato/gui/templates/portato.glade:1861
+msgid "<b>Tab Options</b>"
+msgstr "<b>Tab Optionen</b>"
+
+#: portato/gui/templates/portato.glade:1885
 msgid "Visual"
 msgstr "Oberfläche"
 
-#: portato/gui/templates/portato.glade:1790
-#: portato/gui/templates/portato.glade:1901
+#: portato/gui/templates/portato.glade:1912
+#: portato/gui/templates/portato.glade:2023
 msgid "gtk-apply"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1850
+#: portato/gui/templates/portato.glade:1972
 msgid "Plugins"
 msgstr "Plugins"
 
-#: portato/gui/templates/portato.glade:1922
+#: portato/gui/templates/portato.glade:2044
 msgid "About Portato"
 msgstr "Portato"
 
-#: portato/gui/templates/portato.glade:1931
+#: portato/gui/templates/portato.glade:2053
 msgid ""
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
@@ -381,23 +402,23 @@
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
 
-#: portato/gui/templates/portato.glade:1933
+#: portato/gui/templates/portato.glade:2055
 msgid "A Portage GUI"
 msgstr "A Portage GUI"
 
-#: portato/gui/templates/portato.glade:2023
+#: portato/gui/templates/portato.glade:2145
 msgid "Updateble Packages"
 msgstr "Pakete mit Updates"
 
-#: portato/gui/templates/portato.glade:2065
+#: portato/gui/templates/portato.glade:2187
 msgid "_Close"
 msgstr "_Schließen"
 
-#: portato/gui/templates/portato.glade:2077
+#: portato/gui/templates/portato.glade:2199
 msgid "Select _All"
 msgstr "_Alles auswählen"
 
-#: portato/gui/templates/portato.glade:2092
+#: portato/gui/templates/portato.glade:2214
 msgid "_Install Selected"
 msgstr "_Installiere ausgewählte"
 
@@ -481,7 +502,7 @@
 
 #: portato/gui/gtk/windows.py:61
 #: portato/gui/gtk/windows.py:149
-#: portato/gui/gtk/windows.py:574
+#: portato/gui/gtk/windows.py:609
 msgid "Enabled"
 msgstr "Aktiviert"
 
@@ -509,138 +530,151 @@
 msgid "Results"
 msgstr "Ergebnisse"
 
-#: portato/gui/gtk/windows.py:496
+#: portato/gui/gtk/windows.py:372
+msgid "Top"
+msgstr "Oben"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Bottom"
+msgstr "Unten"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Left"
+msgstr "Links"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Right"
+msgstr "Rechts"
+
+#: portato/gui/gtk/windows.py:531
 msgid "<no description>"
 msgstr "<keine Beschreibung>"
 
-#: portato/gui/gtk/windows.py:519
+#: portato/gui/gtk/windows.py:554
 msgid "The first homepage part does not start with 'http' or 'ftp'."
 msgstr "Der erste Teil der Homepage startet nicht mit 'http' oder 'ftp'."
 
-#: portato/gui/gtk/windows.py:523
+#: portato/gui/gtk/windows.py:558
 msgid "Blank inside homepage."
 msgstr "Leerzeichen innerhalb der Homepage-URL."
 
-#: portato/gui/gtk/windows.py:552
+#: portato/gui/gtk/windows.py:587
 msgid "This is an expanded use flag and cannot be selected"
 msgstr "Dies ist ein \"Expanded Use Flag\" und kann daher nicht ausgewählt werden."
 
-#: portato/gui/gtk/windows.py:576
+#: portato/gui/gtk/windows.py:611
 msgid "Flag"
 msgstr "Flag"
 
-#: portato/gui/gtk/windows.py:577
+#: portato/gui/gtk/windows.py:612
 msgid "Description"
 msgstr "Beschreibung"
 
-#: portato/gui/gtk/windows.py:655
+#: portato/gui/gtk/windows.py:690
 #, python-format
 msgid "Package could not be found: %s"
 msgstr "Paket konnte nicht gefunden werden: %s"
 
-#: portato/gui/gtk/windows.py:712
-#: portato/gui/gtk/windows.py:813
+#: portato/gui/gtk/windows.py:747
+#: portato/gui/gtk/windows.py:854
 msgid "Masked by user"
 msgstr "Vom Benutzer maskiert"
 
-#: portato/gui/gtk/windows.py:888
+#: portato/gui/gtk/windows.py:929
 msgid "Loading Config"
 msgstr "Lade Konfiguration"
 
-#: portato/gui/gtk/windows.py:900
+#: portato/gui/gtk/windows.py:941
 msgid "Creating Database"
 msgstr "Erstelle Datenbank"
 
-#: portato/gui/gtk/windows.py:905
+#: portato/gui/gtk/windows.py:946
 msgid "Loading Plugins"
 msgstr "Lade Plugins"
 
-#: portato/gui/gtk/windows.py:918
+#: portato/gui/gtk/windows.py:959
 msgid "Building frontend"
 msgstr "Erstelle Oberfläche"
 
-#: portato/gui/gtk/windows.py:970
+#: portato/gui/gtk/windows.py:1011
 msgid "Restoring Session"
 msgstr "Lade Session"
 
-#: portato/gui/gtk/windows.py:973
+#: portato/gui/gtk/windows.py:1014
 msgid "Finishing startup"
 msgstr "Erledige letzte Handgriffe :)"
 
-#: portato/gui/gtk/windows.py:1025
+#: portato/gui/gtk/windows.py:1067
 msgid "Options"
 msgstr "Optionen"
 
-#: portato/gui/gtk/windows.py:1035
+#: portato/gui/gtk/windows.py:1077
 msgid "Categories"
 msgstr "Kategorien"
 
-#: portato/gui/gtk/windows.py:1062
+#: portato/gui/gtk/windows.py:1104
 msgid "Packages"
 msgstr "Pakete"
 
-#: portato/gui/gtk/windows.py:1184
+#: portato/gui/gtk/windows.py:1233
 #, python-format
 msgid "Console (%(title)s)"
 msgstr "Konsole (%(title)s)"
 
-#: portato/gui/gtk/windows.py:1300
+#: portato/gui/gtk/windows.py:1347
 msgid "use flags"
 msgstr "Use Flags"
 
-#: portato/gui/gtk/windows.py:1307
+#: portato/gui/gtk/windows.py:1354
 msgid "masking keywords"
 msgstr "Masking Keywords"
 
-#: portato/gui/gtk/views.py:70
-msgid "Package is not installed"
-msgstr "Paket ist nicht installiert"
-
-#: portato/gui/gtk/views.py:87
-#, python-format
-msgid "No %(old)s language file installed. Falling back to %(new)s."
-msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Benutze \"%(new)s\"-Syntax."
-
-#: portato/gui/gtk/views.py:92
-#, python-format
-msgid "No %(old)s language file installed. Disable highlighting."
-msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Deaktiviere Hervorhebung."
-
-#: portato/gui/gtk/views.py:111
-#, python-format
-msgid "Error: %s"
-msgstr "Fehler: %s"
-
 #: portato/gui/gtk/__init__.py:23
 msgid "Loading Portage"
 msgstr "Lade Portage"
 
-#: portato/gui/gtk/wrapper.py:39
+#: portato/gui/gtk/wrapper.py:40
 msgid "oneshot"
 msgstr "oneshot"
 
-#: portato/gui/gtk/wrapper.py:44
+#: portato/gui/gtk/wrapper.py:45
 #, python-format
 msgid "updating from version %s"
 msgstr "Update von Version %s"
 
-#: portato/gui/gtk/wrapper.py:46
+#: portato/gui/gtk/wrapper.py:47
 msgid "updating"
 msgstr "Update"
 
-#: portato/gui/gtk/wrapper.py:51
+#: portato/gui/gtk/wrapper.py:52
 #, python-format
 msgid "downgrading from version %s"
 msgstr "Downgrade von Version %s"
 
-#: portato/gui/gtk/wrapper.py:53
+#: portato/gui/gtk/wrapper.py:54
 msgid "downgrading"
 msgstr "Downgrade"
 
-#: portato/gui/gtk/wrapper.py:57
+#: portato/gui/gtk/wrapper.py:58
 msgid "IUSE changes:"
 msgstr "IUSE Änderungen:"
 
+#: portato/gui/gtk/wrapper.py:66
+msgid "(In Progress)"
+msgstr "(In Bearbeitung)"
+
+#: portato/gui/gtk/wrapper.py:70
+msgid "Install"
+msgstr "Installieren"
+
+#: portato/gui/gtk/wrapper.py:75
+msgid "Uninstall"
+msgstr "Deinstallieren"
+
+#: portato/gui/gtk/wrapper.py:81
+msgid "Update"
+msgstr "Update"
+
 #: portato/gui/gtk/dialogs.py:17
 msgid ""
 "There are some packages in the emerge queue and/or an emerge process is running.\n"
@@ -685,6 +719,14 @@
 msgstr "Du kannst keine Abhängigkeiten löschen ;)."
 
 #: portato/gui/gtk/dialogs.py:72
+msgid ""
+"This is the updates queue. You cannot remove single elements.\n"
+"Do you want to clear the whole queue instead?"
+msgstr ""
+"Das ist die Update-Queue. Aus dieser können keine einzelnen Pakete entfernt werden.\n"
+"Soll stattdessen die komplette Queue entfernt werden?"
+
+#: portato/gui/gtk/dialogs.py:78
 msgid "Do you really want to clear the whole queue?"
 msgstr "Wirklich die gesamte Queue löschen?"
 
@@ -727,6 +769,25 @@
 "Exception:\n"
 "%s"
 
+#: portato/gui/gtk/views.py:70
+msgid "Package is not installed"
+msgstr "Paket ist nicht installiert"
+
+#: portato/gui/gtk/views.py:87
+#, python-format
+msgid "No %(old)s language file installed. Falling back to %(new)s."
+msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Benutze \"%(new)s\"-Syntax."
+
+#: portato/gui/gtk/views.py:92
+#, python-format
+msgid "No %(old)s language file installed. Disable highlighting."
+msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Deaktiviere Hervorhebung."
+
+#: portato/gui/gtk/views.py:111
+#, python-format
+msgid "Error: %s"
+msgstr "Fehler: %s"
+
 #: portato/gui/gui_helper.py:125
 msgid "ALL"
 msgstr "ALLE"
=== i18n/messages.pot
==================================================================
--- i18n/messages.pot	(revision 636)
+++ i18n/messages.pot	(patch 0.8.9.2 level 1)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2008-01-14 23:07+0100\n"
+"POT-Creation-Date: 2008-01-18 02:35+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -29,7 +29,7 @@
 msgstr ""
 
 #: portato/gui/templates/portato.glade:68
-#: portato/gui/templates/portato.glade:1840
+#: portato/gui/templates/portato.glade:1962
 msgid "gtk-quit"
 msgstr ""
 
@@ -38,267 +38,260 @@
 msgstr ""
 
 #: portato/gui/templates/portato.glade:89
-#: portato/gui/templates/portato.glade:945
-msgid "E_merge"
+#: portato/gui/templates/portato.glade:497
+msgid "_Install"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:104
-#: portato/gui/templates/portato.glade:979
-msgid "_Unmerge"
+#: portato/gui/templates/portato.glade:105
+#: portato/gui/templates/portato.glade:508
+msgid "_Uninstall"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:118
-#: portato/gui/templates/portato.glade:998
+#: portato/gui/templates/portato.glade:121
+#: portato/gui/templates/portato.glade:951
 msgid "Update _World"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:127
+#: portato/gui/templates/portato.glade:130
 msgid "Show Updatable P_ackages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:136
-msgid "Show Only _Installed Packages"
+#: portato/gui/templates/portato.glade:139
+msgid "Show _Only Installed Packages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:150
+#: portato/gui/templates/portato.glade:153
 msgid "_Sync"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:166
+#: portato/gui/templates/portato.glade:169
 msgid "Save _Flags"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:187
-#: portato/gui/templates/portato.glade:279
-#: portato/gui/templates/portato.glade:1815
+#: portato/gui/templates/portato.glade:190
+#: portato/gui/templates/portato.glade:282
+#: portato/gui/templates/portato.glade:1937
 msgid "Emerge _Paused"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:195
-#: portato/gui/templates/portato.glade:261
-#: portato/gui/templates/portato.glade:1822
+#: portato/gui/templates/portato.glade:198
+#: portato/gui/templates/portato.glade:264
+#: portato/gui/templates/portato.glade:1944
 msgid "_Kill Emerge"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:218 portato/gui/gtk/windows.py:1022
+#: portato/gui/templates/portato.glade:221 portato/gui/gtk/windows.py:1064
 msgid "Queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:225
+#: portato/gui/templates/portato.glade:228
 msgid "Oneshot"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:237 portato/gui/gtk/windows.py:1182
+#: portato/gui/templates/portato.glade:240 portato/gui/gtk/windows.py:1231
 msgid "Console"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:244
+#: portato/gui/templates/portato.glade:247
 msgid "_Copy"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:290
+#: portato/gui/templates/portato.glade:293
 msgid "Plu_gins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:302
+#: portato/gui/templates/portato.glade:305
 msgid "_?"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:310
+#: portato/gui/templates/portato.glade:313
 msgid "_About"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:328
+#: portato/gui/templates/portato.glade:331
 msgid "_Plugins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:365
+#: portato/gui/templates/portato.glade:368
 msgid "gtk-find"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:464
-msgid "Add to Emerge Queue"
+#: portato/gui/templates/portato.glade:472
+#: portato/gui/templates/portato.glade:652
+#: portato/gui/templates/portato.glade:668
+msgid "label"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:476
-msgid "Remove from Emerge Queue"
+#: portato/gui/templates/portato.glade:496
+msgid "Install onto system"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:488
-msgid "Revert changes"
+#: portato/gui/templates/portato.glade:507
+msgid "Uninstall from system"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:510
-#: portato/gui/templates/portato.glade:633
-#: portato/gui/templates/portato.glade:648
-msgid "label"
+#: portato/gui/templates/portato.glade:518
+msgid "Revert changes"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:555
-msgid "<b>Installed, but not in portage anymore</b>"
+#: portato/gui/templates/portato.glade:519
+msgid "Re_vert"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:570
-msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
+#: portato/gui/templates/portato.glade:565 portato/gui/gtk/windows.py:755
+#: portato/gui/gtk/windows.py:758 portato/gui/gtk/windows.py:825
+#: portato/gui/gtk/windows.py:829
+msgid "Testing"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:602
-msgid "<b>Description:</b>"
+#: portato/gui/templates/portato.glade:598 portato/gui/gtk/windows.py:738
+#: portato/gui/gtk/windows.py:741 portato/gui/gtk/windows.py:744
+#: portato/gui/gtk/windows.py:852 portato/gui/gtk/windows.py:856
+#: portato/gui/gtk/windows.py:863 portato/gui/gtk/windows.py:867
+msgid "Masked"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:617
-msgid "<b>Overlay:</b>"
+#: portato/gui/templates/portato.glade:617 portato/gui/gtk/windows.py:610
+msgid "Installed"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:665
+#: portato/gui/templates/portato.glade:635
 msgid "<b>Homepage:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:682 portato/gui/gtk/windows.py:575
-msgid "Installed"
+#: portato/gui/templates/portato.glade:683
+msgid "<b>Overlay:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:701 portato/gui/gtk/windows.py:703
-#: portato/gui/gtk/windows.py:706 portato/gui/gtk/windows.py:709
-#: portato/gui/gtk/windows.py:811 portato/gui/gtk/windows.py:815
-#: portato/gui/gtk/windows.py:822 portato/gui/gtk/windows.py:826
-msgid "Masked"
+#: portato/gui/templates/portato.glade:699
+msgid "<b>Description:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:734 portato/gui/gtk/windows.py:720
-#: portato/gui/gtk/windows.py:723 portato/gui/gtk/windows.py:784
-#: portato/gui/gtk/windows.py:788
-msgid "Testing"
+#: portato/gui/templates/portato.glade:730
+msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:754
+#: portato/gui/templates/portato.glade:745
+msgid "<b>Installed, but not in portage anymore</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:762
 msgid "_General"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:786
+#: portato/gui/templates/portato.glade:794
 msgid "U_se List"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:814
+#: portato/gui/templates/portato.glade:822
 msgid "E_build"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:842
+#: portato/gui/templates/portato.glade:850
 msgid "C_hangelog"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:870
-msgid "F_iles"
+#: portato/gui/templates/portato.glade:878
+msgid "Fi_les"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:926
-msgid "Install all packages in the \"Emerge Queue\""
+#: portato/gui/templates/portato.glade:916
+msgid "Execute the current selected queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:960
-msgid "Deinstall all packages in the \"Unmerge Queue\""
+#: portato/gui/templates/portato.glade:935
+msgid "E_xecute"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:997
+#: portato/gui/templates/portato.glade:950
 msgid ""
 "Calculate the packages which will be installed during an \"update world\""
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1010
+#: portato/gui/templates/portato.glade:963
 msgid "Remove the selected package from the queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1011
+#: portato/gui/templates/portato.glade:964
 msgid "_Remove"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1033
+#: portato/gui/templates/portato.glade:1007
 msgid "_Queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1059
+#: portato/gui/templates/portato.glade:1033
 msgid "_Console"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1094
+#: portato/gui/templates/portato.glade:1068
 msgid "L_og"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1129
+#: portato/gui/templates/portato.glade:1103
 msgid "Portato - A Portage GUI"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1146
+#: portato/gui/templates/portato.glade:1120
 msgid "Search Results"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1186
-#: portato/gui/templates/portato.glade:1781
-#: portato/gui/templates/portato.glade:1889
+#: portato/gui/templates/portato.glade:1160
+#: portato/gui/templates/portato.glade:1903
+#: portato/gui/templates/portato.glade:2011
 msgid "gtk-cancel"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1198
+#: portato/gui/templates/portato.glade:1172
 msgid "gtk-jump-to"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1213
+#: portato/gui/templates/portato.glade:1187
 msgid "gtk-ok"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1234
+#: portato/gui/templates/portato.glade:1208
 msgid "Preferences"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1269
+#: portato/gui/templates/portato.glade:1243
 msgid "Debug"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1256
 msgid "Browser command: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1308
+#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1709
 msgid "<b>General Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1358
+#: portato/gui/templates/portato.glade:1332
 msgid "<b>Update World Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1386
+#: portato/gui/templates/portato.glade:1360
 msgid "Sync command: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1407
+#: portato/gui/templates/portato.glade:1381
 msgid "<b>Sync Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1458
-msgid "File name to use, if package.use is a directory: "
+#: portato/gui/templates/portato.glade:1422
+msgid "<u><i>Masking Keywords</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1469
-msgid "Add only exact version to package.use"
+#: portato/gui/templates/portato.glade:1437
+msgid "<u><i>Testing Keywords</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1482
-msgid "Add only exact version to package.keywords"
+#: portato/gui/templates/portato.glade:1452
+msgid "<u><i>Use-Flags</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1496
-msgid "File name to use, if package.keywords is a directory: "
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1530
-msgid "File name to use, if package.mask/package.unmask is a directory: "
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1541
-msgid "Add only exact version to package.mask/package.unmask"
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1563
+#: portato/gui/templates/portato.glade:1474
 msgid ""
 "<u>You may use the following placeholders:</u>\n"
 "\n"
@@ -307,86 +300,114 @@
 "<i>$(cat-1)/$(cat-2)</i>: first/second part of the category"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1589
-msgid "<u><i>Use-Flags</i></u>"
+#: portato/gui/templates/portato.glade:1498
+msgid "Add only exact version to package.mask/package.unmask"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1604
-msgid "<u><i>Testing Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1512
+msgid "File name to use, if package.mask/package.unmask is a directory: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1619
-msgid "<u><i>Masking Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1546
+msgid "File name to use, if package.keywords is a directory: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1636
+#: portato/gui/templates/portato.glade:1557
+msgid "Add only exact version to package.keywords"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1570
+msgid "Add only exact version to package.use"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1584
+msgid "File name to use, if package.use is a directory: "
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1610
 msgid "<b>Use Flag and Keyword Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1654
+#: portato/gui/templates/portato.glade:1628
 msgid "General"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1677
-msgid "Show emerge progress in title - similar to the console tab"
+#: portato/gui/templates/portato.glade:1665
+msgid "Enable systray"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1693
-msgid "Enable systray"
+#: portato/gui/templates/portato.glade:1678
+msgid "Show emerge progress in title - similar to the console tab"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1707
+#: portato/gui/templates/portato.glade:1692
 msgid "Hide on minimization (only if systray is enabled)"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1726
+#: portato/gui/templates/portato.glade:1743
 msgid "Console Font"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1736
+#: portato/gui/templates/portato.glade:1753
 msgid "Chose a console font"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1763
+#: portato/gui/templates/portato.glade:1770
+msgid "<b>Console Options</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1810
+msgid "Package Tabs"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1835
+msgid "System Tabs"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1861
+msgid "<b>Tab Options</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1885
 msgid "Visual"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1790
-#: portato/gui/templates/portato.glade:1901
+#: portato/gui/templates/portato.glade:1912
+#: portato/gui/templates/portato.glade:2023
 msgid "gtk-apply"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1850
+#: portato/gui/templates/portato.glade:1972
 msgid "Plugins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1922
+#: portato/gui/templates/portato.glade:2044
 msgid "About Portato"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1931
+#: portato/gui/templates/portato.glade:2053
 msgid ""
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1933
+#: portato/gui/templates/portato.glade:2055
 msgid "A Portage GUI"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2023
+#: portato/gui/templates/portato.glade:2145
 msgid "Updateble Packages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2065
+#: portato/gui/templates/portato.glade:2187
 msgid "_Close"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2077
+#: portato/gui/templates/portato.glade:2199
 msgid "Select _All"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2092
+#: portato/gui/templates/portato.glade:2214
 msgid "_Install Selected"
 msgstr ""
 
@@ -471,7 +492,7 @@
 msgstr ""
 
 #: portato/gui/gtk/windows.py:61 portato/gui/gtk/windows.py:149
-#: portato/gui/gtk/windows.py:574
+#: portato/gui/gtk/windows.py:609
 msgid "Enabled"
 msgstr ""
 
@@ -499,137 +520,150 @@
 msgid "Results"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:496
+#: portato/gui/gtk/windows.py:372
+msgid "Top"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Bottom"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Left"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Right"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:531
 msgid "<no description>"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:519
+#: portato/gui/gtk/windows.py:554
 msgid "The first homepage part does not start with 'http' or 'ftp'."
 msgstr ""
 
-#: portato/gui/gtk/windows.py:523
+#: portato/gui/gtk/windows.py:558
 msgid "Blank inside homepage."
 msgstr ""
 
-#: portato/gui/gtk/windows.py:552
+#: portato/gui/gtk/windows.py:587
 msgid "This is an expanded use flag and cannot be selected"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:576
+#: portato/gui/gtk/windows.py:611
 msgid "Flag"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:577
+#: portato/gui/gtk/windows.py:612
 msgid "Description"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:655
+#: portato/gui/gtk/windows.py:690
 #, python-format
 msgid "Package could not be found: %s"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:712 portato/gui/gtk/windows.py:813
+#: portato/gui/gtk/windows.py:747 portato/gui/gtk/windows.py:854
 msgid "Masked by user"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:888
+#: portato/gui/gtk/windows.py:929
 msgid "Loading Config"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:900
+#: portato/gui/gtk/windows.py:941
 msgid "Creating Database"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:905
+#: portato/gui/gtk/windows.py:946
 msgid "Loading Plugins"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:918
+#: portato/gui/gtk/windows.py:959
 msgid "Building frontend"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:970
+#: portato/gui/gtk/windows.py:1011
 msgid "Restoring Session"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:973
+#: portato/gui/gtk/windows.py:1014
 msgid "Finishing startup"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1025
+#: portato/gui/gtk/windows.py:1067
 msgid "Options"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1035
+#: portato/gui/gtk/windows.py:1077
 msgid "Categories"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1062
+#: portato/gui/gtk/windows.py:1104
 msgid "Packages"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1184
+#: portato/gui/gtk/windows.py:1233
 #, python-format
 msgid "Console (%(title)s)"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1300
+#: portato/gui/gtk/windows.py:1347
 msgid "use flags"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1307
+#: portato/gui/gtk/windows.py:1354
 msgid "masking keywords"
 msgstr ""
 
-#: portato/gui/gtk/views.py:70
-msgid "Package is not installed"
-msgstr ""
-
-#: portato/gui/gtk/views.py:87
-#, python-format
-msgid "No %(old)s language file installed. Falling back to %(new)s."
-msgstr ""
-
-#: portato/gui/gtk/views.py:92
-#, python-format
-msgid "No %(old)s language file installed. Disable highlighting."
-msgstr ""
-
-#: portato/gui/gtk/views.py:111
-#, python-format
-msgid "Error: %s"
-msgstr ""
-
 #: portato/gui/gtk/__init__.py:23
 msgid "Loading Portage"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:39
+#: portato/gui/gtk/wrapper.py:40
 msgid "oneshot"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:44
+#: portato/gui/gtk/wrapper.py:45
 #, python-format
 msgid "updating from version %s"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:46
+#: portato/gui/gtk/wrapper.py:47
 msgid "updating"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:51
+#: portato/gui/gtk/wrapper.py:52
 #, python-format
 msgid "downgrading from version %s"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:53
+#: portato/gui/gtk/wrapper.py:54
 msgid "downgrading"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:57
+#: portato/gui/gtk/wrapper.py:58
 msgid "IUSE changes:"
 msgstr ""
 
+#: portato/gui/gtk/wrapper.py:66
+msgid "(In Progress)"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:70
+msgid "Install"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:75
+msgid "Uninstall"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:81
+msgid "Update"
+msgstr ""
+
 #: portato/gui/gtk/dialogs.py:17
 msgid ""
 "There are some packages in the emerge queue and/or an emerge process is "
@@ -671,6 +705,12 @@
 msgstr ""
 
 #: portato/gui/gtk/dialogs.py:72
+msgid ""
+"This is the updates queue. You cannot remove single elements.\n"
+"Do you want to clear the whole queue instead?"
+msgstr ""
+
+#: portato/gui/gtk/dialogs.py:78
 msgid "Do you really want to clear the whole queue?"
 msgstr ""
 
@@ -712,6 +752,25 @@
 "%s"
 msgstr ""
 
+#: portato/gui/gtk/views.py:70
+msgid "Package is not installed"
+msgstr ""
+
+#: portato/gui/gtk/views.py:87
+#, python-format
+msgid "No %(old)s language file installed. Falling back to %(new)s."
+msgstr ""
+
+#: portato/gui/gtk/views.py:92
+#, python-format
+msgid "No %(old)s language file installed. Disable highlighting."
+msgstr ""
+
+#: portato/gui/gtk/views.py:111
+#, python-format
+msgid "Error: %s"
+msgstr ""
+
 #: portato/gui/gui_helper.py:125
 msgid "ALL"
 msgstr ""
=== portato.py
==================================================================
--- portato.py	(revision 636)
+++ portato.py	(patch 0.8.9.2 level 1)
@@ -102,7 +102,7 @@
 		try:
 			import shm_wrapper as shm
 		except ImportError:
-			from portato.shm import shm_wrapper as shm
+			from portato._shm import shm_wrapper as shm
 
 		mem = shm.create_memory(1024, permissions=0600)
 		sig = shm.create_semaphore(InitialValue = 0, permissions = 0600)
=== doc/TODO
==================================================================
--- doc/TODO	(revision 636)
+++ doc/TODO	(patch 0.8.9.2 level 1)
@@ -16,6 +16,7 @@
 - save/restore queue on exit/start
 - only remove already merged packages from queue
 - make sure, a package being removed from the queue is not needed as a dependency by another package
+- binary package support
 
 - "nach hause telefonieren" :)
 
@@ -30,7 +31,6 @@
 	- colors and font sizes
 
 - rotating systray icon
-- interactive emerges
 
 GTK:
 ----
@@ -38,6 +38,7 @@
 - show dependencies
 - reload package table when emerge is finished
 - dependency tree out of the installed packages
+- better display for search results
 
 Qt (stopped):
 ---
=== doc/Changelog
==================================================================
--- doc/Changelog	(revision 636)
+++ doc/Changelog	(patch 0.8.9.2 level 1)
@@ -7,7 +7,8 @@
 - handle new "use defaults" correctly
 - allowed the permanent change of a plugin status
 - added "ALL" category
-- new design
+- new design and handling
+- allowed interactive emerges
 
 0.8.6.2:
 - changed the pipe version and use shm instead (fixes issues with kdesu)
=== _shm/__init__.py
==================================================================
=== _shm/shm_wrapper.py
==================================================================
--- _shm/shm_wrapper.py	(revision 636)
+++ _shm/shm_wrapper.py	(patch 0.8.9.2 level 1)
@@ -0,0 +1,301 @@
+# shm_wrapper - A wrapper for the shm module which provides access
+# to System V shared memory and semaphores on *nix systems.
+#
+# Copyright (c) 2007 by Philip Semanchuk
+# Contact info at http://NikitaTheSpider.com/
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version 2
+# of the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+# Python modules
+import random
+import sys
+
+# Third party modules
+import shm
+
+r"""shm_wrapper - A wrapper for the shm module which provides access
+to System V shared memory and semaphores on *nix systems.
+
+The module shm is a Python wrapper around system functions like shmget. This
+module in turn offers higher-level, more Pythonic access to shared memory and
+semaphores.
+
+Full documentation is online at http://NikitaTheSpider.com/python/shm/
+
+"""
+
+def create_memory(size, permissions = 0666, InitCharacter = ' '):
+    """ Creates a new shared memory segment. One can destroy it either by calling the
+    module-level method remove_memory() or by calling the .remove() method of a handle to
+    said memory.
+    """
+    memory = None
+
+    # I create the memory using a randomly-generated key. I keep trying until I find one
+    # that works or until I hit an error.
+    while not memory:
+        key = random.randint(1, sys.maxint - 1)
+        try:
+            memory = shm.create_memory(key, size, permissions)
+        except shm.error, ExtraData:
+            if shm.memory_haskey(key):
+                # Oops, bad luck, the key exists. I'll try another. I can't call
+                # memory_haskey() before calling create_memory() because that would create
+                # a race condition where I could verify a key is not used but then another
+                # process could call create_memory() with that key before I got a chance to
+                # do so.
+                pass
+            else:
+                # Uh-oh, something fundamental is wrong.
+                raise shm.error, ExtraData
+
+    # Here I implicitly discard the memory handle object returned to me by shm and instead
+    # return my own handle to the shared memory segment.
+    memory = SharedMemoryHandle(key)
+
+    memory.write(InitCharacter[0] * memory.size)
+
+    return memory
+
+
+def remove_memory(key):
+    # Destroys the shared memory segment. Raises KeyError if the key doesn't exist.
+    shm.remove_memory(shm.getshmid(key))
+
+
+class SharedMemoryHandle(object):
+    def __init__(self, key):
+        self._MemoryHandle = None
+
+        # getshmid will raise a KeyError if there's no memory segment with this key.
+        shmid = shm.getshmid(key)
+        self._MemoryHandle = shm.memory(shmid)
+
+
+    def __del__(self):
+        if self._MemoryHandle:
+            # This will raise an error if the memory has been destroyed.
+            try:
+                if self._MemoryHandle.attached:
+                    self._MemoryHandle.detach()
+            except shm.error:
+                pass
+
+
+    def remove(self):
+        if self._MemoryHandle:
+            if self._MemoryHandle.attached:
+                self._MemoryHandle.detach()
+
+            shm.remove_memory(self._MemoryHandle.shmid)
+            self._MemoryHandle = None
+
+
+    def read(self, NumberOfBytes = 0, offset = 0):
+        if not self._MemoryHandle.attached:
+            self._MemoryHandle.attach()
+
+        if not NumberOfBytes:
+            NumberOfBytes = self._MemoryHandle.size - offset
+
+        return self._MemoryHandle.read(NumberOfBytes, offset)
+
+
+    def write(self, s, offset = 0):
+        if not self._MemoryHandle.attached:
+            self._MemoryHandle.attach()
+
+        self._MemoryHandle.write(s, offset)
+
+
+    # Properties start here ================================================================
+
+    # key
+    def __get_key(self): return self._MemoryHandle.key
+    def __set_key(self, foo): raise AttributeError
+    key = property(__get_key, __set_key)
+
+    # size of segment
+    def __get_size(self): return self._MemoryHandle.size
+    def __set_size(self, foo): raise AttributeError
+    size = property(__get_size, __set_size)
+
+    # permissions
+    def __get_permissions(self): return self._MemoryHandle.perm
+    def __set_permissions(self, permissions): self._MemoryHandle.setperm(permissions)
+    permissions = property(__get_permissions, __set_permissions)
+
+    # The number of processes currently attached to this memory segment.
+    def __get_number_attached(self): return self._MemoryHandle.nattch
+    def __set_number_attached(self, foo): raise AttributeError
+    number_attached = property(__get_number_attached, __set_number_attached)
+
+    # segment's uid
+    def __get_uid(self): return self._MemoryHandle.uid
+    def __set_uid(self, uid): self._MemoryHandle.setuid(uid)
+    uid = property(__get_uid, __set_uid)
+
+    # segment's gid
+    def __get_gid(self): return self._MemoryHandle.gid
+    def __set_gid(self, gid): self._MemoryHandle.setgid(gid)
+    gid = property(__get_gid, __set_gid)
+
+    # Creator uid (read-only)
+    def __get_creator_uid(self): return self._MemoryHandle.cuid
+    def __set_creator_uid(self, foo): raise AttributeError
+    creator_uid = property(__get_creator_uid, __set_creator_uid)
+
+    # Creator gid (read-only)
+    def __get_creator_gid(self): return self._MemoryHandle.cgid
+    def __set_creator_gid(self, foo): raise AttributeError
+    creator_gid = property(__get_creator_gid, __set_creator_gid)
+
+    # Creator pid (read-only)
+    def __get_creator_pid(self): return self._MemoryHandle.cpid
+    def __set_creator_pid(self, foo): raise AttributeError
+    creator_pid = property(__get_creator_pid, __set_creator_pid)
+
+    # pid of last process to operate on this segment (read-only)
+    def __get_last_pid(self): return self._MemoryHandle.lpid
+    def __set_last_pid(self, foo): raise AttributeError
+    last_pid = property(__get_last_pid, __set_last_pid)
+
+
+
+def create_semaphore(InitialValue = 1, permissions = 0666):
+    """ Creates a new semaphore. One can destroy it either by calling the
+    module-level method remove_semaphore() or by calling the .remove() method of a
+    handle to said semaphore.
+    """
+    semaphore = None
+
+    # I create the semaphore using a randomly-generated key. I keep trying until I find one
+    # that works or until I hit an error.
+    while not semaphore:
+        key = random.randint(1, sys.maxint - 1)
+        try:
+            semaphore = shm.create_semaphore(key, InitialValue, permissions)
+        except shm.error, ExtraData:
+            if shm.semaphore_haskey(key):
+                # Oops, bad luck, the key exists. I'll try another. I can't call
+                # memory_haskey() before calling create_semaphore() because that would create
+                # a race condition where I could verify a key is not used but then another
+                # process could call create_semaphore() with that key before I got a chance to
+                # do so.
+                pass
+            else:
+                # Uh-oh, something fundamental is wrong.
+                raise ExtraData
+
+    # Here I implicitly discard the semaphore object returned to me by shm and instead
+    # return my own handle to the semaphore.
+    return SemaphoreHandle(key)
+
+
+def remove_semaphore(key):
+    # Destroys the semaphore. Raises KeyError if the key doesn't exist.
+    shm.remove_semaphore(shm.getsemid(key))
+
+
+class SemaphoreHandle(object):
+    def __init__(self, key):
+        # getsemid will raise a KeyError if appropriate.
+        self._SemaphoreHandle = shm.semaphore(shm.getsemid(key))
+
+
+    def remove(self):
+        shm.remove_semaphore(self._SemaphoreHandle.semid)
+        self._SemaphoreHandle = None
+
+
+    def P(self):
+        # P = prolaag = probeer te verlagen (try to decrease)
+        self._SemaphoreHandle.P()
+
+
+    def V(self):
+        # V = verhoog (increase)
+        self._SemaphoreHandle.V()
+
+
+    def Z(self):
+        # Z = block until Zee semaphore is Zero
+        self._SemaphoreHandle.Z()
+
+
+    # Properties start here ================================================================
+    def __get_key(self): return self._SemaphoreHandle.key
+    def __set_key(self, foo): raise AttributeError
+    key = property(__get_key, __set_key)
+
+
+    def __get_value(self): return self._SemaphoreHandle.val
+    def __set_value(self, value): self._semaphore.setval(value)
+    value = property(__get_value, __set_value)
+
+
+    def __get_WaitingForZero(self): return self._SemaphoreHandle.zcnt
+    def __set_WaitingForZero(self, foo): raise AttributeError
+    WaitingForZero = property(__get_WaitingForZero, __set_WaitingForZero)
+
+
+    def __get_WaitingForNonZero(self): return self._SemaphoreHandle.ncnt
+    def __set_WaitingForNonZero(self, foo): raise AttributeError
+    WaitingForNonZero = property(__get_WaitingForNonZero, __set_WaitingForNonZero)
+
+
+    def __get_blocking(self): return self._SemaphoreHandle.blocking
+    def __set_blocking(self, block): self._SemaphoreHandle.setblocking(block)
+    blocking = property(__get_blocking, __set_blocking)
+
+
+    def __get_undo(self): raise AttributeError
+    def __set_undo(self, undo): self._SemaphoreHandle.setundo(undo)
+    undo = property(__get_undo, __set_undo)
+
+
+    # segment's uid
+    def __get_uid(self): return self._SemaphoreHandle.uid
+    def __set_uid(self, uid): self._SemaphoreHandle.setuid(uid)
+    uid = property(__get_uid, __set_uid)
+
+
+    # segment's gid
+    def __get_gid(self): return self._SemaphoreHandle.gid
+    def __set_gid(self, gid): self._SemaphoreHandle.setgid(gid)
+    gid = property(__get_gid, __set_gid)
+
+
+    # Creator uid (read-only)
+    def __get_creator_uid(self): return self._SemaphoreHandle.cuid
+    def __set_creator_uid(self, foo): raise AttributeError
+    creator_uid = property(__get_creator_uid, __set_creator_uid)
+
+
+    # Creator gid (read-only)
+    def __get_creator_gid(self): return self._SemaphoreHandle.cgid
+    def __set_creator_gid(self, foo): raise AttributeError
+    creator_gid = property(__get_creator_gid, __set_creator_gid)
+
+
+    # Creator pid -- since semaphores have a lot of the same properties as memory
+    # objects, one would expect creator PID to be exposed here, but it isn't
+    # made available by the system (true AFAICT for BSDs, OS X and Solaris).
+
+
+    # pid of last process to operate on this segment (read-only)
+    def __get_last_pid(self): return self._SemaphoreHandle.lpid
+    def __set_last_pid(self, foo): raise AttributeError
+    last_pid = property(__get_last_pid, __set_last_pid)
=== _shm/shmmodule.c
==================================================================
--- _shm/shmmodule.c	(revision 636)
+++ _shm/shmmodule.c	(patch 0.8.9.2 level 1)
@@ -0,0 +1,1396 @@
+/****************************************************************************
+ *
+ * shmmodule.c Copyright 1997, 1998 by INRIA. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY WARRANTIES, EXPRESS OR IMPLIED,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
+ * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ *
+ * IN NO EVENT SHALL THE INRIA OR THE AUTHORS BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES,
+ * INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,
+ * LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION, HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT,
+ * INCLUDING NEGLIGENCE OR OTHERWISE, ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ ***************************************************************************/
+
+/* Python Shared Memory module 
+   Written by Vladimir Marangozov  
+   Adopted by Philip Semanchuk 
+
+  This module provides an interface to System V shared memory IPC.
+
+  Version history:
+  - 1.0 (sometime in the 1990s) - Released by Mr. Marangozov
+  - 1.1 (Feb 2007) - Released by me, Philip Semanchuk. Fixes a few bugs (including some 
+        memory leaks) and adds the ability to read the blocking flag on semaphores.
+  - 1.1.1 (Mar 2007)- Updated setup.py to handle compile options for Linux users.
+  - 1.1.2 (Nov 2007) - Fixed a sprintf() format in repr to handle size_t.
+  - 1.1.3 (Nov 2007) - Changed #define of key to _key instead of __key for OS X Leopard.
+        Thanks to Bill Hart.
+  - 1.1.4 (Jan 2008) - Changed the reference to key in the ipc_perm structure to the 
+        explicit #define IPC_PERM_KEY_NAME. 
+
+  See http://NikitaTheSpider.com/python/shm/ for more thorough documentation, a more Pythonic 
+  wrapper, updates, contact info, setup.py, etc.
+
+
+  Module interface:
+
+  - shm.create_memory(int Key, int Size [,int Perm=0666]) --> object
+  - shm.create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object
+  - shm.error
+  - shm.ftok(string Path, int ProjId) --> int
+  - shm.getsemid(int Key) --> int
+  - shm.getshmid(int Key) --> int
+  - shm.memory(int Shmid) --> object
+  - shm.memory_haskey(int Key) --> int
+  - shm.remove_memory(int Shmid) --> None
+  - shm.remove_semaphore(int Semid) --> None
+  - shm.semaphore(int Semid) --> object
+  - shm.semaphore_haskey(int Key) --> int
+
+  Memory Objects:
+
+  + Members:
+
+    - m.addr	- attachment address in the process address space
+    - m.attached	- 0|1
+    - m.cgid	- gid of creator
+    - m.cpid	- pid of creator
+    - m.cuid	- uid of creator
+    - m.gid		- gid of owner
+    - m.key		- segment key or IPC_PRIVATE (=0)
+    - m.lpid	- pid of last shmop
+    - m.nattch	- current # of attached processes
+    - m.perm	- operation permission
+    - m.shmid	- shared memory segment id
+    - m.size	- segment size
+    - m.uid		- uid of owner
+
+  + Methods:
+
+    - m.attach([int Addr=0 [,int How=0]]) --> None
+    - m.detach() --> None
+    - m.read(int Nbytes [,int Offset=0]) --> string
+    - m.setgid(int Gid) --> None
+    - m.setperm(int Perm) --> None
+    - m.setuid(int Uid) --> None
+    - m.write(string Data [,int Offset=0]) --> None
+
+  Semaphore Objects:
+
+  + Members:
+
+    - s.cgid        - gid of creator
+    - s.cuid        - uid of creator
+    - s.gid         - gid of owner
+    - s.key         - semaphore key or IPC_PRIVATE (=0)
+    - s.lpid        - pid of last semop
+    - s.ncnt        - current # of processes waiting for s.val > 0
+    - s.perm        - operation permission
+    - s.semid       - semaphore id
+    - s.uid         - uid of owner
+    - s.val         - value of the semaphore counter
+    - s.zcnt        - current # of processes waiting for s.val == 0
+    - s.blocking    - whether or not the semaphore is in blocking mode
+
+  + Methods:
+
+    - s.P() --> None		- blocks if s.val == 0; decrements s.val
+    - s.V() --> None		- increments s.val
+    - s.Z() --> None		- blocks until s.val == 0
+    - s.setblocking(0|1) --> None
+    - s.setgid(int Gid) --> None
+    - s.setperm(int Perm) --> None
+    - s.setuid(int Uid) --> None
+    - s.setundo(0|1) --> None
+    - s.setval(int Value) --> None
+
+*/
+
+/* ------------------------------------------------------------------------- */
+#include "Python.h"
+#include "structmember.h"
+
+/* v1.1 - added */
+#ifdef __FreeBSD__
+#include <machine/param.h>  /* for system definition of PAGE_SIZE */
+#endif
+
+#include <sys/types.h>
+#include <sys/ipc.h>		/* for system's IPC_xxx definitions */
+#include <sys/shm.h>		/* for shmget, shmat, shmdt, shmctl */
+#include <sys/sem.h>		/* for semget, semctl, semop */
+
+/* v1.1.4 - The name of this member varies and is sniffed out by setup.py. */
+#if defined(ZERO_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME   key
+#elif defined(ONE_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME  _key
+#elif defined(TWO_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME __key
+#endif
+
+/*
+-- Exception type for errors detected by this module.
+*/
+
+static PyObject *PyShm_Error;
+
+/*
+-- Convenience function to raise an error according to errno.
+*/
+
+static PyObject *
+PyShm_Err(void)
+{
+    return PyErr_SetFromErrno(PyShm_Error);
+}
+
+/*
+-- The object holding a shared memory segment
+*/
+
+typedef struct {
+    PyObject_HEAD
+    int shmid;			/* shared memory id	*/
+    int mode;			/* attachment mode	*/
+    void *addr;			/* shmseg start address	*/
+    struct shmid_ds ds;		/* data structure	*/
+} PyShmMemoryObject;
+
+staticforward PyTypeObject	PyShmMemory_Type;
+
+#define PyShmObj		PyShmMemoryObject
+#define PyShmMemory_Check(op)	((op)->ob_type == &PyShmMemory_Type)
+
+/*
+-- The object holding a semaphore
+*/
+
+typedef struct {
+    PyObject_HEAD
+    int semid;			/* semaphore id		*/
+    short opflag;		/* IPC_NOWAIT, SEM_UNDO	*/
+    struct semid_ds ds;		/* data structure	*/
+} PyShmSemaphoreObject;
+
+#ifndef HAVE_UNION_SEMUN
+union semun {
+    int val;                    /* used for SETVAL only */
+    struct semid_ds *buf;       /* for IPC_STAT and IPC_SET */
+    unsigned short *array;      /* used for GETALL and SETALL */
+};
+#endif
+
+typedef union semun semctl_arg;
+
+staticforward PyTypeObject	PyShmSemaphore_Type;
+
+#define PyShmSemObj		PyShmSemaphoreObject
+#define PyShmSemaphore_Check(op) ((op)->ob_type == &PyShmSemaphore_Type)
+
+/*
+-- Internal dictionaries for Python memory and semaphore objects
+*/
+
+static PyObject *shm_dict = NULL;
+static PyObject *sem_dict = NULL;
+
+/************************************************************/
+/*                       Memory Objects                     */
+/************************************************************/
+
+/* This is to check the validity of a Python memory object
+   (and to refresh its data status structure). Notably, we
+   have to check that the real memory segment it points to
+   is still in memory and hasn't changed (test its id and
+   size). It could be that the segment has been removed and
+   created again by someone else with the same key. This is
+   fine as far as the segment (1) has the same id and size,
+   and (2) is accessible via shmctl. If you have a better
+   test, you're welcome :-) */
+
+static int
+check_memory_identity(PyShmObj *o)
+{
+    int new_shmid;
+    int old_shmid = o->shmid;
+    int old_size = o->ds.shm_segsz;
+    key_t old_key = o->ds.shm_perm.IPC_PERM_KEY_NAME;
+
+    /*
+    -- 1. Try to get the segment identified by the old key (if not IPC_PRIVATE)
+    -- 2. On failure or on mismatch of the new and the old id -> fail.
+    -- 3. Try to refresh the object's status using the new id.
+    -- 4. On failure (the segment cannot be accessed) -> fail.
+    -- 5. Finaly, compare the old size and the one we got via the new id.
+    */
+    if (old_key != IPC_PRIVATE) {
+        new_shmid = shmget(old_key, 0, 0);
+        if (new_shmid != old_shmid)
+            return 0;
+    }
+    else
+        new_shmid = old_shmid;
+    if ((shmctl(new_shmid, IPC_STAT, &(o->ds)) != -1) &&
+        (old_size == o->ds.shm_segsz) &&
+	    (old_key == o->ds.shm_perm.IPC_PERM_KEY_NAME))
+        return 1;
+    return 0;
+}
+
+/* Convenience macro for updating the shared memory data status structure */
+
+#define refresh_memory_status(o)					\
+    if (!check_memory_identity(o)) {					\
+	   PyErr_SetString(PyShm_Error, "can't access shared memory segment");		\
+	   return NULL;							\
+    }
+
+/*
+-- attach([,address=0 [,how=0]])
+*/
+
+/* Attach the shared memory segment to the process address space */
+
+static PyObject *
+PyShmMemory_attach(PyShmObj *self, PyObject *args)
+{
+    unsigned long address = 0;
+    int mode = 0;
+    void *addr, *old_addr;
+
+    if (!PyArg_ParseTuple(args, "|li", &address, &mode))
+	   return NULL;
+    refresh_memory_status(self);
+    /* return if already attached with the same mode to the same address */
+    if ((self->addr != NULL) && (self->mode == mode) &&
+        ((address == 0) || (self->addr == (void *)address))) {
+    	Py_INCREF(Py_None);
+    	return Py_None;
+    }
+    /* perform the attach */
+    addr = (void *)shmat(self->shmid, (void *)address, mode);
+    if (addr  == (void *)-1)
+	   return PyShm_Err();
+    old_addr = self->addr;
+    self->addr = addr;
+    self->mode = mode;
+    /* XXX - multiple attachments of the same shared memory segment
+             to different locations of the process address space is
+	     not supported. */
+    shmdt(old_addr);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- detach()
+*/
+
+/* Detach the memory object from the process address space */
+
+static PyObject *
+PyShmMemory_detach(PyShmObj *self, PyObject *args)
+{
+    if (!PyArg_NoArgs(args))
+	   return NULL;
+    if (self->addr != NULL) {
+        refresh_memory_status(self);
+        if (shmdt(self->addr) != 0)
+            return PyShm_Err();
+        self->addr = NULL;		/* mark as detached */
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- read(int Nbytes [,int Offset=0]) --> string
+*/
+
+/* Return a string of n bytes peeked from the shared memory segment */
+
+static PyObject *
+PyShmMemory_read(PyShmObj *self, PyObject *args)
+{
+    unsigned long n, offset = 0;
+    char buf[128];
+    char *addr;
+
+    if (!PyArg_ParseTuple(args, "l|l", &n, &offset))
+	    return NULL;
+    refresh_memory_status(self);
+    if (self->addr == NULL) {
+        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
+        return NULL;
+    }
+    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
+        sprintf(buf, "read() argument%s exceed%s upper memory limit",
+            offset ? "s" : "", offset ? "" : "s");
+        PyErr_SetString(PyShm_Error, buf);
+        return NULL;
+    }
+    addr = (char *)((unsigned long)self->addr + offset);
+    return PyString_FromStringAndSize(addr, n);
+}
+
+/*
+-- setgid(int Gid)
+*/
+
+static PyObject *
+PyShmMemory_setgid(PyShmObj *self, PyObject *args)
+{
+    long newgid, oldgid;
+
+    if (!PyArg_ParseTuple(args, "l", &newgid))
+	    return NULL;
+    refresh_memory_status(self);
+    oldgid = (long)self->ds.shm_perm.gid;
+    self->ds.shm_perm.gid = (gid_t)newgid;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.gid = (gid_t)oldgid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setperm(int Perm)
+*/
+
+static PyObject *
+PyShmMemory_setperm(PyShmObj *self, PyObject *args)
+{
+    long newmode, oldmode;
+
+    if (!PyArg_ParseTuple(args, "l", &newmode))
+        return NULL;
+    refresh_memory_status(self);
+    newmode &= 0777;	/* permission bits only */
+    oldmode = (mode_t)self->ds.shm_perm.mode;
+    self->ds.shm_perm.mode ^= 0777;
+    self->ds.shm_perm.mode |= (mode_t)newmode;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.mode = (mode_t)oldmode;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setuid(int Uid)
+*/
+
+static PyObject *
+PyShmMemory_setuid(PyShmObj *self, PyObject *args)
+{
+    long newuid, olduid;
+
+    if (!PyArg_ParseTuple(args, "l", &newuid))
+        return NULL;
+    refresh_memory_status(self);
+    olduid = (long)self->ds.shm_perm.uid;
+    /* v1.1 - fixed typo that set the group id rather than the user id */
+    self->ds.shm_perm.uid = (uid_t)newuid;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.uid = (uid_t)olduid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- write(string Data [, int Offset=0])
+*/
+
+/* Write a string to the shared memory segment. */
+
+static PyObject *
+PyShmMemory_write(PyShmObj *self, PyObject *args)
+{
+    char *data;
+    unsigned long n, offset = 0;
+    char buf[128];
+    char *addr;
+
+    if (!PyArg_ParseTuple(args, "s#|l", &data, &n, &offset))
+        return NULL;
+    refresh_memory_status(self);
+    if (self->addr == NULL) {
+        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
+        return NULL;
+    }
+    if (self->mode & SHM_RDONLY) {
+        PyErr_SetString(PyShm_Error,
+                "can't write on read-only attached memory");
+        return NULL;
+    }
+    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
+        sprintf(buf, "write() argument%s exceed%s upper memory limit",
+            offset ? "s" : "", offset ? "" : "s");
+        PyErr_SetString(PyShm_Error, buf);
+        return NULL;
+    }
+    addr = (void *)((unsigned long)self->addr + offset);
+    memcpy(addr, data, n);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of methods for shared memory objects */
+
+static PyMethodDef memory_methods[] = {
+    {"attach",	(PyCFunction)PyShmMemory_attach,	1,
+     "attach([int Addr=0 [,int How=0]]) --> None | except shm.error"},
+    {"detach",	(PyCFunction)PyShmMemory_detach,	0,
+     "detach() --> None | except shm.error"},
+    {"read",	(PyCFunction)PyShmMemory_read,		1,
+     "read(int Nbytes [,int Offset=0]) --> string | except shm.error"},
+    {"setgid",	(PyCFunction)PyShmMemory_setgid,	1,
+     "setgid(int Gid) --> None | except shm.error"},
+    {"setperm",	(PyCFunction)PyShmMemory_setperm,	1,
+     "setperm(int Perm) --> None | except shm.error"},
+    {"setuid",	(PyCFunction)PyShmMemory_setuid,	1,
+     "setuid(int Uid) --> None | except shm.error"},
+    {"write",	(PyCFunction)PyShmMemory_write,		1,
+     "write(string Data [,int Offset=0]) --> None | except shm.error"},
+    {NULL,	NULL}		/* sentinel */
+};
+
+#define OFF(x)	offsetof(PyShmMemoryObject, x)
+#define OFF1(x)	OFF(ds) + offsetof(struct shmid_ds, x)
+#define OFF2(x)	OFF1(shm_perm) + offsetof(struct ipc_perm, x)
+
+/* List of members for shared memory objects */
+
+/* Note: member types are set in the initshm function.
+   Members which need separate processing are:
+   - addr --> it is not part of the shmid_ds structure
+   - attached --> function depending on addr
+   - nattch  --> system dependent declaration in shmid_ds (unknown type)
+   - perm --> return permission (lower 9) bits only of ds.shm_perm.mode
+*/
+
+static struct memberlist memory_memberlist[] = {
+    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
+    {"cpid",	T_INT,	OFF1(shm_cpid),		RO},	/* 1  (pid_t)  */
+    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 2  (uid_t)  */
+    {"key", T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 3  (key_t)  */
+    {"lpid",	T_INT,	OFF1(shm_lpid),		RO},	/* 4  (pid_t)  */
+    {"shmid",	T_INT,	OFF(shmid),		RO},	/* 5  (int)    */
+    {"size",	T_INT,	OFF1(shm_segsz),	RO},	/* 6  (int)    */
+    {"gid",	T_INT,	OFF2(gid),		RO},	/* 7  (gid_t)  */
+    {"uid",	T_INT,	OFF2(uid),		RO},	/* 8  (uid_t)  */
+    /* The following members are implemented without this table */
+    {"addr",	T_INT,	0,			RO},	/* 9  (void *) */
+    {"attached",T_INT,	0,			RO},	/* 10  (int)    */
+    {"nattch",	T_INT,	0,			RO},	/* 11 sys.dep. */
+    {"perm",	T_INT,	0,			RO},	/* 12 (mode_t) */
+    {NULL}			/* sentinel */
+};
+
+#undef OFF
+#undef OFF1
+#undef OFF2
+
+static void
+PyShmMemory_dealloc(PyShmObj *self)
+{
+    /* del shm_dict[key], ignore if it fails */
+    if (PyDict_DelItem(shm_dict, PyInt_FromLong(self->shmid)) == -1)
+        PyErr_Clear();
+    /* all references in the current process to the shared
+       memory segment are lost, so if attached, detach it.
+       XXX: This is not true when Python is embedded.
+
+    if (self->addr != NULL) {
+	shmdt(self->addr);
+    }
+    */
+    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
+    PyObject_Del(self);
+}
+
+static PyObject *
+PyShmMemory_getattr(PyShmObj *self, char *name)
+{
+    PyObject *res;
+
+    res = Py_FindMethod(memory_methods, (PyObject *)self, name);
+    if (res != NULL)
+        return res;
+    PyErr_Clear();
+    refresh_memory_status(self);
+    if (strcmp(name, "attached") == 0)
+        return PyInt_FromLong((self->addr == NULL) ? 0 : 1);
+    if (strcmp(name, "addr") == 0) {
+        if (self->addr != NULL)
+            return PyInt_FromLong((unsigned long)self->addr);
+        else {
+            Py_INCREF(Py_None);
+            return Py_None;
+        }
+    }
+    if (strcmp(name, "nattch") == 0)
+        return PyInt_FromLong(self->ds.shm_nattch);
+    if (strcmp(name, "perm") == 0)
+        return PyInt_FromLong(self->ds.shm_perm.mode & 0777);
+    return PyMember_Get((char *)self, memory_memberlist, name);
+}
+
+static PyObject *
+PyShmMemory_repr(PyShmObj *self, char *name)
+{
+    char buf[100];
+    char buf2[20];
+
+    refresh_memory_status(self);
+    if (self->addr == NULL)
+        sprintf(buf2, "None");
+    else
+        /* v 1.1 - changed format from %lx to %p. */
+        /* v 1.1.2 - changed %u to %zu. */
+        sprintf(buf2, "0x%p", self->addr);
+    sprintf(buf, "<%s shared memory object, id=%d, size=%zu, addr=%s>",
+	    (self->addr == NULL) ? "detached" : (self->mode & SHM_RDONLY) ?
+	    "attached RO" : "attached R/W",
+	    self->shmid,
+	    self->ds.shm_segsz,
+	    buf2);
+    return PyString_FromString(buf);
+}
+
+/* Type object for shared memory objects */
+
+static PyTypeObject PyShmMemory_Type = {
+    PyObject_HEAD_INIT(&PyType_Type)
+    0,					/*ob_size*/
+    "shared memory",			/*tp_name*/
+    sizeof(PyShmObj),			/*tp_size*/
+    0,					/*tp_itemsize*/
+    /* methods */
+    (destructor)PyShmMemory_dealloc,	/*tp_dealloc*/
+    0,					/*tp_print*/
+    (getattrfunc)PyShmMemory_getattr,	/*tp_getattr*/
+    0,					/*tp_setattr*/
+    0,					/*tp_compare*/
+    (reprfunc)PyShmMemory_repr,		/*tp_repr*/
+    0,					/*tp_as_number*/
+    0,					/*tp_as_sequence*/
+    0,					/*tp_as_mapping*/
+};
+
+/************************************************************/
+/*                     Semaphore Objects                    */
+/************************************************************/
+
+/* This is to check the validity of a Python semaphore object */
+
+static int
+check_semaphore_identity(PyShmSemObj *o)
+{
+    int new_semid;
+    int old_semid = o->semid;
+    unsigned short old_nsems = o->ds.sem_nsems;
+    key_t old_key = o->ds.sem_perm.IPC_PERM_KEY_NAME;
+    semctl_arg arg;
+
+    if (old_key != IPC_PRIVATE) {
+        new_semid = semget(old_key, 0, 0);
+        if (new_semid != old_semid)
+            return 0;
+    }
+    else
+        new_semid = old_semid;
+    arg.buf = &(o->ds);
+    if ((semctl(new_semid, 0, IPC_STAT, arg) != -1) &&
+        (old_nsems == o->ds.sem_nsems) &&
+        (old_key == o->ds.sem_perm.IPC_PERM_KEY_NAME))
+        return 1;
+    return 0;
+}
+
+/* Convenience macro for updating the semaphore data status structure */
+
+#define refresh_semaphore_status(o)					\
+    if (!check_semaphore_identity(o)) {					\
+        PyErr_SetString(PyShm_Error,					\
+                "can't access semaphore");			\
+	return NULL;							\
+    }
+
+/*
+-- P()
+*/
+
+static PyObject *
+PyShmSemaphore_P(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = -1;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- V()
+*/
+
+static PyObject *
+PyShmSemaphore_V(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = 1;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- Z()
+*/
+
+static PyObject *
+PyShmSemaphore_Z(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = 0;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setblocking(0|1)
+*/
+
+static PyObject *
+PyShmSemaphore_setblocking(PyShmSemObj *self, PyObject *args)
+{
+    int block;
+
+    if (!PyArg_ParseTuple(args, "i", &block))
+        return NULL;
+    refresh_semaphore_status(self);
+    if (block)
+        self->opflag &= ~IPC_NOWAIT;
+    else
+        self->opflag |= IPC_NOWAIT;
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setgid(int Gid)
+*/
+
+static PyObject *
+PyShmSemaphore_setgid(PyShmSemObj *self, PyObject *args)
+{
+    long newgid, oldgid;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newgid))
+        return NULL;
+    refresh_semaphore_status(self);
+    oldgid = (long)self->ds.sem_perm.gid;
+    self->ds.sem_perm.gid = (gid_t)newgid;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.gid = (gid_t)oldgid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setperm(int Perm)
+*/
+
+static PyObject *
+PyShmSemaphore_setperm(PyShmSemObj *self, PyObject *args)
+{
+    long newmode, oldmode;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newmode))
+        return NULL;
+    refresh_semaphore_status(self);
+    newmode &= 0777;	/* permission bits only */
+    oldmode = (mode_t)self->ds.sem_perm.mode;
+    self->ds.sem_perm.mode ^= 0777;
+    self->ds.sem_perm.mode |= (mode_t)newmode;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.mode = (mode_t)oldmode;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setuid(int Uid)
+*/
+
+static PyObject *
+PyShmSemaphore_setuid(PyShmSemObj *self, PyObject *args)
+{
+    long newuid, olduid;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newuid))
+        return NULL;
+    refresh_semaphore_status(self);
+    olduid = (long)self->ds.sem_perm.uid;
+    /* v1.1 - fixed typo that set the group id rather than the user id */
+    self->ds.sem_perm.uid = (uid_t)newuid;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.uid = (uid_t)olduid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setundo(0|1)
+*/
+
+static PyObject *
+PyShmSemaphore_setundo(PyShmSemObj *self, PyObject *args)
+{
+    int undo;
+
+    if (!PyArg_ParseTuple(args, "i", &undo))
+        return NULL;
+    refresh_semaphore_status(self);
+    if (undo)
+        self->opflag |= SEM_UNDO;
+    else
+        self->opflag &= ~SEM_UNDO;
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setval(int Value)
+*/
+
+static PyObject *
+PyShmSemaphore_setval(PyShmSemObj *self, PyObject *args)
+{
+    int value;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "i", &value))
+        return NULL;
+    refresh_semaphore_status(self);
+    arg.val = value;
+    if (semctl(self->semid, 0, SETVAL, arg) == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of methods for semaphore objects */
+
+static PyMethodDef semaphore_methods[] = {
+    {"P",		(PyCFunction)PyShmSemaphore_P,			0,
+     "P() --> None | except shm.error"},
+    {"V",		(PyCFunction)PyShmSemaphore_V,			0,
+     "V() --> None | except shm.error"},
+    {"Z",		(PyCFunction)PyShmSemaphore_Z,			0,
+     "Z() --> None | except shm.error"},
+    {"setblocking",	(PyCFunction)PyShmSemaphore_setblocking,	1,
+     "setblocking(0|1) --> None"},
+    {"setgid",		(PyCFunction)PyShmSemaphore_setgid,		1,
+     "setgid(int Gid) --> None | except shm.error"},
+    {"setperm",		(PyCFunction)PyShmSemaphore_setperm,		1,
+     "setperm(int Perm) --> None | except shm.error"},
+    {"setuid",		(PyCFunction)PyShmSemaphore_setuid,		1,
+     "setuid(int Uid) --> None | except shm.error"},
+    {"setundo",		(PyCFunction)PyShmSemaphore_setundo,		1,
+     "setundo(0|1) --> None"},
+    {"setval",		(PyCFunction)PyShmSemaphore_setval,		1,
+     "setval(int Value) --> None | except shm.error"},
+    {NULL,	NULL}		/* sentinel */
+};
+
+#define OFF(x)	offsetof(PyShmSemaphoreObject, x)
+#define OFF1(x)	OFF(ds) + offsetof(struct semid_ds, x)
+#define OFF2(x)	OFF1(sem_perm) + offsetof(struct ipc_perm, x)
+
+/* List of members for semaphore objects */
+
+/* Note: member types are set in the initshm function.
+   Members which need separate processing are:
+   - val, lpid, ncnt, zcnt --> in kernel memory, not accessible from a process
+   - perm --> return permission (lower 9) bits only of ds.sem_perm.mode
+   - blocking --> in opflags
+*/
+
+static struct memberlist semaphore_memberlist[] = {
+    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
+    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 1  (uid_t)  */
+    {"key",	    T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 2  (key_t)  */
+    {"semid",	T_INT,	OFF(semid),		RO},	/* 3  (int)    */
+    {"gid",	    T_INT,	OFF2(gid),		RO},	/* 4  (gid_t)  */
+    {"uid",	    T_INT,	OFF2(uid),		RO},	/* 5  (uid_t)  */
+    /* The following members are implemented without this table */
+    {"lpid",	T_INT,	0,			RO},	/* 6  (ushort) */
+    {"ncnt",	T_INT,	0,			RO},	/* 7  (ushort) */
+    {"perm",	T_INT,	0,			RO},	/* 8  (mode_t) */
+    {"val",	    T_INT,	0,			RO},	/* 9  (ushort) */
+    {"zcnt",	T_INT,	0,			RO},	/* 10 (ushort) */
+    {"blocking",T_INT,	0,			RO},	/* 11 (ushort) */
+    {NULL}			/* sentinel */
+};
+
+#undef OFF
+#undef OFF1
+#undef OFF2
+
+static void
+PyShmSemaphore_dealloc(PyShmSemObj *self)
+{
+    /* del sem_dict[key], ignore if it fails */
+    if (PyDict_DelItem(sem_dict, PyInt_FromLong(self->semid)) == -1)
+        PyErr_Clear();
+    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
+    PyObject_Del(self);
+}
+
+static PyObject *
+PyShmSemaphore_getattr(PyShmSemObj *self, char *name)
+{
+    PyObject *res;
+
+    res = Py_FindMethod(semaphore_methods, (PyObject *)self, name);
+    if (res != NULL)
+        return res;
+    PyErr_Clear();
+    refresh_semaphore_status(self);
+    if (strcmp(name, "val") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETVAL, 0));
+    if (strcmp(name, "lpid") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETPID, 0));
+    if (strcmp(name, "ncnt") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETNCNT, 0));
+    if (strcmp(name, "zcnt") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETZCNT, 0));
+    if (strcmp(name, "perm") == 0)
+        return PyInt_FromLong(self->ds.sem_perm.mode & 0777);
+    /* v1.1 - added blocking */
+    if (strcmp(name, "blocking") == 0)
+        return PyInt_FromLong(self->opflag & IPC_NOWAIT ? 0 : 1);
+    return PyMember_Get((char *)self, semaphore_memberlist, name);
+}
+
+static PyObject *
+PyShmSemaphore_repr(PyShmSemObj *self, char *name)
+{
+    /* v1.1 - added blocking */
+    char buf[200];
+
+    refresh_semaphore_status(self);
+    sprintf(buf, "<semaphore object, id=%d, val=%d, ncnt=%d, zcnt=%d, blocking=%d>",
+            self->semid,
+            semctl(self->semid, 0, GETVAL, 0),
+            semctl(self->semid, 0, GETNCNT, 0),
+            semctl(self->semid, 0, GETZCNT, 0),
+            self->opflag & IPC_NOWAIT ? 0 : 1);
+    return PyString_FromString(buf);
+}
+
+/* Type object for semaphore objects */
+
+static PyTypeObject PyShmSemaphore_Type = {
+    PyObject_HEAD_INIT(&PyType_Type)
+    0,					/*ob_size*/
+    "semaphore",			/*tp_name*/
+    sizeof(PyShmSemObj),		/*tp_size*/
+    0,					/*tp_itemsize*/
+    /* methods */
+    (destructor)PyShmSemaphore_dealloc,	/*tp_dealloc*/
+    0,					/*tp_print*/
+    (getattrfunc)PyShmSemaphore_getattr,/*tp_getattr*/
+    0,					/*tp_setattr*/
+    0,					/*tp_compare*/
+    (reprfunc)PyShmSemaphore_repr,	/*tp_repr*/
+    0,					/*tp_as_number*/
+    0,					/*tp_as_sequence*/
+    0,					/*tp_as_mapping*/
+};
+
+/************************************************************/
+/*                      Module Interface                    */
+/************************************************************/
+
+/*
+-- ftok(string Path, int ProjId) -> int
+*/
+
+/* Compute a key by using the system's ftok algorithm */
+
+static PyObject *
+PyShm_ftok(PyObject *self, PyObject *args)
+{
+    char *path;
+    char id;
+    key_t key;
+
+    if (!PyArg_ParseTuple(args, "sb", &path, &id))
+        return NULL;
+    key = ftok(path, id);
+    return PyInt_FromLong((long)key);
+}
+
+/*
+-- getshmid(int Key) --> int | except KeyError
+*/
+
+/* Return a shared memory segment id from a given key */
+
+static PyObject *
+PyShm_getshmid(PyObject *self, PyObject *args)
+{
+    long key;
+    int shmid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    shmid = shmget((key_t)key, 0, 0);
+    if (shmid == -1) {
+        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
+        return NULL;
+    }
+    return PyInt_FromLong(shmid);
+}
+
+/*
+-- memory_haskey(int Key) --> int
+*/
+
+/* Check whether there is a shared memory segment with the given key */
+
+static PyObject *
+PyShm_memory_haskey(PyObject *self, PyObject *args)
+{
+    long key;
+    int shmid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    shmid = shmget((key_t)key, 0, 0);
+    return PyInt_FromLong((shmid == -1) ? 0 : 1);
+}
+
+/*
+-- memory(int Shmid) --> object | except shm.error
+*/
+
+/* Get an existing shared memory segment and return it as a python object. */
+
+static PyObject *
+PyShm_memory(PyObject *self, PyObject *args)
+{
+    int shmid;
+    PyShmObj *o;
+    PyObject *keyo;
+
+    if (!PyArg_ParseTuple(args, "i", &shmid))
+        return NULL;
+    keyo = PyInt_FromLong(shmid);
+    /* get the object from the dictionary */
+    if (PyMapping_HasKey(shm_dict, keyo)) {
+        o = (PyShmObj *)PyDict_GetItem(shm_dict, keyo);
+        Py_INCREF(o);
+    }
+    else {
+        /* not found, create it */
+        if ((o = PyObject_NEW(PyShmObj, &PyShmMemory_Type)) == NULL)
+            return NULL;
+        o->shmid = shmid;
+        o->addr = NULL;
+        o->mode = 0;
+        /* shm_dict[shmid] = o */
+        if (PyDict_SetItem(shm_dict, keyo, (PyObject *)o) == -1) {
+            Py_DECREF(o);
+            PyErr_SetString(PyShm_Error, "can't initialize shared memory object");
+            return NULL;
+        }
+        Py_DECREF(o);	/* the owned reference in shm_dict doesn't count! */
+    }
+    /* v1.1 - plugged memory leak */
+    Py_DECREF(keyo);
+    /* set up the status data */
+    if (shmctl(o->shmid, IPC_STAT, &(o->ds)) == -1) {
+        Py_DECREF(o);
+        PyErr_SetString(PyShm_Error, "can't access shared memory segment");
+        return NULL;
+    }
+    return (PyObject *)o;
+}
+
+/*
+-- create_memory(int Key, int Size [,int Perm=0666]) --> object
+*/
+
+/* Create a new shared memory segment. */
+
+static PyObject *
+PyShm_create_memory(PyObject *self, PyObject *args)
+{
+    long key;
+    int size, shmid;
+    int perm = 0666;	/* Default permission is -rw-rw-rw- */
+    PyObject *py_shmid;
+    PyObject *memory;
+
+    if (!PyArg_ParseTuple(args, "li|i", &key, &size, &perm))
+        return NULL;
+    shmid = shmget((key_t)key, size, perm | IPC_CREAT | IPC_EXCL);
+    if (shmid == -1)
+        return PyShm_Err();
+    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
+    py_shmid = Py_BuildValue("(i)", shmid);
+    memory = PyShm_memory(self, py_shmid);
+    Py_DECREF(py_shmid);
+
+    return memory;
+}
+
+/*
+-- remove_memory(int Shmid) --> None | except shm.error
+*/
+
+/* Remove an existing shared memory segment. */
+
+static PyObject *
+PyShm_remove_memory(PyObject *self, PyObject *args)
+{
+    int shmid, res;
+
+    if (!PyArg_ParseTuple(args, "i", &shmid))
+        return NULL;
+    res = shmctl(shmid, IPC_RMID, 0);	/* remove it */
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- getsemid(int Key) --> int | except KeyError
+*/
+
+/* Return a semaphore id from a given key */
+
+static PyObject *
+PyShm_getsemid(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    semid = semget((key_t)key, 0, 0);
+    if (semid == -1) {
+        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
+        return NULL;
+    }
+    return PyInt_FromLong(semid);
+}
+
+/*
+-- semaphore_haskey(int Key) --> int
+*/
+
+/* Check whether there is a semaphore with the given key */
+
+static PyObject *
+PyShm_semaphore_haskey(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    semid = semget((key_t)key, 0, 0);
+    return PyInt_FromLong((semid == -1) ? 0 : 1);
+}
+
+/*
+-- semaphore(int Semid) --> object
+*/
+
+/* Get an existing semaphore and return it as a python object. */
+
+static PyObject *
+PyShm_semaphore(PyObject *self, PyObject *args)
+{
+    int semid;
+    PyShmSemObj *o;
+    PyObject *keyo;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "i", &semid))
+        return NULL;
+    keyo = PyInt_FromLong(semid);
+    /* get the object from the dictionary */
+    if (PyMapping_HasKey(sem_dict, keyo)) {
+        o = (PyShmSemObj *)PyDict_GetItem(sem_dict, keyo);
+        Py_INCREF(o);
+    }
+    else {
+        /* not found, create it */
+        if ((o = PyObject_NEW(PyShmSemObj, &PyShmSemaphore_Type)) == NULL)
+            return NULL;
+        o->semid = semid;
+        o->opflag = 0;
+        /* sem_dict[semid] = o */
+        if (PyDict_SetItem(sem_dict, keyo, (PyObject *)o) == -1) {
+            Py_DECREF(o);
+            PyErr_SetString(PyShm_Error, "can't initialize semaphore object");
+            return NULL;
+        }
+        Py_DECREF(o);	/* the owned reference in sem_dict doesn't count! */
+    }
+    /* v1.1 - plugged memory leak */
+    Py_DECREF(keyo);
+    /* set up the status data */
+    arg.buf = &(o->ds);
+    if (semctl(o->semid, 0, IPC_STAT, arg) == -1) {
+        Py_DECREF(o);
+        PyErr_SetString(PyShm_Error, "can't access semaphore");
+        return NULL;
+    }
+    return (PyObject *)o;
+}
+
+/*
+-- create_semaphore(int Key, [,int Value=1 [,int Perm=0666]]) --> object
+*/
+
+/* Create a new semaphore. */
+
+static PyObject *
+PyShm_create_semaphore(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+    int value = 1;
+    int perm = 0666;	/* Default permission is -rw-rw-rw- */
+    semctl_arg arg;
+    PyObject *py_shmid;
+    PyObject *semaphore;
+
+    if (!PyArg_ParseTuple(args, "l|ii", &key, &value, &perm))
+        return NULL;
+    semid = semget((key_t)key, 1, perm | IPC_CREAT | IPC_EXCL);
+    arg.val = value;
+    if (!((semid != -1) && (semctl(semid, 0, SETVAL, arg) != -1)))
+	   return PyShm_Err();
+    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
+    py_shmid = Py_BuildValue("(i)", semid);
+    semaphore = PyShm_semaphore(self, py_shmid);
+    Py_DECREF(py_shmid);
+
+    return semaphore;
+}
+
+/*
+-- remove_semaphore(int Semid) --> None | except shm.error
+*/
+
+/* Remove an existing semaphore. */
+
+static PyObject *
+PyShm_remove_semaphore(PyObject *self, PyObject *args)
+{
+    int semid, res;
+
+    if (!PyArg_ParseTuple(args, "i", &semid))
+        return NULL;
+    res = semctl(semid, 0, IPC_RMID, 0);	/* remove it */
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of functions exported by this module. */
+
+static PyMethodDef PyShm_methods[] = {
+    {"create_memory",		PyShm_create_memory,	1,
+     "create_memory(int Key, int Size [,int Perm=0666]) --> object | except shm.error"},
+    {"create_semaphore",	PyShm_create_semaphore,	1,
+     "create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object | except shm.error"},
+    {"ftok",			PyShm_ftok,		1,
+     "ftok(string Path, int ProjId) --> int | except shm.error"},
+    {"getsemid",		PyShm_getsemid,		1,
+     "getsemid(int Key) --> int | except KeyError"},
+    {"getshmid",		PyShm_getshmid,		1,
+     "getshmid(int Key) --> int | except KeyError"},
+    {"memory_haskey",		PyShm_memory_haskey,	1,
+     "memory_haskey(int Key) --> int"},
+    {"memory",			PyShm_memory,		1,
+     "memory(int Shmid) --> object | except shm.error"},
+    {"semaphore",		PyShm_semaphore,	1,
+     "semaphore(int Semid) --> object | except shm.error"},
+    {"semaphore_haskey",	PyShm_semaphore_haskey,	1,
+     "semaphore_haskey(int Key) --> int"},
+    {"remove_memory",		PyShm_remove_memory,	1,
+     "remove_memory(int Shmid) --> None | except shm.error"},
+    {"remove_semaphore",	PyShm_remove_semaphore,	1,
+     "remove_semaphore(int Semid) --> None | except shm.error"},
+    {NULL,			NULL}		/* Sentinel */
+};
+
+
+/* Initialize this module */
+
+/* This is for inserting constants in the module's dictionary */
+
+static void
+insint(PyObject *d, char *name, int value)
+{
+	PyObject *v = PyInt_FromLong((long) value);
+	if (!v || PyDict_SetItemString(d, name, v))
+		Py_FatalError("can't initialize shm module");
+
+	Py_DECREF(v);
+}
+
+/* This is to set up the type of shared memory/semaphore object members */
+
+static void
+set_member_type(struct memberlist *sxm_memberlist,
+                int index,                          /* index in memberlist */
+                int typesize                        /* sizeof(member_type) */
+               )
+{
+    int t;
+
+    if (typesize == sizeof(char))
+        t = T_UBYTE;
+    else if (typesize == sizeof(short))
+        t = T_USHORT;
+    else if (typesize == sizeof(int))
+        t = T_UINT;
+    else if (typesize == sizeof(long))
+        t = T_ULONG;
+    else
+        Py_FatalError("can't initialize shm module");
+    sxm_memberlist[index].type = t;
+};
+
+void
+initshm(void)
+{
+    PyObject *m, *d;
+
+    m = Py_InitModule("shm", PyShm_methods);
+    d = PyModule_GetDict(m);
+    PyShm_Error = PyString_FromString("shm.error");
+    if (PyShm_Error == NULL ||
+	PyDict_SetItemString(d, "error", PyShm_Error) != 0)
+	    Py_FatalError("can't define shm.error");
+    if (PyDict_SetItemString(d, "__doc__", PyString_FromString
+			     ("Interface to System V shared memory IPC")) != 0)
+        Py_FatalError("can't define shm.__doc__");
+    if ((shm_dict = PyDict_New()) == NULL || (sem_dict = PyDict_New()) == NULL)
+	   Py_FatalError("can't initialize shm module");
+
+    /* initialize the machine dependent types in memory_memberlist */
+    set_member_type(memory_memberlist, 0, sizeof(gid_t));	/* cgid   */
+    set_member_type(memory_memberlist, 1, sizeof(pid_t));	/* cpid   */
+    set_member_type(memory_memberlist, 2, sizeof(uid_t));	/* cuid   */
+    set_member_type(memory_memberlist, 3, sizeof(key_t));	/* key    */
+    set_member_type(memory_memberlist, 4, sizeof(pid_t));	/* lpid   */
+    set_member_type(memory_memberlist, 5, sizeof(int));		/* shmid  */
+    set_member_type(memory_memberlist, 6, sizeof(int));		/* size   */
+    set_member_type(memory_memberlist, 7, sizeof(gid_t));	/* gid    */
+    set_member_type(memory_memberlist, 8, sizeof(uid_t));	/* uid    */
+
+    /* initialize the machine dependent types in semaphore_memberlist */
+    set_member_type(semaphore_memberlist, 0, sizeof(gid_t));	/* cgid   */
+    set_member_type(semaphore_memberlist, 1, sizeof(uid_t));	/* cuid   */
+    set_member_type(semaphore_memberlist, 2, sizeof(key_t));	/* key    */
+    set_member_type(semaphore_memberlist, 3, sizeof(int));	/* semid  */
+    set_member_type(semaphore_memberlist, 4, sizeof(gid_t));	/* gid    */
+    set_member_type(semaphore_memberlist, 5, sizeof(uid_t));	/* uid    */
+
+    /* relevant constants for this module; the others are useless here */
+    insint(d, "IPC_PRIVATE", IPC_PRIVATE);
+    insint(d, "SHM_RDONLY", SHM_RDONLY);
+    insint(d, "SHM_RND", SHM_RND);
+#ifdef SHMLBA
+    insint(d, "SHMLBA", SHMLBA);
+#endif
+#ifdef SEM_A
+    insint(d, "SEM_A", SEM_A);
+#endif
+#ifdef SEM_R
+    insint(d, "SEM_R", SEM_R);
+#endif
+#ifdef SHM_R
+    insint(d, "SHM_R", SHM_R);
+#endif
+#ifdef SHM_W
+    insint(d, "SHM_W", SHM_W);
+#endif
+}
=== setup.py
==================================================================
--- setup.py	(revision 636)
+++ setup.py	(patch 0.8.9.2 level 1)
@@ -127,14 +127,14 @@
 	uis = [x for x in os.listdir("portato/gui/templates/ui/") if x.endswith(".ui")]
 	return [os.path.join("portato/gui/templates/ui",x) for x in uis]
 
-packages = ["portato", "portato.gui", "portato.plugins", "portato.backend", "portato.backend.portage", "portato.backend.catapult", "portato.shm"]
-ext_modules = [Extension("portato.shm.shm", ["shm/shmmodule.c"], define_macros = MacrosAndDefines, extra_compile_args=["-fPIC"])]
+packages = ["portato", "portato.gui", "portato.plugins", "portato.backend", "portato.backend.portage", "portato.backend.catapult", "portato._shm"]
+ext_modules = [Extension("portato._shm.shm", ["_shm/shmmodule.c"], define_macros = MacrosAndDefines, extra_compile_args=["-fPIC"])]
 data_files = [
 		(ICON_DIR, ["icons/portato-icon.png"]), 
 		#(PLUGIN_DIR, plugin_list("shutdown", "resume_loop")), 
 		(DATA_DIR, ["plugin.xsd"])]
 cmdclass = {}
-package_dir = {"portato.shm" : "shm"}
+package_dir = {"portato._shm" : "_shm"}
 
 if "gtk" in FRONTENDS:
 	packages.append("portato.gui.gtk")
=== portato/gui/gtk/windows.py
==================================================================
--- portato/gui/gtk/windows.py	(revision 636)
+++ portato/gui/gtk/windows.py	(patch 0.8.9.2 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gtk/windows.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006-2007 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -37,7 +37,7 @@
 from .views import LogView, HighlightView, InstalledOnlyView
 from .dialogs import (blocked_dialog, changed_flags_dialog, io_ex_dialog,
 		nothing_found_dialog, queue_not_empty_dialog, remove_deps_dialog,
-		remove_queue_dialog, unmask_dialog)
+		remove_queue_dialog, remove_updates_dialog, unmask_dialog)
 
 class AboutWindow (AbstractDialog):
 	"""A window showing the "about"-informations."""
@@ -304,23 +304,37 @@
 			"browserEdit"		: ("browserCmd", "GUI")
 			}
 
-	def __init__ (self, parent, cfg, set_console_font):
+	# the mappings for the tabpos combos
+	tabpos = {
+			1 : gtk.POS_TOP,
+			2 : gtk.POS_BOTTOM,
+			3 : gtk.POS_LEFT,
+			4 : gtk.POS_RIGHT
+			}
+
+	def __init__ (self, parent, cfg, console_fn, linkbtn_fn, tabpos_fn):
 		"""Constructor.
 
 		@param parent: parent window
 		@type parent: gtk.Window
 		@param cfg: configuration object
 		@type cfg: gui_helper.Config
-		@param set_console_font: function to call to set the console font
-		@type set_console_font: function(string)"""
+		@param console_fn: function to call to set the console font
+		@type console_fn: function(string)
+		@param linkbtn_fn: function to call to set the linkbutton behavior
+		@type linkbtn_fn: function(string)
+		@param tabpos_fn: function to call to set the tabposition of the notebooks
+		@type tabpos_fn: function(gtk.ComboBox,int)"""
 		
 		AbstractDialog.__init__(self, parent)
 
 		# our config
 		self.cfg = cfg
 
-		# the console font setter
-		self.set_console_font = set_console_font
+		# the setter functions
+		self.console_fn = console_fn
+		self.linkbtn_fn = linkbtn_fn
+		self.tabpos_fn = tabpos_fn
 		
 		# set the bg-color of the hint
 		hintEB = self.tree.get_widget("hintEB")
@@ -348,6 +362,19 @@
 		self.consoleFontBtn = self.tree.get_widget("consoleFontBtn")
 		self.consoleFontBtn.set_font_name(self.cfg.get("consolefont", section = "GTK"))
 
+		# the comboboxes
+		self.systemTabCombo = self.tree.get_widget("systemTabCombo")
+		self.pkgTabCombo = self.tree.get_widget("packageTabCombo")
+
+		for c in (self.systemTabCombo, self.pkgTabCombo):
+			m = c.get_model()
+			m.clear()
+			for i in (_("Top"), _("Bottom"), _("Left"), _("Right")):
+				m.append((i,))
+
+		self.systemTabCombo.set_active(int(self.cfg.get("systemTabPos", section = "GTK"))-1)
+		self.pkgTabCombo.set_active(int(self.cfg.get("packageTabPos", section = "GTK"))-1)
+
 		self.window.show_all()
 
 	def _save(self):
@@ -367,9 +394,17 @@
 
 		font = self.consoleFontBtn.get_font_name()
 		self.cfg.set("consolefont", font, section = "GTK")
-		self.set_console_font(font)
+		self.console_fn(font)
+
+		pkgPos = self.pkgTabCombo.get_active()+1
+		sysPos = self.systemTabCombo.get_active()+1
+
+		self.cfg.set("packageTabPos", str(pkgPos), section = "GTK")
+		self.cfg.set("systemTabPos", str(sysPos), section = "GTK")
+
+		self.tabpos_fn(map(self.tabpos.get, (pkgPos, sysPos)))
 		
-		gtk.link_button_set_uri_hook(lambda btn, x: get_listener().send_cmd([self.cfg.get("browserCmd", section = "GUI"), btn.get_uri()]))
+		self.linkbtn_fn(self.cfg.get("browserCmd", section="GUI"))
 
 	def cb_ok_clicked(self, button):
 		"""Saves, writes to config-file and closes the window."""
@@ -423,6 +458,7 @@
 		self.nameLabel = self.tree.get_widget("nameLabel")
 		self.descLabel = self.tree.get_widget("descLabel")
 		self.overlayLabel = self.tree.get_widget("overlayLabel")
+		self.licenseLabel = self.tree.get_widget("licenseLabel")
 		self.overlayLL = self.tree.get_widget("overlayLabelLabel")
 		self.linkBox = self.tree.get_widget("linkBox")
 		self.notInSysLabel = self.tree.get_widget("notInSysLabel")
@@ -497,7 +533,7 @@
 		self.descLabel.set_label(desc)
 
 		# overlay
-		if self.actual_package().is_overlay():
+		if pkg.is_overlay():
 			self.overlayLabel.set_label(pkg.get_overlay_path())
 			self.overlayLabel.show()
 			self.overlayLL.show()
@@ -505,6 +541,9 @@
 			self.overlayLabel.hide()
 			self.overlayLL.hide()
 
+		# license
+		self.licenseLabel.set_label(pkg.get_package_settings("LICENSE"))
+
 		# link
 		for c in self.linkBox.get_children():
 			self.linkBox.remove(c)
@@ -642,15 +681,15 @@
 		if emerge:
 			try:
 				try:
-					self.queue.append(self.actual_package().get_cpv(), unmerge = False, update = update)
+					self.queue.append(self.actual_package().get_cpv(), type = "install", update = update)
 				except PackageNotFoundException, e:
 					if unmask_dialog(e[0]) == gtk.RESPONSE_YES:
-						self.queue.append(self.actual_package().get_cpv(), unmerge = False, unmask = True, update = update)
+						self.queue.append(self.actual_package().get_cpv(), type = "install", unmask = True, update = update)
 			except BlockedException, e:
 				blocked_dialog(e[0], e[1])
 		else:
 			try:
-				self.queue.append(self.actual_package().get_cpv(), unmerge = True)
+				self.queue.append(self.actual_package().get_cpv(), type = "uninstall")
 			except PackageNotFoundException, e:
 				error(_("Package could not be found: %s"), e[0])
 				#masked_dialog(e[0])
@@ -752,9 +791,9 @@
 		self.actual_package().remove_new_use_flags()
 		self.actual_package().remove_new_masked()
 		self.actual_package().remove_new_testing()
-		self.versList.get_model().clear()
-		self.fill_vers_list()
-		self.cb_vers_list_changed()
+		self.versionCombo.get_model().clear()
+		self.fill_version_combo()
+		self.cb_version_combo_changed()
 		if self.instantChange:
 			self._update_keywords(True, update = True)
 		return True
@@ -762,13 +801,13 @@
 	def cb_package_emerge_clicked (self, button):
 		"""Callback for pressed emerge-button. Adds the package to the EmergeQueue."""
 		self._update_keywords(True)
-		self.main.notebook.set_current_page(self.main.QUEUE_PAGE)
+		self.main.sysNotebook.set_current_page(self.main.QUEUE_PAGE)
 		return True
 
 	def cb_package_unmerge_clicked (self, button):
 		"""Callback for pressed unmerge-button clicked. Adds the package to the UnmergeQueue."""
 		self._update_keywords(False)
-		self.main.notebook.set_current_page(self.main.QUEUE_PAGE)
+		self.main.sysNotebook.set_current_page(self.main.QUEUE_PAGE)
 		return True
 
 	def cb_testing_toggled (self, button):
@@ -978,8 +1017,10 @@
 		
 		splash(_("Finishing startup"))
 		
-		# notebook
-		self.notebook = self.tree.get_widget("systemNotebook")
+		# notebooks
+		self.sysNotebook = self.tree.get_widget("systemNotebook")
+		self.pkgNotebook = self.tree.get_widget("packageNotebook")
+		self.set_notebook_tabpos(map(PreferenceWindow.tabpos.get, map(int, (self.cfg.get("packageTabPos", "GTK"), self.cfg.get("systemTabPos", "GTK")))))
 		self.window.show_all()
 		
 		# the hidden stuff
@@ -1020,12 +1061,12 @@
 	def build_queue_list (self):
 		"""Builds the queue list."""
 
-		store = gtk.TreeStore(str,str)
+		store = gtk.TreeStore(str,str,bool)
 		
 		self.queueList.set_model(store)
 		
 		cell = gtk.CellRendererText()
-		col = gtk.TreeViewColumn(_("Queue"), cell, text = 0)
+		col = gtk.TreeViewColumn(_("Queue"), cell, markup = 0)
 		self.queueList.append_column(col)
 		
 		col = gtk.TreeViewColumn(_("Options"), cell, markup = 1)
@@ -1163,6 +1204,13 @@
 		"""Is called when we want to jump to a specific package."""
 		self.show_package(cp, self.queue, version = version)
 
+	def set_uri_hook (self, browser):
+		gtk.link_button_set_uri_hook(lambda btn, x: get_listener().send_cmd([browser, btn.get_uri()]))
+
+	def set_notebook_tabpos (self, tabposlist):
+		self.pkgNotebook.set_tab_pos(tabposlist[0])
+		self.sysNotebook.set_tab_pos(tabposlist[1])
+
 	def title_update (self, title):
 		
 		def window_title_update (title):
@@ -1189,7 +1237,7 @@
 			else: 
 				title = (_("Console (%(title)s)") % {"title" : title})
 			
-			self.notebook.set_tab_label_text(self.termHB, title)
+			self.sysNotebook.set_tab_label_text(self.termHB, title)
 
 			return False
 
@@ -1297,11 +1345,9 @@
 		tooltip.set_markup(string)
 		return string != ""
 
-	def cb_emerge_clicked (self, action):
-		"""Do emerge."""
+	def cb_execute_clicked (self, action):
+		"""Execute the current queue."""
 		
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
-		
 		if len(flags.newUseFlags) > 0:
 			changed_flags_dialog(_("use flags"))
 			flags.write_use_flags()
@@ -1314,20 +1360,27 @@
 			flags.write_masked()
 			flags.write_testing()
 			system.reload_settings()
+
+		model, iter = self.queueList.get_selection().get_selected()
+
+		if iter is None:
+			if model.iter_n_children(None) == 1: # only one queue there - take this as being selected
+				iter = model.get_iter_root()
+			else:
+				return False
+
+		self.sysNotebook.set_current_page(self.CONSOLE_PAGE)
 		
-		if not self.doUpdate:
-			self.queue.emerge(force=True)
+		# test which type of queue we have here
+		if self.queueTree.is_in_emerge(iter):
+			self.queue.emerge(force = True)
+		elif self.queueTree.is_in_unmerge(iter):
+			self.queue.unmerge(force = True)
 		else:
 			self.queue.update_world(force=True, newuse = self.cfg.get_boolean("newuse"), deep = self.cfg.get_boolean("deep"))
-			self.doUpdate = False
-		
-	def cb_unmerge_clicked (self, button):
-		"""Do unmerge."""
 
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
-		self.queue.unmerge(force=True)
 		return True
-
+		
 	def cb_update_clicked (self, action):
 		def __update():
 			
@@ -1335,15 +1388,15 @@
 				try:
 					try:
 						for pkg, old_pkg in updating:
-							self.queue.append(pkg.get_cpv(), unmask = False)
+							self.queue.append(pkg.get_cpv(), type = "update", unmask = False)
 					except PackageNotFoundException, e:
 						if unmask_dialog(e[0]) == gtk.RESPONSE_YES:
 							for pkg, old_pkg in updating:
-								self.queue.append(pkg.get_cpv(), unmask = True)
+								self.queue.append(pkg.get_cpv(), type = "update", unmask = True)
 
 				except BlockedException, e:
 					blocked_dialog(e[0], e[1])
-					self.queue.remove_children(self.queue.emergeIt)
+					self.queue.remove_children(self.queueTree.get_update_it())
 				
 				return False
 
@@ -1353,7 +1406,6 @@
 				updating = system.update_world(newuse = self.cfg.get_boolean("newuse"), deep = self.cfg.get_boolean("deep"))
 				debug("updating list: %s --> length: %s", [(x.get_cpv(), y.get_cpv()) for x,y in updating], len(updating))
 				gobject.idle_add(cb_idle_append, updating)
-				if len(updating): self.doUpdate = True
 			finally:
 				self.window.window.set_cursor(None)
 			
@@ -1363,29 +1415,35 @@
 
 	def cb_remove_clicked (self, button):
 		"""Removes a selected item in the (un)emerge-queue if possible."""
-		selected = self.queueList.get_selection()
+		model, iter = self.queueList.get_selection().get_selected()
 
-		if selected:
-			model, iter = selected.get_selected()
+		if iter:
+			parent = model.iter_parent(iter)
 			
-			if iter == None: return False
-
-			if not model.iter_parent(iter): # top-level
+			if self.queueTree.is_in_update(iter) and parent:
+				if remove_updates_dialog() == gtk.RESPONSE_YES:
+					self.queue.remove_with_children(self.queueTree.get_update_it())
+			
+			elif not parent: # top-level
 				if model.iter_n_children(iter) > 0: # and has children which can be removed :)
 					if remove_queue_dialog() == gtk.RESPONSE_YES :
-						self.queue.remove_children(iter)
-						self.doUpdate = False
+						self.queue.remove_with_children(iter)
+				else:
+					self.queue.remove(iter)
 			
-			elif model.iter_parent(model.iter_parent(iter)): # this is in the 3rd level => dependency
+			elif model.iter_parent(parent): # this is in the 3rd level => dependency
 				remove_deps_dialog()
 			else:
 				self.queue.remove_with_children(iter)
-				self.doUpdate = False
+
+				if model.iter_n_children(parent) == 0: # no more children left - remove queue too
+					self.queue.remove(parent)
 		
-		return True
+			return True
+		return False
 
 	def cb_sync_clicked (self, action):
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
+		self.sysNotebook.set_current_page(self.CONSOLE_PAGE)
 		cmd = self.cfg.get("syncCommand")
 
 		if cmd != "emerge --sync":
@@ -1424,7 +1482,7 @@
 					SearchWindow(self.window, packages, self.jump_to)
 
 	def cb_preferences_clicked (self, button):
-		PreferenceWindow(self.window, self.cfg, self.console.set_font_from_string)
+		PreferenceWindow(self.window, self.cfg, self.console.set_font_from_string, self.set_uri_hook, self.set_notebook_tabpos)
 		return True
 
 	def cb_about_clicked (self, button):
=== portato/gui/gtk/wrapper.py
==================================================================
--- portato/gui/gtk/wrapper.py	(revision 636)
+++ portato/gui/gtk/wrapper.py	(patch 0.8.9.2 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gtk/wrapper.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -12,9 +12,10 @@
 
 from __future__ import absolute_import
 
+import vte
 from gettext import lgettext as _
 from ..wrapper import Tree, Console
-import vte
+from ...helper import debug
 
 class GtkTree (Tree):
 	"""The implementation of the abstract tree."""
@@ -29,8 +30,9 @@
 
 		self.tree = tree
 		self.cpv_col = col
-		self.emergeIt = self.append(None, ["Emerge", ""])
-		self.unmergeIt = self.append(None, ["Unmerge", ""])
+		self.emergeIt = None
+		self.unmergeIt = None
+		self.updateIt = None
 
 	def build_append_value (self, cpv, oneshot = False, update = False, downgrade = False, version = None, useChange = []):
 		string = ""
@@ -58,19 +60,51 @@
 			useChange.sort()
 			string += "<i>%s</i>" % " ".join(useChange)
 
-		return [cpv, string]
+		return [cpv, string, False]
 
+	def set_in_progress (self, it, to = True):
+		iter = self.first_iter(it)
+		if to:
+			self.tree.set_value(iter, 1, "<b>%s</b>" % _("(In Progress)"))
+		else:
+			self.tree.set_value(iter, 1, "")
+		
+		self.tree.set_value(iter, 2, to)
+
+	def is_in_progress (self, it):
+		return self.tree.get_value(it, 2)
+
 	def get_emerge_it (self):
+		if self.emergeIt is None:
+			self.emergeIt = self.append(None, ["<b>%s</b>" % _("Install"), "", False])
 		return self.emergeIt
 
 	def get_unmerge_it (self):
+		if self.unmergeIt is None:
+			self.unmergeIt = self.append(None, ["<b>%s</b>" % _("Uninstall"), "", False])
+
 		return self.unmergeIt
 
+	def get_update_it (self):
+		if self.updateIt is None:
+			self.updateIt = self.append(None, ["<b>%s</b>" % _("Update"), "", False])
+
+		return self.updateIt
+
+	def first_iter (self, it):
+		return self.tree.get_iter_from_string(self.tree.get_string_from_iter(it).split(":")[0])
+
+	def is_in (self, it, in_it):
+		return in_it and self.iter_equal(self.first_iter(it), in_it)
+
 	def is_in_emerge (self, it):
-		return self.tree.get_string_from_iter(it).split(":")[0] == self.tree.get_string_from_iter(self.emergeIt)
+		return self.is_in(it, self.emergeIt)
 
 	def is_in_unmerge (self, it):
-		return self.tree.get_string_from_iter(it).split(":")[0] == self.tree.get_string_from_iter(self.unmergeIt)
+		return self.is_in(it, self.unmergeIt)
+
+	def is_in_update (self, it):
+		return self.is_in(it, self.updateIt)
 	
 	def iter_has_parent (self, it):
 		return (self.tree.iter_parent(it) != None)
@@ -90,10 +124,18 @@
 	def get_value (self, it, column):
 		return self.tree.get_value(it, column)
 
+	def iter_equal (self, it, other_it):
+		return self.tree.get_string_from_iter(it) == self.tree.get_string_from_iter(other_it)
+
 	def append (self, parent = None, values = None):
 		return self.tree.append(parent, values)
 
 	def remove (self, it):
+		
+		if self.emergeIt and self.iter_equal(it, self.emergeIt) : self.emergeIt = None
+		elif self.unmergeIt and self.iter_equal(it, self.unmergeIt) : self.unmergeIt = None
+		elif self.updateIt and self.iter_equal(it, self.updateIt) : self.updateIt = None
+		
 		self.tree.remove(it)
 
 	def get_original (self):
=== portato/gui/gtk/dialogs.py
==================================================================
--- portato/gui/gtk/dialogs.py	(revision 636)
+++ portato/gui/gtk/dialogs.py	(patch 0.8.9.2 level 1)
@@ -68,6 +68,12 @@
 	infoMB.destroy()
 	return ret
 
+def remove_updates_dialog():
+	askMB = gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_QUESTION, gtk.BUTTONS_YES_NO, _("This is the updates queue. You cannot remove single elements.\nDo you want to clear the whole queue instead?"))
+	ret = askMB.run()
+	askMB.destroy()
+	return ret
+
 def remove_queue_dialog ():
 	askMB = gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_QUESTION, gtk.BUTTONS_YES_NO, _("Do you really want to clear the whole queue?"))
 	ret = askMB.run()
=== portato/gui/wrapper.py
==================================================================
--- portato/gui/wrapper.py	(revision 636)
+++ portato/gui/wrapper.py	(patch 0.8.9.2 level 1)
@@ -125,6 +125,35 @@
 		@rtype: boolean"""
 		raise NotImplementedError
 
+	def is_in_emerge (self, it):
+		"""Checks whether an iterator is part of the "Update" section.
+
+		@param it: the iterator to check
+		@type it: Iterator
+		@returns: True if the iter is part; False otherwise
+		@rtype: boolean"""
+		raise NotImplementedError
+
+	def iter_equal (self, it, other_it):
+		"""Checks whether to iterators are equal.
+
+		@param it: the one iterator to compare
+		@type it: Iterator
+		@param other_it: the other iterator to compare
+		@type other_it: Iterator
+		@returns: True if both iterators are equal; False otherwise
+		@rtype boolean"""
+		raise NotImplementedError
+
+	def first_iter (self, it):
+		"""Returns the iterator at the top.
+
+		@param it: the iterator
+		@type it: Iterator
+		@returns: the top iterator
+		@rtype: Iterator"""
+		raise NotImplementedError
+
 	def get_emerge_it (self):
 		"""Returns an iterator signaling the top of the emerge section.
 
@@ -139,6 +168,31 @@
 		@rtype: Iterator"""
 		raise NotImplementedError
 
+	def get_update_it (self):
+		"""Returns an iterator signaling the top of the update section.
+
+		@returns: unmerge-iterator
+		@rtype: Iterator"""
+		raise NotImplementedError
+
+	def set_in_progress (self, it, to = True):
+		"""Marks the queue where the given iterator belongs as being in progress.
+
+		@param it: one iterator of the queue to mark to
+		@type it: Iterator
+		@param to: whether to enable or disable
+		@type to: boolean"""
+		raise NotImplementedError
+
+	def get_in_progress (self, it):
+		"""Returns whether the queue where the given iterator belongs to, is marked as "being in progress".
+
+		@param it: the iterator
+		@type it: Iterator
+		@returns: whether the queue is marked "in progress"
+		@rtype: boolean"""
+		raise NotImplementedError
+
 	def build_append_value (self, cpv, oneshot = False, update = False, downgrade = False, version = None, useChange = []):
 		"""Builds the list, which is going to be passed to append. 
 
@@ -164,9 +218,9 @@
 	Each frontend _MUST_ define its own subclass and implement ALL of the methods, otherwise a NotImplementedError will be thrown."""
 	
 	def set_pty (self, pty):
-		"""This sets the pseudo-terminal where to print the incoming output to.
+		"""This sets the pty master.
 
-		@param pty: the terminal to print to
+		@param pty: the pty master
 		@type pty: file-descriptor"""
 		raise NotImplementedError
 
=== portato/gui/gui_helper.py
==================================================================
--- portato/gui/gui_helper.py	(revision 636)
+++ portato/gui/gui_helper.py	(patch 0.8.9.2 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gui_helper.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006-2007 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -14,7 +14,7 @@
 
 # some stuff needed
 import logging
-import os, pty
+import sys, os, pty
 import signal, threading, time
 from subprocess import Popen, PIPE, STDOUT
 
@@ -26,6 +26,7 @@
 from ..helper import debug, info, send_signal_to_group, set_log_level, unique_array
 from ..constants import USE_CATAPULT
 from ..waiting_queue import WaitingQueue
+from .updater import Updater
 
 # parser
 from ..config_parser import ConfigParser
@@ -219,7 +220,10 @@
 
 		if cat:
 			del self._db[cat]
-			self.inst_cats.remove(cat)
+			try:
+				self.inst_cats.remove(cat)
+			except KeyError: # not in inst_cats - can be ignored
+				pass
 			self.populate(cat+"/")
 		else:
 			self.__initialize()
@@ -251,8 +255,8 @@
 		self.pty = None
 
 		# dictionaries with data about the packages in the queue
-		self.iters = {} # iterator in the tree
-		self.deps = {} # all the deps of the package
+		self.iters = {"install" : {}, "uninstall" : {}, "update" : {}} # iterator in the tree
+		self.deps = {"install" : {}, "update" : {}} # all the deps of the package
 		
 		# member vars
 		self.tree = tree
@@ -263,14 +267,12 @@
 		
 		self.db = db
 		self.title_update = title_update
+		self.threadClass = threadClass
+		
+		if self.console:
+			self.pty = pty.openpty()
+			self.console.set_pty(self.pty[0])
 
-		# our iterators pointing at the toplevels; they are set to None if we do not have a tree
-		if self.tree: 
-			self.emergeIt = self.tree.get_emerge_it()
-			self.unmergeIt = self.tree.get_unmerge_it()
-		else:
-			self.emergeIt = self.unmergeIt = None
-
 	def _get_pkg_from_cpv (self, cpv, unmask = False):
 		"""Gets a L{backend.Package}-object from a cpv.
 
@@ -311,7 +313,7 @@
 		
 		return pkg
 	
-	def update_tree (self, it, cpv, unmask = False, oneshot = False):
+	def update_tree (self, it, cpv, unmask = False, oneshot = False, type = "install"):
 		"""This updates the tree recursivly, or? Isn't it? Bjorn!
 
 		@param it: iterator where to append
@@ -322,11 +324,13 @@
 		@type unmask: boolean
 		@param oneshot: True if we want to emerge is oneshot
 		@type oneshot: boolean
+		@param type: the type of the updating
+		@type type: string
 		
 		@raises backend.BlockedException: When occured during dependency-calculation.
 		@raises backend.PackageNotFoundException: If no package could be found - normally it is existing but masked."""
 		
-		if cpv in self.deps:
+		if cpv in self.deps[type]:
 			return # in list already and therefore it's already in the tree too	
 		
 		# try to find an already installed instance
@@ -375,11 +379,11 @@
 
 		# add iter
 		subIt = self.tree.append(it, self.tree.build_append_value(cpv, oneshot = oneshot, update = update, downgrade = downgrade, version = uVersion, useChange = changedUse))
-		self.iters.update({cpv: subIt})
+		self.iters[type].update({cpv: subIt})
 		
 		# get dependencies
 		deps = pkg.get_dep_packages() # this might raise a BlockedException
-		self.deps.update({cpv : deps})
+		self.deps[type].update({cpv : deps})
 		
 		# recursive call
 		for d in deps:
@@ -390,14 +394,14 @@
 				self.remove_with_children(subIt)
 				raise
 		
-	def append (self, cpv, unmerge = False, update = False, forceUpdate = False, unmask = False, oneshot = False):
+	def append (self, cpv, type = "install", update = False, forceUpdate = False, unmask = False, oneshot = False):
 		"""Appends a cpv either to the merge queue or to the unmerge-queue.
 		Also updates the tree-view.
 		
 		@param cpv: Package to add
 		@type cpv: string (cat/pkg-ver)
-		@param unmerge: Set to True if you want to unmerge this package - else False.
-		@type unmerge: boolean		
+		@param type: The type of this append process. Possible values are "install", "uninstall", "update".
+		@type unmerge: string		
 		@param update: Set to True if a package is going to be updated (e.g. if the use-flags changed).
 		@type update: boolean
 		@param forceUpdate: Set to True if the update should be forced.
@@ -409,34 +413,37 @@
 		
 		@raises portato.backend.PackageNotFoundException: if trying to add a package which does not exist"""
 		
-		if not unmerge: # emerge
+		if type in ("install", "update"): # emerge
 			# insert dependencies
 			pkg = self._get_pkg_from_cpv(cpv, unmask)
 			deps = pkg.get_dep_packages()
 			
 			if update:
-				if not forceUpdate and cpv in self.deps and deps == self.deps[cpv]:
+				if not forceUpdate and cpv in self.deps[type] and deps == self.deps[type][cpv]:
 					return # nothing changed - return
 				else:
 					hasBeenInQueue = (cpv in self.mergequeue or cpv in self.oneshotmerge)
-					parentIt = self.tree.parent_iter(self.iters[cpv])
+					parentIt = self.tree.parent_iter(self.iters[type][cpv])
 
 					# delete it out of the tree - but NOT the changed flags
-					self.remove_with_children(self.iters[cpv], removeNewFlags = False)
+					self.remove_with_children(self.iters[type][cpv], removeNewFlags = False)
 					
 					if hasBeenInQueue: # package has been in queue before
 						self._queue_append(cpv, oneshot)
 					
 					self.update_tree(parentIt, cpv, unmask, oneshot = oneshot)
 			else: # not update
-				self._queue_append(cpv, oneshot)
-				if self.emergeIt: 
-					self.update_tree(self.emergeIt, cpv, unmask, oneshot = oneshot)
+				if type == "install":
+					self._queue_append(cpv, oneshot)
+					if self.tree:
+						self.update_tree(self.tree.get_emerge_it(), cpv, unmask, type = type, oneshot = oneshot)
+				elif type == "update" and self.tree:
+					self.update_tree(self.tree.get_update_it(), cpv, unmask, type = type, oneshot = oneshot)
 			
 		else: # unmerge
 			self.unmergequeue.append(cpv)
-			if self.unmergeIt: # update tree
-				self.tree.append(self.unmergeIt, self.tree.build_append_value(cpv))
+			if self.tree: # update tree
+				self.iters["uninstall"].update({cpv: self.tree.append(self.tree.get_unmerge_it(), self.tree.build_append_value(cpv))})
 
 	def _queue_append (self, cpv, oneshot = False):
 		"""Convenience function appending a cpv either to self.mergequeue or to self.oneshotmerge.
@@ -453,10 +460,17 @@
 			if cpv not in self.oneshotmerge:
 				self.oneshotmerge.append(cpv)
 
-	def doEmerge (self, *args, **kwargs):
-		self.threadQueue.put(self.__emerge, *args, **kwargs)
+	def doEmerge (self, options, packages, it, *args, **kwargs):
+		top = None
+		if self.tree and it:
+			for v in it.itervalues():
+				self.tree.set_in_progress(v)
+				top = self.tree.first_iter(v)
+				break
+
+		self.threadQueue.put(self.__emerge, options, packages, it, top, *args, **kwargs)
 	
-	def __emerge (self, options, packages, it, command = None):
+	def __emerge (self, options, packages, it, top, command = None):
 		"""Calls emerge and updates the terminal.
 		
 		@param options: options to send to emerge
@@ -464,7 +478,9 @@
 		@param packages: packages to emerge
 		@type packages: string[]
 		@param it: Iterators which point to these entries whose children will be removed after completion.
-		@type it: Iterator[]
+		@type it: dict(string -> Iterator)
+		@param top: The top iterator
+		@type top: Iterator
 		@param command: the command to execute - default is "/usr/bin/python /usr/bin/emerge"
 		@type command: string[]"""
 
@@ -474,28 +490,44 @@
 				command = system.get_merge_command()
 
 			# open tty
-			if not self.pty:
-				self.pty = pty.openpty()
-				self.console.set_pty(self.pty[0])
-			else:
+			if self.console:
 				self.console.reset()
 			
+			def pre ():
+				os.setsid() # new session
+				if self.console:
+					import fcntl, termios
+					fcntl.ioctl(self.pty[1], termios.TIOCSCTTY, 0) # set pty-slave as session tty
+					os.dup2(self.pty[1], 0)
+					os.dup2(self.pty[1], 1)
+					os.dup2(self.pty[1], 2)
+
 			# start emerge
-			self.process = Popen(command+options+packages, stdout = self.pty[1], stderr = STDOUT, shell = False, env = system.get_environment(), preexec_fn = os.setsid)
-			
+			self.process = Popen(command+options+packages, shell = False, env = system.get_environment(), preexec_fn = pre)
+
 			# remove packages from queue
-			for i in it:
-				self.remove_with_children(i)
+			if self.tree and it:
+				self.up = Updater(self, it, self.threadClass)
+			else:
+				self.up = None
 			
 			# update title
-			old_title = self.console.get_window_title()
-			while self.process and self.process.poll() is None:
-				if self.title_update : 
-					title = self.console.get_window_title()
-					if title != old_title:
-						self.title_update(title)
-					time.sleep(0.5)
+			if self.console:
+				old_title = self.console.get_window_title()
+				while self.process and self.process.poll() is None:
+					if self.title_update : 
+						title = self.console.get_window_title()
+						if title != old_title:
+							self.title_update(title)
+						time.sleep(0.5)
 
+			if self.up: 
+				self.up.stop()
+				if it:
+					self.tree.set_in_progress(top, False)
+				else:
+					self.remove(top)
+
 			if self.title_update: self.title_update(None)
 
 			if self.process is None: # someone resetted this
@@ -508,9 +540,10 @@
 
 			@plugin.hook("after_emerge", packages = packages, retcode = ret)
 			def update_packages():
-				for cat in unique_array([system.split_cpv(p)[0] for p in packages if p not in ["world", "system"]]):
-					self.db.reload(cat)
-					debug("Category %s refreshed", cat)
+				if self.db:
+					for cat in unique_array([system.split_cpv(p)[0] for p in packages if p not in ["world", "system"]]):
+						self.db.reload(cat)
+						debug("Category %s refreshed", cat)
 
 			update_packages()
 			
@@ -527,17 +560,25 @@
 		def prepare(queue):
 			"""Prepares the list of iterators and the list of packages."""
 			list = []
-			its = []
+			its = {}
 			for k in queue:
 				list += ["="+k]
-				its.append(self.iters[k])
+				if self.tree: 
+					its.update({k : self.iters["install"][k]})
 
 			return list, its
 
+		if self.tree:
+			ownit = self.iters["install"]
+		else:
+			ownit = {}
+
 		# oneshot-queue
 		if self.oneshotmerge:
 			# prepare package-list for oneshot
 			list, its = prepare(self.oneshotmerge)
+			if not self.mergequeue :# the other one does not exist - remove completely
+				its = ownit
 			
 			s = system.get_oneshot_option()
 			if not force: s += system.get_pretend_option()
@@ -549,6 +590,8 @@
 		if self.mergequeue:
 			# prepare package-list
 			list, its = prepare(self.mergequeue)
+			if not self.oneshotmerge: # the other one does not exist - remove completely
+				its = ownit
 
 			s = []
 			if not force: s = system.get_pretend_option()
@@ -573,8 +616,13 @@
 		if not force: s += system.get_pretend_option()
 		if options is not None: s += options
 		
-		self.doEmerge(s,list, [self.unmergeIt], caller = self.unmerge)
+		if self.tree:
+			it = self.iters["uninstall"]
+		else:
+			it = {}
 
+		self.doEmerge(s,list, it, caller = self.unmerge)
+
 	def update_world(self, force = False, newuse = False, deep = False, options = None):
 		"""Does an update world. newuse and deep are the arguments handed to emerge.
 
@@ -594,8 +642,13 @@
 		if not force: opts += system.get_pretend_option()
 		if options is not None: opts += options
 
-		self.doEmerge(opts, ["world"], [self.emergeIt], caller = self.update_world)
+		if self.tree:
+			it = self.iters["update"]
+		else:
+			it = {}
 
+		self.doEmerge(opts, ["world"], it, caller = self.update_world)
+
 	def sync (self, command = None):
 		"""Calls "emerge --sync".
 		
@@ -677,12 +730,12 @@
 		@param removeNewFlags: True if new flags should be removed; False otherwise. Default: True.
 		@type removeNewFlags: boolean"""
 		
-		if self.tree.iter_has_parent(it): # NEVER remove our top stuff
+		if self.tree.iter_has_parent(it):
 			cpv = self.tree.get_value(it, self.tree.get_cpv_column())
 			if self.tree.is_in_emerge(it): # Emerge
-				del self.iters[cpv]
+				del self.iters["install"][cpv]
 				try:
-					del self.deps[cpv]
+					del self.deps["install"][cpv]
 				except KeyError: # this seems to be removed due to a BlockedException - so no deps here atm ;)
 					debug("Catched KeyError => %s seems not to be in self.deps. Should be no harm in normal cases.", cpv)
 				try:
@@ -698,11 +751,24 @@
 					flags.remove_new_masked(cpv)
 					flags.remove_new_testing(cpv)
 			
-			else: # in Unmerge
+			elif self.tree.is_in_unmerge(it): # in Unmerge
+				del self.iters["uninstall"][cpv]
 				self.unmergequeue.remove(cpv)
 			
-			self.tree.remove(it)
+			elif self.tree.is_in_update(it):
+				del self.iters["update"][cpv]
+				try:
+					del self.deps["update"][cpv]
+				except KeyError: # this seems to be removed due to a BlockedException - so no deps here atm ;)
+					debug("Catched KeyError => %s seems not to be in self.deps. Should be no harm in normal cases.", cpv)
 
+				if removeNewFlags: # remove the changed flags
+					flags.remove_new_use_flags(cpv)
+					flags.remove_new_masked(cpv)
+					flags.remove_new_testing(cpv)
+			
+		self.tree.remove(it)
+
 	def is_empty (self):
 		"""Checks whether the current queue is empty and not working. Therefore it looks, whether the queues are empty,
 		and the process is not running.
=== portato/gui/updater.py
==================================================================
--- portato/gui/updater.py	(revision 636)
+++ portato/gui/updater.py	(patch 0.8.9.2 level 1)
@@ -0,0 +1,107 @@
+# -*- coding: utf-8 -*-
+#
+# File: portato/gui/updater.py
+# This file is part of the Portato-Project, a graphical portage-frontend.
+#
+# Copyright (C) 2008 René 'Necoro' Neumann
+# This is free software.  You may redistribute copies of it under the terms of
+# the GNU General Public License version 2.
+# There is NO WARRANTY, to the extent permitted by law.
+#
+# Written by René 'Necoro' Neumann <necoro@necoro.net>
+
+from __future__ import absolute_import
+
+from ..backend import system
+
+import threading, subprocess, time
+from ..helper import debug
+
+class Updater (object):
+	"""
+	This class is intended to check what package is currently being installed and remove this one from the queue.
+
+	@cvar SED_EXP: The sed expression to strip the package name out of the qlop call.
+	"""
+	
+	SED_EXP = r"""
+/\*/{
+s/ \* //
+q
+}"""
+	
+	def __init__ (self, queue, iterators, threadClass = threading.Thread):
+		"""
+		Constructor.
+		Also directly initializes the thread.
+
+		@param queue: an emerge queue instance
+		@type queue: EmergeQueue
+		@param iterators: a dictionary of iterators in the current queue
+		@type iterators: dict(string->Iterator)
+		"""
+		
+		if not issubclass(threadClass, threading.Thread):
+			raise ValueError, "Only subclasses of threading.Thread are allowed."
+
+		self.queue = queue
+		self.iterators = iterators
+		self.threadClass = threadClass
+		self.stopEvent = threading.Event()
+
+		t = threadClass(name = "Queue Updater Thread", target = self.run)
+		t.setDaemon(True)
+		t.start()
+
+	def run (self):
+		"""
+		Run and run and run ...
+		Checks the packages until being stopped.
+		"""
+
+		curr = None
+		while not self.stopEvent.isSet():
+
+			# this = $(qlop -cCq | sed $SED_EXP)
+			p1 = subprocess.Popen(["qlop", "--current", "--nocolor", "--quiet"], stdout = subprocess.PIPE)
+			this = subprocess.Popen(["sed", self.SED_EXP], stdout = subprocess.PIPE, stdin = p1.stdout).communicate()[0]
+			
+			if this:
+				this = this.strip()
+				if this != curr: # changed package
+					curr = this
+					self.remove(self.find(curr)) # remove it
+			
+			time.sleep(2.0)
+				
+	def stop (self):
+		"""
+		Stops the current updater.
+		"""
+		self.stopEvent.set()
+
+	def find (self, pv):
+		"""
+		As qlop only returns 'package-version' we need to assign it to a cpv.
+		This is done here.
+		"""
+
+		pkgs = [l.get_cpv() for l in system.find_packages("=%s" % pv)]
+
+		if len(pkgs) > 1: # ambigous - try to find the one which is also in the iterators
+			for p in pkgs:
+				if p in self.iterators:
+					return p
+		elif not pkgs: # nothing found =|
+			error(_("Trying to remove package '%s' from queue which does not exist in system."), pv)
+		else: # only one choice =)
+			return pkgs[0]
+	
+	def remove (self, cpv):
+		"""
+		Remove a package from the queue.
+		"""
+		try:
+			self.queue.remove(self.iterators[cpv])
+		except KeyError:
+			debug("'%s' should be removed, but is not in queue.", cpv)
=== portato/gui/templates/portato.glade
==================================================================
--- portato/gui/templates/portato.glade	(revision 636)
+++ portato/gui/templates/portato.glade	(patch 0.8.9.2 level 1)
@@ -86,9 +86,10 @@
                     <child>
                       <widget class="GtkImageMenuItem" id="emergeItem">
                         <property name="visible">True</property>
-                        <property name="label" translatable="yes">E_merge</property>
+                        <property name="label" translatable="yes">_Install</property>
                         <property name="use_underline">True</property>
-                        <signal name="activate" handler="cb_emerge_clicked"/>
+                        <signal name="activate" handler="cb_package_emerge_clicked"/>
+                        <accelerator key="plus" modifiers="GDK_CONTROL_MASK" signal="activate"/>
                         <child internal-child="image">
                           <widget class="GtkImage" id="menu-item-image9">
                             <property name="visible">True</property>
@@ -101,8 +102,10 @@
                     <child>
                       <widget class="GtkImageMenuItem" id="unmergeItem">
                         <property name="visible">True</property>
-                        <property name="label" translatable="yes">_Unmerge</property>
+                        <property name="label" translatable="yes">_Uninstall</property>
                         <property name="use_underline">True</property>
+                        <signal name="activate" handler="cb_package_unmerge_clicked"/>
+                        <accelerator key="minus" modifiers="GDK_CONTROL_MASK" signal="activate"/>
                         <child internal-child="image">
                           <widget class="GtkImage" id="menu-item-image10">
                             <property name="visible">True</property>
@@ -133,7 +136,7 @@
                       <widget class="GtkCheckMenuItem" id="showInstalledItem">
                         <property name="visible">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Show Only _Installed Packages</property>
+                        <property name="label" translatable="yes">Show _Only Installed Packages</property>
                         <property name="use_underline">True</property>
                         <signal name="toggled" handler="cb_show_installed_toggled"/>
                         <accelerator key="i" modifiers="GDK_CONTROL_MASK" signal="activate"/>
@@ -452,82 +455,97 @@
                     <property name="visible">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                     <child>
-                      <widget class="GtkToolbar" id="packageTB">
+                      <widget class="GtkHBox" id="hbox5">
                         <property name="visible">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="icon_size">GTK_ICON_SIZE_BUTTON</property>
-                        <property name="icon_size_set">True</property>
+                        <property name="spacing">5</property>
                         <child>
-                          <widget class="GtkToolButton" id="pkgEmergeBtn">
+                          <widget class="GtkHBox" id="packageHB">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Add to Emerge Queue</property>
-                            <property name="stock_id">gtk-add</property>
-                            <signal name="clicked" handler="cb_package_emerge_clicked"/>
+                            <property name="spacing">4</property>
+                            <property name="homogeneous">True</property>
+                            <child>
+                              <widget class="GtkLabel" id="nameLabel">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="label" translatable="yes">label</property>
+                              </widget>
+                            </child>
+                            <child>
+                              <widget class="GtkComboBox" id="versionCombo">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                              </widget>
+                              <packing>
+                                <property name="position">1</property>
+                              </packing>
+                            </child>
                           </widget>
-                          <packing>
-                            <property name="expand">False</property>
-                          </packing>
                         </child>
                         <child>
-                          <widget class="GtkToolButton" id="pkgUnmergeBtn">
+                          <widget class="GtkToolbar" id="packageTB">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Remove from Emerge Queue</property>
-                            <property name="stock_id">gtk-remove</property>
-                            <signal name="clicked" handler="cb_package_unmerge_clicked"/>
+                            <property name="icon_size">GTK_ICON_SIZE_BUTTON</property>
+                            <property name="icon_size_set">True</property>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgEmergeBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Install onto system</property>
+                                <property name="label" translatable="yes">_Install</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-add</property>
+                                <signal name="clicked" handler="cb_package_emerge_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgUnmergeBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Uninstall from system</property>
+                                <property name="label" translatable="yes">_Uninstall</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-remove</property>
+                                <signal name="clicked" handler="cb_package_unmerge_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgRevertBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Revert changes</property>
+                                <property name="label" translatable="yes">Re_vert</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-undo</property>
+                                <signal name="clicked" handler="cb_package_revert_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
                           </widget>
                           <packing>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <widget class="GtkToolButton" id="pkgRevertBtn">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Revert changes</property>
-                            <property name="stock_id">gtk-undo</property>
-                            <signal name="clicked" handler="cb_package_revert_clicked"/>
-                          </widget>
-                          <packing>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkHBox" id="packageHB">
-                        <property name="visible">True</property>
-                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="homogeneous">True</property>
-                        <child>
-                          <widget class="GtkLabel" id="nameLabel">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">label</property>
-                          </widget>
-                        </child>
-                        <child>
-                          <widget class="GtkComboBox" id="versionCombo">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                          </widget>
-                          <packing>
                             <property name="position">1</property>
                           </packing>
                         </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="position">1</property>
+                        <property name="padding">5</property>
                       </packing>
                     </child>
                     <child>
                       <widget class="GtkNotebook" id="packageNotebook">
                         <property name="visible">True</property>
+                        <property name="tab_pos">GTK_POS_BOTTOM</property>
                         <child>
                           <widget class="GtkEventBox" id="generalEB">
                             <property name="visible">True</property>
@@ -537,117 +555,124 @@
                                 <property name="visible">True</property>
                                 <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                 <property name="border_width">6</property>
-                                <property name="n_rows">7</property>
+                                <property name="n_rows">8</property>
                                 <property name="n_columns">2</property>
                                 <property name="column_spacing">5</property>
                                 <property name="row_spacing">5</property>
                                 <child>
+                                  <widget class="GtkLabel" id="licenseLabel">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="no_show_all">True</property>
+                                    <property name="xalign">0</property>
+                                    <property name="label" translatable="yes">label</property>
+                                    <property name="single_line_mode">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="left_attach">1</property>
+                                    <property name="right_attach">2</property>
+                                    <property name="top_attach">3</property>
+                                    <property name="bottom_attach">4</property>
+                                    <property name="y_options"></property>
+                                  </packing>
+                                </child>
+                                <child>
                                   <placeholder/>
                                 </child>
                                 <child>
                                   <placeholder/>
                                 </child>
                                 <child>
-                                  <widget class="GtkCheckButton" id="testingCheck">
+                                  <widget class="GtkLabel" id="licenseLabelLabel">
                                     <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Testing</property>
                                     <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="toggled" handler="cb_testing_toggled"/>
+                                    <property name="label" translatable="yes">&lt;b&gt;License:&lt;/b&gt;</property>
+                                    <property name="use_markup">True</property>
+                                    <property name="single_line_mode">True</property>
                                   </widget>
                                   <packing>
-                                    <property name="top_attach">5</property>
-                                    <property name="bottom_attach">6</property>
+                                    <property name="top_attach">3</property>
+                                    <property name="bottom_attach">4</property>
                                     <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="maskedLabel">
+                                  <widget class="GtkLabel" id="notInSysLabel">
                                     <property name="visible">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="xalign">0</property>
+                                    <property name="no_show_all">True</property>
+                                    <property name="label" translatable="yes">&lt;b&gt;Installed, but not in portage anymore&lt;/b&gt;</property>
+                                    <property name="use_markup">True</property>
                                   </widget>
                                   <packing>
-                                    <property name="left_attach">1</property>
                                     <property name="right_attach">2</property>
-                                    <property name="top_attach">6</property>
-                                    <property name="bottom_attach">7</property>
+                                    <property name="top_attach">4</property>
+                                    <property name="bottom_attach">5</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkCheckButton" id="maskedCheck">
+                                  <widget class="GtkLabel" id="missingLabel">
                                     <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Masked</property>
-                                    <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="toggled" handler="cb_masked_toggled"/>
+                                    <property name="label" translatable="yes">&lt;span foreground='red'&gt;&lt;b&gt;MISSING KEYWORD&lt;/b&gt;&lt;/span&gt;</property>
+                                    <property name="use_markup">True</property>
                                   </widget>
                                   <packing>
-                                    <property name="top_attach">6</property>
-                                    <property name="bottom_attach">7</property>
-                                    <property name="x_options">GTK_FILL</property>
+                                    <property name="right_attach">2</property>
+                                    <property name="top_attach">4</property>
+                                    <property name="bottom_attach">5</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkCheckButton" id="installedCheck">
+                                  <widget class="GtkHBox" id="linkBox">
                                     <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Installed</property>
-                                    <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="button_press_event" handler="cb_button_pressed"/>
+                                    <property name="spacing">5</property>
+                                    <child>
+                                      <placeholder/>
+                                    </child>
                                   </widget>
                                   <packing>
-                                    <property name="top_attach">4</property>
-                                    <property name="bottom_attach">5</property>
-                                    <property name="x_options">GTK_FILL</property>
+                                    <property name="left_attach">1</property>
+                                    <property name="right_attach">2</property>
+                                    <property name="top_attach">2</property>
+                                    <property name="bottom_attach">3</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="homepageLinkLabel">
+                                  <widget class="GtkLabel" id="descLabelLabel">
                                     <property name="visible">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Homepage:&lt;/b&gt;</property>
+                                    <property name="label" translatable="yes">&lt;b&gt;Description:&lt;/b&gt;</property>
                                     <property name="use_markup">True</property>
                                     <property name="single_line_mode">True</property>
                                   </widget>
                                   <packing>
-                                    <property name="top_attach">2</property>
-                                    <property name="bottom_attach">3</property>
                                     <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="overlayLabel">
+                                  <widget class="GtkLabel" id="overlayLabelLabel">
                                     <property name="visible">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="no_show_all">True</property>
                                     <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">label</property>
+                                    <property name="label" translatable="yes">&lt;b&gt;Overlay:&lt;/b&gt;</property>
+                                    <property name="use_markup">True</property>
                                     <property name="single_line_mode">True</property>
                                   </widget>
                                   <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
                                     <property name="top_attach">1</property>
                                     <property name="bottom_attach">2</property>
+                                    <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
@@ -666,80 +691,106 @@
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="overlayLabelLabel">
+                                  <widget class="GtkLabel" id="overlayLabel">
                                     <property name="visible">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="no_show_all">True</property>
                                     <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Overlay:&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
+                                    <property name="label" translatable="yes">label</property>
                                     <property name="single_line_mode">True</property>
                                   </widget>
                                   <packing>
+                                    <property name="left_attach">1</property>
+                                    <property name="right_attach">2</property>
                                     <property name="top_attach">1</property>
                                     <property name="bottom_attach">2</property>
-                                    <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="descLabelLabel">
+                                  <widget class="GtkLabel" id="homepageLinkLabel">
                                     <property name="visible">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Description:&lt;/b&gt;</property>
+                                    <property name="label" translatable="yes">&lt;b&gt;Homepage:&lt;/b&gt;</property>
                                     <property name="use_markup">True</property>
                                     <property name="single_line_mode">True</property>
                                   </widget>
                                   <packing>
+                                    <property name="top_attach">2</property>
+                                    <property name="bottom_attach">3</property>
                                     <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkHBox" id="linkBox">
+                                  <widget class="GtkCheckButton" id="installedCheck">
                                     <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="spacing">5</property>
-                                    <child>
-                                      <placeholder/>
-                                    </child>
+                                    <property name="no_show_all">True</property>
+                                    <property name="label" translatable="yes">Installed</property>
+                                    <property name="xalign">0</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                    <signal name="button_press_event" handler="cb_button_pressed"/>
                                   </widget>
                                   <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">2</property>
-                                    <property name="bottom_attach">3</property>
+                                    <property name="top_attach">5</property>
+                                    <property name="bottom_attach">6</property>
+                                    <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="missingLabel">
+                                  <widget class="GtkCheckButton" id="maskedCheck">
                                     <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">&lt;span foreground='red'&gt;&lt;b&gt;MISSING KEYWORD&lt;/b&gt;&lt;/span&gt;</property>
-                                    <property name="use_markup">True</property>
+                                    <property name="label" translatable="yes">Masked</property>
+                                    <property name="xalign">0</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                    <signal name="toggled" handler="cb_masked_toggled"/>
                                   </widget>
                                   <packing>
+                                    <property name="top_attach">7</property>
+                                    <property name="bottom_attach">8</property>
+                                    <property name="x_options">GTK_FILL</property>
+                                    <property name="y_options"></property>
+                                  </packing>
+                                </child>
+                                <child>
+                                  <widget class="GtkLabel" id="maskedLabel">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="xalign">0</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="left_attach">1</property>
                                     <property name="right_attach">2</property>
-                                    <property name="top_attach">3</property>
-                                    <property name="bottom_attach">4</property>
+                                    <property name="top_attach">7</property>
+                                    <property name="bottom_attach">8</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
                                 <child>
-                                  <widget class="GtkLabel" id="notInSysLabel">
+                                  <widget class="GtkCheckButton" id="testingCheck">
                                     <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                     <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Installed, but not in portage anymore&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
+                                    <property name="label" translatable="yes">Testing</property>
+                                    <property name="xalign">0</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                    <signal name="toggled" handler="cb_testing_toggled"/>
                                   </widget>
                                   <packing>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">3</property>
-                                    <property name="bottom_attach">4</property>
+                                    <property name="top_attach">6</property>
+                                    <property name="bottom_attach">7</property>
+                                    <property name="x_options">GTK_FILL</property>
                                     <property name="y_options"></property>
                                   </packing>
                                 </child>
@@ -866,7 +917,7 @@
                           <widget class="GtkLabel" id="label2">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">F_iles</property>
+                            <property name="label" translatable="yes">Fi_les</property>
                             <property name="use_underline">True</property>
                           </widget>
                           <packing>
@@ -877,7 +928,7 @@
                         </child>
                       </widget>
                       <packing>
-                        <property name="position">2</property>
+                        <property name="position">1</property>
                       </packing>
                     </child>
                   </widget>
@@ -891,40 +942,22 @@
                     <property name="visible">True</property>
                     <property name="can_focus">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                    <property name="tab_pos">GTK_POS_BOTTOM</property>
                     <child>
                       <widget class="GtkVBox" id="queueVB">
                         <property name="visible">True</property>
                         <child>
-                          <widget class="GtkScrolledWindow" id="queueScroll">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <child>
-                              <widget class="GtkTreeView" id="queueList">
-                                <property name="visible">True</property>
-                                <property name="has_tooltip">True</property>
-                                <property name="headers_visible">False</property>
-                                <property name="enable_search">False</property>
-                                <signal name="button_press_event" handler="cb_right_click"/>
-                                <signal name="query_tooltip" handler="cb_queue_tooltip_queried"/>
-                                <signal name="row_activated" handler="cb_row_activated"/>
-                              </widget>
-                            </child>
-                          </widget>
-                        </child>
-                        <child>
                           <widget class="GtkHButtonBox" id="queueBB">
                             <property name="visible">True</property>
                             <property name="border_width">5</property>
                             <property name="homogeneous">True</property>
                             <property name="layout_style">GTK_BUTTONBOX_SPREAD</property>
                             <child>
-                              <widget class="GtkButton" id="emergeBtn">
+                              <widget class="GtkButton" id="executeBtn">
                                 <property name="visible">True</property>
-                                <property name="tooltip" translatable="yes">Install all packages in the "Emerge Queue"</property>
+                                <property name="tooltip" translatable="yes">Execute the current selected queue</property>
                                 <property name="response_id">0</property>
-                                <signal name="clicked" handler="cb_emerge_clicked"/>
+                                <signal name="clicked" handler="cb_execute_clicked"/>
                                 <child>
                                   <widget class="GtkHBox" id="hbox7">
                                     <property name="visible">True</property>
@@ -933,7 +966,7 @@
                                       <widget class="GtkImage" id="image6">
                                         <property name="visible">True</property>
                                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="stock">gtk-add</property>
+                                        <property name="stock">gtk-execute</property>
                                       </widget>
                                     </child>
                                     <child>
@@ -941,7 +974,7 @@
                                         <property name="visible">True</property>
                                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                         <property name="xalign">0</property>
-                                        <property name="label" translatable="yes">E_merge</property>
+                                        <property name="label" translatable="yes">E_xecute</property>
                                         <property name="use_underline">True</property>
                                         <property name="single_line_mode">True</property>
                                       </widget>
@@ -954,43 +987,6 @@
                               </widget>
                             </child>
                             <child>
-                              <widget class="GtkButton" id="unmergeBtn">
-                                <property name="visible">True</property>
-                                <property name="tooltip" translatable="yes">Deinstall all packages in the "Unmerge Queue"</property>
-                                <property name="response_id">0</property>
-                                <signal name="clicked" handler="cb_unmerge_clicked"/>
-                                <child>
-                                  <widget class="GtkHBox" id="hbox8">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <child>
-                                      <widget class="GtkImage" id="image7">
-                                        <property name="visible">True</property>
-                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="stock">gtk-remove</property>
-                                      </widget>
-                                    </child>
-                                    <child>
-                                      <widget class="GtkLabel" id="label13">
-                                        <property name="visible">True</property>
-                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="xalign">0</property>
-                                        <property name="label" translatable="yes">_Unmerge</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="single_line_mode">True</property>
-                                      </widget>
-                                      <packing>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </widget>
-                                </child>
-                              </widget>
-                              <packing>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                            <child>
                               <widget class="GtkButton" id="updateBtn">
                                 <property name="visible">True</property>
                                 <property name="tooltip" translatable="yes">Calculate the packages which will be installed during an "update world"</property>
@@ -1000,7 +996,7 @@
                                 <signal name="clicked" handler="cb_update_clicked"/>
                               </widget>
                               <packing>
-                                <property name="position">2</property>
+                                <property name="position">1</property>
                               </packing>
                             </child>
                             <child>
@@ -1013,13 +1009,34 @@
                                 <signal name="clicked" handler="cb_remove_clicked"/>
                               </widget>
                               <packing>
-                                <property name="position">3</property>
+                                <property name="position">2</property>
                               </packing>
                             </child>
                           </widget>
                           <packing>
                             <property name="expand">False</property>
                             <property name="fill">False</property>
+                          </packing>
+                        </child>
+                        <child>
+                          <widget class="GtkScrolledWindow" id="queueScroll">
+                            <property name="visible">True</property>
+                            <property name="can_focus">False</property>
+                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <child>
+                              <widget class="GtkTreeView" id="queueList">
+                                <property name="visible">True</property>
+                                <property name="has_tooltip">True</property>
+                                <property name="headers_visible">False</property>
+                                <property name="enable_search">False</property>
+                                <signal name="button_press_event" handler="cb_right_click"/>
+                                <signal name="query_tooltip" handler="cb_queue_tooltip_queried"/>
+                                <signal name="row_activated" handler="cb_row_activated"/>
+                              </widget>
+                            </child>
+                          </widget>
+                          <packing>
                             <property name="position">1</property>
                           </packing>
                         </child>
@@ -1440,191 +1457,191 @@
                               <placeholder/>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="maskLabel">
+                              <widget class="GtkEntry" id="useFileEdit">
                                 <property name="visible">True</property>
-                                <property name="xalign">0</property>
-                                <property name="xpad">5</property>
-                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Masking Keywords&lt;/i&gt;&lt;/u&gt;</property>
-                                <property name="use_markup">True</property>
-                                <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">7</property>
-                                <property name="bottom_attach">8</property>
-                                <property name="y_padding">5</property>
+                                <property name="left_attach">1</property>
+                                <property name="right_attach">2</property>
+                                <property name="top_attach">3</property>
+                                <property name="bottom_attach">4</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="testLabel">
+                              <widget class="GtkLabel" id="useEditLabel">
                                 <property name="visible">True</property>
                                 <property name="xalign">0</property>
-                                <property name="xpad">5</property>
-                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Testing Keywords&lt;/i&gt;&lt;/u&gt;</property>
-                                <property name="use_markup">True</property>
+                                <property name="label" translatable="yes">File name to use, if package.use is a directory: </property>
                                 <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">4</property>
-                                <property name="bottom_attach">5</property>
-                                <property name="y_padding">5</property>
+                                <property name="top_attach">3</property>
+                                <property name="bottom_attach">4</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="useLabel">
+                              <widget class="GtkCheckButton" id="usePerVersionCheck">
                                 <property name="visible">True</property>
-                                <property name="xalign">0</property>
-                                <property name="xpad">5</property>
-                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Use-Flags&lt;/i&gt;&lt;/u&gt;</property>
-                                <property name="use_markup">True</property>
-                                <property name="single_line_mode">True</property>
+                                <property name="label" translatable="yes">Add only exact version to package.use</property>
+                                <property name="response_id">0</property>
+                                <property name="draw_indicator">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">1</property>
-                                <property name="bottom_attach">2</property>
-                                <property name="y_padding">6</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <widget class="GtkEventBox" id="hintEB">
-                                <property name="visible">True</property>
-                                <child>
-                                  <widget class="GtkFrame" id="hintFrame">
-                                    <property name="visible">True</property>
-                                    <property name="label_xalign">0</property>
-                                    <property name="shadow_type">GTK_SHADOW_OUT</property>
-                                    <child>
-                                      <widget class="GtkLabel" id="hintLabel">
-                                        <property name="visible">True</property>
-                                        <property name="xalign">0</property>
-                                        <property name="label" translatable="yes">&lt;u&gt;You may use the following placeholders:&lt;/u&gt;
-
-&lt;i&gt;$(cat)&lt;/i&gt;: category
-&lt;i&gt;$(pkg)&lt;/i&gt;: package name
-&lt;i&gt;$(cat-1)/$(cat-2)&lt;/i&gt;: first/second part of the category</property>
-                                        <property name="use_markup">True</property>
-                                      </widget>
-                                    </child>
-                                    <child>
-                                      <placeholder/>
-                                      <packing>
-                                        <property name="type">label_item</property>
-                                      </packing>
-                                    </child>
-                                  </widget>
-                                </child>
-                              </widget>
-                              <packing>
                                 <property name="right_attach">2</property>
+                                <property name="top_attach">2</property>
+                                <property name="bottom_attach">3</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkCheckButton" id="maskPerVersionCheck">
+                              <widget class="GtkCheckButton" id="testPerVersionCheck">
                                 <property name="visible">True</property>
-                                <property name="label" translatable="yes">Add only exact version to package.mask/package.unmask</property>
+                                <property name="label" translatable="yes">Add only exact version to package.keywords</property>
                                 <property name="response_id">0</property>
                                 <property name="draw_indicator">True</property>
                               </widget>
                               <packing>
                                 <property name="right_attach">2</property>
-                                <property name="top_attach">8</property>
-                                <property name="bottom_attach">9</property>
+                                <property name="top_attach">5</property>
+                                <property name="bottom_attach">6</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="maskEditLabel">
+                              <widget class="GtkLabel" id="testEditLabel">
                                 <property name="visible">True</property>
                                 <property name="xalign">0</property>
-                                <property name="label" translatable="yes">File name to use, if package.mask/package.unmask is a directory: </property>
+                                <property name="label" translatable="yes">File name to use, if package.keywords is a directory: </property>
                                 <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">9</property>
-                                <property name="bottom_attach">10</property>
+                                <property name="top_attach">6</property>
+                                <property name="bottom_attach">7</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkEntry" id="maskFileEdit">
+                              <widget class="GtkEntry" id="testFileEdit">
                                 <property name="visible">True</property>
                               </widget>
                               <packing>
                                 <property name="left_attach">1</property>
                                 <property name="right_attach">2</property>
-                                <property name="top_attach">9</property>
-                                <property name="bottom_attach">10</property>
+                                <property name="top_attach">6</property>
+                                <property name="bottom_attach">7</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkEntry" id="testFileEdit">
+                              <widget class="GtkEntry" id="maskFileEdit">
                                 <property name="visible">True</property>
                               </widget>
                               <packing>
                                 <property name="left_attach">1</property>
                                 <property name="right_attach">2</property>
-                                <property name="top_attach">6</property>
-                                <property name="bottom_attach">7</property>
+                                <property name="top_attach">9</property>
+                                <property name="bottom_attach">10</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="testEditLabel">
+                              <widget class="GtkLabel" id="maskEditLabel">
                                 <property name="visible">True</property>
                                 <property name="xalign">0</property>
-                                <property name="label" translatable="yes">File name to use, if package.keywords is a directory: </property>
+                                <property name="label" translatable="yes">File name to use, if package.mask/package.unmask is a directory: </property>
                                 <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">6</property>
-                                <property name="bottom_attach">7</property>
+                                <property name="top_attach">9</property>
+                                <property name="bottom_attach">10</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkCheckButton" id="testPerVersionCheck">
+                              <widget class="GtkCheckButton" id="maskPerVersionCheck">
                                 <property name="visible">True</property>
-                                <property name="label" translatable="yes">Add only exact version to package.keywords</property>
+                                <property name="label" translatable="yes">Add only exact version to package.mask/package.unmask</property>
                                 <property name="response_id">0</property>
                                 <property name="draw_indicator">True</property>
                               </widget>
                               <packing>
                                 <property name="right_attach">2</property>
-                                <property name="top_attach">5</property>
-                                <property name="bottom_attach">6</property>
+                                <property name="top_attach">8</property>
+                                <property name="bottom_attach">9</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkCheckButton" id="usePerVersionCheck">
+                              <widget class="GtkEventBox" id="hintEB">
                                 <property name="visible">True</property>
-                                <property name="label" translatable="yes">Add only exact version to package.use</property>
-                                <property name="response_id">0</property>
-                                <property name="draw_indicator">True</property>
+                                <child>
+                                  <widget class="GtkFrame" id="hintFrame">
+                                    <property name="visible">True</property>
+                                    <property name="label_xalign">0</property>
+                                    <property name="shadow_type">GTK_SHADOW_OUT</property>
+                                    <child>
+                                      <widget class="GtkLabel" id="hintLabel">
+                                        <property name="visible">True</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">&lt;u&gt;You may use the following placeholders:&lt;/u&gt;
+
+&lt;i&gt;$(cat)&lt;/i&gt;: category
+&lt;i&gt;$(pkg)&lt;/i&gt;: package name
+&lt;i&gt;$(cat-1)/$(cat-2)&lt;/i&gt;: first/second part of the category</property>
+                                        <property name="use_markup">True</property>
+                                      </widget>
+                                    </child>
+                                    <child>
+                                      <placeholder/>
+                                      <packing>
+                                        <property name="type">label_item</property>
+                                      </packing>
+                                    </child>
+                                  </widget>
+                                </child>
                               </widget>
                               <packing>
                                 <property name="right_attach">2</property>
-                                <property name="top_attach">2</property>
-                                <property name="bottom_attach">3</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkLabel" id="useEditLabel">
+                              <widget class="GtkLabel" id="useLabel">
                                 <property name="visible">True</property>
                                 <property name="xalign">0</property>
-                                <property name="label" translatable="yes">File name to use, if package.use is a directory: </property>
+                                <property name="xpad">5</property>
+                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Use-Flags&lt;/i&gt;&lt;/u&gt;</property>
+                                <property name="use_markup">True</property>
                                 <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="top_attach">3</property>
-                                <property name="bottom_attach">4</property>
+                                <property name="top_attach">1</property>
+                                <property name="bottom_attach">2</property>
+                                <property name="y_padding">6</property>
                               </packing>
                             </child>
                             <child>
-                              <widget class="GtkEntry" id="useFileEdit">
+                              <widget class="GtkLabel" id="testLabel">
                                 <property name="visible">True</property>
+                                <property name="xalign">0</property>
+                                <property name="xpad">5</property>
+                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Testing Keywords&lt;/i&gt;&lt;/u&gt;</property>
+                                <property name="use_markup">True</property>
+                                <property name="single_line_mode">True</property>
                               </widget>
                               <packing>
-                                <property name="left_attach">1</property>
-                                <property name="right_attach">2</property>
-                                <property name="top_attach">3</property>
-                                <property name="bottom_attach">4</property>
+                                <property name="top_attach">4</property>
+                                <property name="bottom_attach">5</property>
+                                <property name="y_padding">5</property>
                               </packing>
                             </child>
+                            <child>
+                              <widget class="GtkLabel" id="maskLabel">
+                                <property name="visible">True</property>
+                                <property name="xalign">0</property>
+                                <property name="xpad">5</property>
+                                <property name="label" translatable="yes">&lt;u&gt;&lt;i&gt;Masking Keywords&lt;/i&gt;&lt;/u&gt;</property>
+                                <property name="use_markup">True</property>
+                                <property name="single_line_mode">True</property>
+                              </widget>
+                              <packing>
+                                <property name="top_attach">7</property>
+                                <property name="bottom_attach">8</property>
+                                <property name="y_padding">5</property>
+                              </packing>
+                            </child>
                           </widget>
                         </child>
                       </widget>
@@ -1669,83 +1686,231 @@
                     <property name="visible">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                     <child>
-                      <widget class="GtkCheckButton" id="titleUpdateCheck">
+                      <widget class="GtkFrame" id="visualGeneralFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Show emerge progress in title - similar to the console tab</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
+                        <property name="label_xalign">0</property>
+                        <child>
+                          <widget class="GtkAlignment" id="alignment8">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="left_padding">12</property>
+                            <child>
+                              <widget class="GtkVBox" id="vbox6">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <child>
+                                  <widget class="GtkCheckButton" id="systrayCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Enable systray</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                  </packing>
+                                </child>
+                                <child>
+                                  <widget class="GtkCheckButton" id="titleUpdateCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Show emerge progress in title - similar to the console tab</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                                <child>
+                                  <widget class="GtkCheckButton" id="minimizeCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Hide on minimization (only if systray is enabled)</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                    <property name="position">2</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label3">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="label" translatable="yes">&lt;b&gt;General Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
                       </packing>
                     </child>
                     <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <widget class="GtkCheckButton" id="systrayCheck">
+                      <widget class="GtkFrame" id="consoleFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Enable systray</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
+                        <property name="label_xalign">0</property>
+                        <child>
+                          <widget class="GtkAlignment" id="alignment9">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="bottom_padding">5</property>
+                            <property name="left_padding">12</property>
+                            <property name="right_padding">5</property>
+                            <child>
+                              <widget class="GtkHBox" id="hbox1">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="spacing">5</property>
+                                <child>
+                                  <widget class="GtkLabel" id="label11">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="xalign">0</property>
+                                    <property name="label" translatable="yes">Console Font</property>
+                                  </widget>
+                                </child>
+                                <child>
+                                  <widget class="GtkFontButton" id="consoleFontBtn">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="receives_default">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="response_id">0</property>
+                                    <property name="title" translatable="yes">Chose a console font</property>
+                                    <property name="use_font">True</property>
+                                    <property name="use_size">True</property>
+                                    <property name="show_style">False</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label8">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="label" translatable="yes">&lt;b&gt;Console Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="position">2</property>
+                        <property name="position">1</property>
                       </packing>
                     </child>
                     <child>
-                      <widget class="GtkCheckButton" id="minimizeCheck">
+                      <widget class="GtkFrame" id="tabFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Hide on minimization (only if systray is enabled)</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="position">3</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkHBox" id="hbox1">
-                        <property name="visible">True</property>
-                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="spacing">5</property>
+                        <property name="label_xalign">0</property>
                         <child>
-                          <widget class="GtkLabel" id="label11">
+                          <widget class="GtkAlignment" id="alignment10">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="xalign">0</property>
-                            <property name="label" translatable="yes">Console Font</property>
+                            <property name="bottom_padding">5</property>
+                            <property name="left_padding">12</property>
+                            <property name="right_padding">5</property>
+                            <child>
+                              <widget class="GtkVBox" id="vbox7">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="spacing">5</property>
+                                <child>
+                                  <widget class="GtkHBox" id="hbox2">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="homogeneous">True</property>
+                                    <child>
+                                      <widget class="GtkLabel" id="label15">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">Package Tabs</property>
+                                      </widget>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkComboBox" id="packageTabCombo">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="items" translatable="yes"></property>
+                                      </widget>
+                                      <packing>
+                                        <property name="position">1</property>
+                                      </packing>
+                                    </child>
+                                  </widget>
+                                </child>
+                                <child>
+                                  <widget class="GtkHBox" id="hbox4">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="homogeneous">True</property>
+                                    <child>
+                                      <widget class="GtkLabel" id="label21">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">System Tabs</property>
+                                      </widget>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkComboBox" id="systemTabCombo">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="items" translatable="yes"></property>
+                                      </widget>
+                                      <packing>
+                                        <property name="position">1</property>
+                                      </packing>
+                                    </child>
+                                  </widget>
+                                  <packing>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
                           </widget>
                         </child>
                         <child>
-                          <widget class="GtkFontButton" id="consoleFontBtn">
+                          <widget class="GtkLabel" id="label9">
                             <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="response_id">0</property>
-                            <property name="title" translatable="yes">Chose a console font</property>
-                            <property name="use_font">True</property>
-                            <property name="use_size">True</property>
-                            <property name="show_style">False</property>
+                            <property name="label" translatable="yes">&lt;b&gt;Tab Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
                           </widget>
                           <packing>
-                            <property name="position">1</property>
+                            <property name="type">label_item</property>
                           </packing>
                         </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="padding">5</property>
-                        <property name="position">4</property>
+                        <property name="position">2</property>
                       </packing>
                     </child>
                   </widget>
@@ -1927,14 +2092,17 @@
     <property name="skip_pager_hint">True</property>
     <property name="urgency_hint">True</property>
     <property name="has_separator">False</property>
+    <property name="program_name">Portato</property>
     <property name="copyright" translatable="yes">This software is licensed under the terms of the GPLv2.
 Copyright (C) 2006-2007 René 'Necoro' Neumann &lt;necoro@necoro.net&gt;</property>
     <property name="comments" translatable="yes">A Portage GUI</property>
     <property name="website">http://portato.necoro.net</property>
     <property name="authors">René 'Necoro' Neumann
 
-Many thanks to the Porthole team which often inspired me or gave me hints.
-(And sometimes I even copied files ^^ ;))</property>
+Thanks goto:
+	- The Porthole team, which often inspired me and gave me hints :)
+	- franzf, who often tested and gave comments
+	- the Sabayon-Distro for making Portato the default Portage-GUI</property>
     <property name="translator_credits">Catalan - Roger Calvó
 German - René 'Necoro' Neumann</property>
     <property name="artists">p4r4d0x (inspired by wolfden)</property>
=== portato/backend/portage/system.py
==================================================================
--- portato/backend/portage/system.py	(revision 636)
+++ portato/backend/portage/system.py	(patch 0.8.9.2 level 1)
@@ -70,6 +70,7 @@
 		default_opts = self.get_global_settings("EMERGE_DEFAULT_OPTS")
 		opts = dict(os.environ)
 		opts.update(TERM = "xterm") # emulate terminal :)
+		opts.update(PAGER = "less") # force less
 
 		if default_opts:
 			opt_list = default_opts.split()
=== portato/plistener.py
==================================================================
--- portato/plistener.py	(revision 636)
+++ portato/plistener.py	(patch 0.8.9.2 level 1)
@@ -93,7 +93,7 @@
 			try:
 				import shm_wrapper as shm
 			except ImportError:
-				from portato.shm import shm_wrapper as shm
+				from portato._shm import shm_wrapper as shm
 
 			self._mem = shm.SharedMemoryHandle(mem)
 			self._sig = shm.SemaphoreHandle(sig)
=== etc/portato.cfg
==================================================================
--- etc/portato.cfg	(revision 636)
+++ etc/portato.cfg	(patch 0.8.9.2 level 1)
@@ -73,4 +73,13 @@
 ; sets the font of the console - string values
 consolefont = Monospace 11
 
+; sets the position of the tabs of the two notebooks
+; allowed positions:
+;						- 1 : top
+;						- 2 : bottom
+;						- 3 : left
+;						- 4 : right
+packagetabpos = 2
+systemtabpos = 2
+
 # vim:ts=4:sw=4:ft=cfg
=== shm/__init__.py
==================================================================
=== shm/shm_wrapper.py
==================================================================
--- shm/shm_wrapper.py	(revision 636)
+++ shm/shm_wrapper.py	(patch 0.8.9.2 level 1)
@@ -1,301 +0,0 @@
-# shm_wrapper - A wrapper for the shm module which provides access
-# to System V shared memory and semaphores on *nix systems.
-#
-# Copyright (c) 2007 by Philip Semanchuk
-# Contact info at http://NikitaTheSpider.com/
-#
-# This program is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License
-# as published by the Free Software Foundation; either version 2
-# of the License, or (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-
-# Python modules
-import random
-import sys
-
-# Third party modules
-import shm
-
-r"""shm_wrapper - A wrapper for the shm module which provides access
-to System V shared memory and semaphores on *nix systems.
-
-The module shm is a Python wrapper around system functions like shmget. This
-module in turn offers higher-level, more Pythonic access to shared memory and
-semaphores.
-
-Full documentation is online at http://NikitaTheSpider.com/python/shm/
-
-"""
-
-def create_memory(size, permissions = 0666, InitCharacter = ' '):
-    """ Creates a new shared memory segment. One can destroy it either by calling the
-    module-level method remove_memory() or by calling the .remove() method of a handle to
-    said memory.
-    """
-    memory = None
-
-    # I create the memory using a randomly-generated key. I keep trying until I find one
-    # that works or until I hit an error.
-    while not memory:
-        key = random.randint(1, sys.maxint - 1)
-        try:
-            memory = shm.create_memory(key, size, permissions)
-        except shm.error, ExtraData:
-            if shm.memory_haskey(key):
-                # Oops, bad luck, the key exists. I'll try another. I can't call
-                # memory_haskey() before calling create_memory() because that would create
-                # a race condition where I could verify a key is not used but then another
-                # process could call create_memory() with that key before I got a chance to
-                # do so.
-                pass
-            else:
-                # Uh-oh, something fundamental is wrong.
-                raise shm.error, ExtraData
-
-    # Here I implicitly discard the memory handle object returned to me by shm and instead
-    # return my own handle to the shared memory segment.
-    memory = SharedMemoryHandle(key)
-
-    memory.write(InitCharacter[0] * memory.size)
-
-    return memory
-
-
-def remove_memory(key):
-    # Destroys the shared memory segment. Raises KeyError if the key doesn't exist.
-    shm.remove_memory(shm.getshmid(key))
-
-
-class SharedMemoryHandle(object):
-    def __init__(self, key):
-        self._MemoryHandle = None
-
-        # getshmid will raise a KeyError if there's no memory segment with this key.
-        shmid = shm.getshmid(key)
-        self._MemoryHandle = shm.memory(shmid)
-
-
-    def __del__(self):
-        if self._MemoryHandle:
-            # This will raise an error if the memory has been destroyed.
-            try:
-                if self._MemoryHandle.attached:
-                    self._MemoryHandle.detach()
-            except shm.error:
-                pass
-
-
-    def remove(self):
-        if self._MemoryHandle:
-            if self._MemoryHandle.attached:
-                self._MemoryHandle.detach()
-
-            shm.remove_memory(self._MemoryHandle.shmid)
-            self._MemoryHandle = None
-
-
-    def read(self, NumberOfBytes = 0, offset = 0):
-        if not self._MemoryHandle.attached:
-            self._MemoryHandle.attach()
-
-        if not NumberOfBytes:
-            NumberOfBytes = self._MemoryHandle.size - offset
-
-        return self._MemoryHandle.read(NumberOfBytes, offset)
-
-
-    def write(self, s, offset = 0):
-        if not self._MemoryHandle.attached:
-            self._MemoryHandle.attach()
-
-        self._MemoryHandle.write(s, offset)
-
-
-    # Properties start here ================================================================
-
-    # key
-    def __get_key(self): return self._MemoryHandle.key
-    def __set_key(self, foo): raise AttributeError
-    key = property(__get_key, __set_key)
-
-    # size of segment
-    def __get_size(self): return self._MemoryHandle.size
-    def __set_size(self, foo): raise AttributeError
-    size = property(__get_size, __set_size)
-
-    # permissions
-    def __get_permissions(self): return self._MemoryHandle.perm
-    def __set_permissions(self, permissions): self._MemoryHandle.setperm(permissions)
-    permissions = property(__get_permissions, __set_permissions)
-
-    # The number of processes currently attached to this memory segment.
-    def __get_number_attached(self): return self._MemoryHandle.nattch
-    def __set_number_attached(self, foo): raise AttributeError
-    number_attached = property(__get_number_attached, __set_number_attached)
-
-    # segment's uid
-    def __get_uid(self): return self._MemoryHandle.uid
-    def __set_uid(self, uid): self._MemoryHandle.setuid(uid)
-    uid = property(__get_uid, __set_uid)
-
-    # segment's gid
-    def __get_gid(self): return self._MemoryHandle.gid
-    def __set_gid(self, gid): self._MemoryHandle.setgid(gid)
-    gid = property(__get_gid, __set_gid)
-
-    # Creator uid (read-only)
-    def __get_creator_uid(self): return self._MemoryHandle.cuid
-    def __set_creator_uid(self, foo): raise AttributeError
-    creator_uid = property(__get_creator_uid, __set_creator_uid)
-
-    # Creator gid (read-only)
-    def __get_creator_gid(self): return self._MemoryHandle.cgid
-    def __set_creator_gid(self, foo): raise AttributeError
-    creator_gid = property(__get_creator_gid, __set_creator_gid)
-
-    # Creator pid (read-only)
-    def __get_creator_pid(self): return self._MemoryHandle.cpid
-    def __set_creator_pid(self, foo): raise AttributeError
-    creator_pid = property(__get_creator_pid, __set_creator_pid)
-
-    # pid of last process to operate on this segment (read-only)
-    def __get_last_pid(self): return self._MemoryHandle.lpid
-    def __set_last_pid(self, foo): raise AttributeError
-    last_pid = property(__get_last_pid, __set_last_pid)
-
-
-
-def create_semaphore(InitialValue = 1, permissions = 0666):
-    """ Creates a new semaphore. One can destroy it either by calling the
-    module-level method remove_semaphore() or by calling the .remove() method of a
-    handle to said semaphore.
-    """
-    semaphore = None
-
-    # I create the semaphore using a randomly-generated key. I keep trying until I find one
-    # that works or until I hit an error.
-    while not semaphore:
-        key = random.randint(1, sys.maxint - 1)
-        try:
-            semaphore = shm.create_semaphore(key, InitialValue, permissions)
-        except shm.error, ExtraData:
-            if shm.semaphore_haskey(key):
-                # Oops, bad luck, the key exists. I'll try another. I can't call
-                # memory_haskey() before calling create_semaphore() because that would create
-                # a race condition where I could verify a key is not used but then another
-                # process could call create_semaphore() with that key before I got a chance to
-                # do so.
-                pass
-            else:
-                # Uh-oh, something fundamental is wrong.
-                raise ExtraData
-
-    # Here I implicitly discard the semaphore object returned to me by shm and instead
-    # return my own handle to the semaphore.
-    return SemaphoreHandle(key)
-
-
-def remove_semaphore(key):
-    # Destroys the semaphore. Raises KeyError if the key doesn't exist.
-    shm.remove_semaphore(shm.getsemid(key))
-
-
-class SemaphoreHandle(object):
-    def __init__(self, key):
-        # getsemid will raise a KeyError if appropriate.
-        self._SemaphoreHandle = shm.semaphore(shm.getsemid(key))
-
-
-    def remove(self):
-        shm.remove_semaphore(self._SemaphoreHandle.semid)
-        self._SemaphoreHandle = None
-
-
-    def P(self):
-        # P = prolaag = probeer te verlagen (try to decrease)
-        self._SemaphoreHandle.P()
-
-
-    def V(self):
-        # V = verhoog (increase)
-        self._SemaphoreHandle.V()
-
-
-    def Z(self):
-        # Z = block until Zee semaphore is Zero
-        self._SemaphoreHandle.Z()
-
-
-    # Properties start here ================================================================
-    def __get_key(self): return self._SemaphoreHandle.key
-    def __set_key(self, foo): raise AttributeError
-    key = property(__get_key, __set_key)
-
-
-    def __get_value(self): return self._SemaphoreHandle.val
-    def __set_value(self, value): self._semaphore.setval(value)
-    value = property(__get_value, __set_value)
-
-
-    def __get_WaitingForZero(self): return self._SemaphoreHandle.zcnt
-    def __set_WaitingForZero(self, foo): raise AttributeError
-    WaitingForZero = property(__get_WaitingForZero, __set_WaitingForZero)
-
-
-    def __get_WaitingForNonZero(self): return self._SemaphoreHandle.ncnt
-    def __set_WaitingForNonZero(self, foo): raise AttributeError
-    WaitingForNonZero = property(__get_WaitingForNonZero, __set_WaitingForNonZero)
-
-
-    def __get_blocking(self): return self._SemaphoreHandle.blocking
-    def __set_blocking(self, block): self._SemaphoreHandle.setblocking(block)
-    blocking = property(__get_blocking, __set_blocking)
-
-
-    def __get_undo(self): raise AttributeError
-    def __set_undo(self, undo): self._SemaphoreHandle.setundo(undo)
-    undo = property(__get_undo, __set_undo)
-
-
-    # segment's uid
-    def __get_uid(self): return self._SemaphoreHandle.uid
-    def __set_uid(self, uid): self._SemaphoreHandle.setuid(uid)
-    uid = property(__get_uid, __set_uid)
-
-
-    # segment's gid
-    def __get_gid(self): return self._SemaphoreHandle.gid
-    def __set_gid(self, gid): self._SemaphoreHandle.setgid(gid)
-    gid = property(__get_gid, __set_gid)
-
-
-    # Creator uid (read-only)
-    def __get_creator_uid(self): return self._SemaphoreHandle.cuid
-    def __set_creator_uid(self, foo): raise AttributeError
-    creator_uid = property(__get_creator_uid, __set_creator_uid)
-
-
-    # Creator gid (read-only)
-    def __get_creator_gid(self): return self._SemaphoreHandle.cgid
-    def __set_creator_gid(self, foo): raise AttributeError
-    creator_gid = property(__get_creator_gid, __set_creator_gid)
-
-
-    # Creator pid -- since semaphores have a lot of the same properties as memory
-    # objects, one would expect creator PID to be exposed here, but it isn't
-    # made available by the system (true AFAICT for BSDs, OS X and Solaris).
-
-
-    # pid of last process to operate on this segment (read-only)
-    def __get_last_pid(self): return self._SemaphoreHandle.lpid
-    def __set_last_pid(self, foo): raise AttributeError
-    last_pid = property(__get_last_pid, __set_last_pid)
=== shm/shmmodule.c
==================================================================
--- shm/shmmodule.c	(revision 636)
+++ shm/shmmodule.c	(patch 0.8.9.2 level 1)
@@ -1,1396 +0,0 @@
-/****************************************************************************
- *
- * shmmodule.c Copyright 1997, 1998 by INRIA. All rights reserved.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY WARRANTIES, EXPRESS OR IMPLIED,
- * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
- * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- *
- * IN NO EVENT SHALL THE INRIA OR THE AUTHORS BE LIABLE FOR ANY DIRECT,
- * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES,
- * INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,
- * LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION, HOWEVER CAUSED AND
- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT,
- * INCLUDING NEGLIGENCE OR OTHERWISE, ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- ***************************************************************************/
-
-/* Python Shared Memory module 
-   Written by Vladimir Marangozov  
-   Adopted by Philip Semanchuk 
-
-  This module provides an interface to System V shared memory IPC.
-
-  Version history:
-  - 1.0 (sometime in the 1990s) - Released by Mr. Marangozov
-  - 1.1 (Feb 2007) - Released by me, Philip Semanchuk. Fixes a few bugs (including some 
-        memory leaks) and adds the ability to read the blocking flag on semaphores.
-  - 1.1.1 (Mar 2007)- Updated setup.py to handle compile options for Linux users.
-  - 1.1.2 (Nov 2007) - Fixed a sprintf() format in repr to handle size_t.
-  - 1.1.3 (Nov 2007) - Changed #define of key to _key instead of __key for OS X Leopard.
-        Thanks to Bill Hart.
-  - 1.1.4 (Jan 2008) - Changed the reference to key in the ipc_perm structure to the 
-        explicit #define IPC_PERM_KEY_NAME. 
-
-  See http://NikitaTheSpider.com/python/shm/ for more thorough documentation, a more Pythonic 
-  wrapper, updates, contact info, setup.py, etc.
-
-
-  Module interface:
-
-  - shm.create_memory(int Key, int Size [,int Perm=0666]) --> object
-  - shm.create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object
-  - shm.error
-  - shm.ftok(string Path, int ProjId) --> int
-  - shm.getsemid(int Key) --> int
-  - shm.getshmid(int Key) --> int
-  - shm.memory(int Shmid) --> object
-  - shm.memory_haskey(int Key) --> int
-  - shm.remove_memory(int Shmid) --> None
-  - shm.remove_semaphore(int Semid) --> None
-  - shm.semaphore(int Semid) --> object
-  - shm.semaphore_haskey(int Key) --> int
-
-  Memory Objects:
-
-  + Members:
-
-    - m.addr	- attachment address in the process address space
-    - m.attached	- 0|1
-    - m.cgid	- gid of creator
-    - m.cpid	- pid of creator
-    - m.cuid	- uid of creator
-    - m.gid		- gid of owner
-    - m.key		- segment key or IPC_PRIVATE (=0)
-    - m.lpid	- pid of last shmop
-    - m.nattch	- current # of attached processes
-    - m.perm	- operation permission
-    - m.shmid	- shared memory segment id
-    - m.size	- segment size
-    - m.uid		- uid of owner
-
-  + Methods:
-
-    - m.attach([int Addr=0 [,int How=0]]) --> None
-    - m.detach() --> None
-    - m.read(int Nbytes [,int Offset=0]) --> string
-    - m.setgid(int Gid) --> None
-    - m.setperm(int Perm) --> None
-    - m.setuid(int Uid) --> None
-    - m.write(string Data [,int Offset=0]) --> None
-
-  Semaphore Objects:
-
-  + Members:
-
-    - s.cgid        - gid of creator
-    - s.cuid        - uid of creator
-    - s.gid         - gid of owner
-    - s.key         - semaphore key or IPC_PRIVATE (=0)
-    - s.lpid        - pid of last semop
-    - s.ncnt        - current # of processes waiting for s.val > 0
-    - s.perm        - operation permission
-    - s.semid       - semaphore id
-    - s.uid         - uid of owner
-    - s.val         - value of the semaphore counter
-    - s.zcnt        - current # of processes waiting for s.val == 0
-    - s.blocking    - whether or not the semaphore is in blocking mode
-
-  + Methods:
-
-    - s.P() --> None		- blocks if s.val == 0; decrements s.val
-    - s.V() --> None		- increments s.val
-    - s.Z() --> None		- blocks until s.val == 0
-    - s.setblocking(0|1) --> None
-    - s.setgid(int Gid) --> None
-    - s.setperm(int Perm) --> None
-    - s.setuid(int Uid) --> None
-    - s.setundo(0|1) --> None
-    - s.setval(int Value) --> None
-
-*/
-
-/* ------------------------------------------------------------------------- */
-#include "Python.h"
-#include "structmember.h"
-
-/* v1.1 - added */
-#ifdef __FreeBSD__
-#include <machine/param.h>  /* for system definition of PAGE_SIZE */
-#endif
-
-#include <sys/types.h>
-#include <sys/ipc.h>		/* for system's IPC_xxx definitions */
-#include <sys/shm.h>		/* for shmget, shmat, shmdt, shmctl */
-#include <sys/sem.h>		/* for semget, semctl, semop */
-
-/* v1.1.4 - The name of this member varies and is sniffed out by setup.py. */
-#if defined(ZERO_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME   key
-#elif defined(ONE_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME  _key
-#elif defined(TWO_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME __key
-#endif
-
-/*
--- Exception type for errors detected by this module.
-*/
-
-static PyObject *PyShm_Error;
-
-/*
--- Convenience function to raise an error according to errno.
-*/
-
-static PyObject *
-PyShm_Err(void)
-{
-    return PyErr_SetFromErrno(PyShm_Error);
-}
-
-/*
--- The object holding a shared memory segment
-*/
-
-typedef struct {
-    PyObject_HEAD
-    int shmid;			/* shared memory id	*/
-    int mode;			/* attachment mode	*/
-    void *addr;			/* shmseg start address	*/
-    struct shmid_ds ds;		/* data structure	*/
-} PyShmMemoryObject;
-
-staticforward PyTypeObject	PyShmMemory_Type;
-
-#define PyShmObj		PyShmMemoryObject
-#define PyShmMemory_Check(op)	((op)->ob_type == &PyShmMemory_Type)
-
-/*
--- The object holding a semaphore
-*/
-
-typedef struct {
-    PyObject_HEAD
-    int semid;			/* semaphore id		*/
-    short opflag;		/* IPC_NOWAIT, SEM_UNDO	*/
-    struct semid_ds ds;		/* data structure	*/
-} PyShmSemaphoreObject;
-
-#ifndef HAVE_UNION_SEMUN
-union semun {
-    int val;                    /* used for SETVAL only */
-    struct semid_ds *buf;       /* for IPC_STAT and IPC_SET */
-    unsigned short *array;      /* used for GETALL and SETALL */
-};
-#endif
-
-typedef union semun semctl_arg;
-
-staticforward PyTypeObject	PyShmSemaphore_Type;
-
-#define PyShmSemObj		PyShmSemaphoreObject
-#define PyShmSemaphore_Check(op) ((op)->ob_type == &PyShmSemaphore_Type)
-
-/*
--- Internal dictionaries for Python memory and semaphore objects
-*/
-
-static PyObject *shm_dict = NULL;
-static PyObject *sem_dict = NULL;
-
-/************************************************************/
-/*                       Memory Objects                     */
-/************************************************************/
-
-/* This is to check the validity of a Python memory object
-   (and to refresh its data status structure). Notably, we
-   have to check that the real memory segment it points to
-   is still in memory and hasn't changed (test its id and
-   size). It could be that the segment has been removed and
-   created again by someone else with the same key. This is
-   fine as far as the segment (1) has the same id and size,
-   and (2) is accessible via shmctl. If you have a better
-   test, you're welcome :-) */
-
-static int
-check_memory_identity(PyShmObj *o)
-{
-    int new_shmid;
-    int old_shmid = o->shmid;
-    int old_size = o->ds.shm_segsz;
-    key_t old_key = o->ds.shm_perm.IPC_PERM_KEY_NAME;
-
-    /*
-    -- 1. Try to get the segment identified by the old key (if not IPC_PRIVATE)
-    -- 2. On failure or on mismatch of the new and the old id -> fail.
-    -- 3. Try to refresh the object's status using the new id.
-    -- 4. On failure (the segment cannot be accessed) -> fail.
-    -- 5. Finaly, compare the old size and the one we got via the new id.
-    */
-    if (old_key != IPC_PRIVATE) {
-        new_shmid = shmget(old_key, 0, 0);
-        if (new_shmid != old_shmid)
-            return 0;
-    }
-    else
-        new_shmid = old_shmid;
-    if ((shmctl(new_shmid, IPC_STAT, &(o->ds)) != -1) &&
-        (old_size == o->ds.shm_segsz) &&
-	    (old_key == o->ds.shm_perm.IPC_PERM_KEY_NAME))
-        return 1;
-    return 0;
-}
-
-/* Convenience macro for updating the shared memory data status structure */
-
-#define refresh_memory_status(o)					\
-    if (!check_memory_identity(o)) {					\
-	   PyErr_SetString(PyShm_Error, "can't access shared memory segment");		\
-	   return NULL;							\
-    }
-
-/*
--- attach([,address=0 [,how=0]])
-*/
-
-/* Attach the shared memory segment to the process address space */
-
-static PyObject *
-PyShmMemory_attach(PyShmObj *self, PyObject *args)
-{
-    unsigned long address = 0;
-    int mode = 0;
-    void *addr, *old_addr;
-
-    if (!PyArg_ParseTuple(args, "|li", &address, &mode))
-	   return NULL;
-    refresh_memory_status(self);
-    /* return if already attached with the same mode to the same address */
-    if ((self->addr != NULL) && (self->mode == mode) &&
-        ((address == 0) || (self->addr == (void *)address))) {
-    	Py_INCREF(Py_None);
-    	return Py_None;
-    }
-    /* perform the attach */
-    addr = (void *)shmat(self->shmid, (void *)address, mode);
-    if (addr  == (void *)-1)
-	   return PyShm_Err();
-    old_addr = self->addr;
-    self->addr = addr;
-    self->mode = mode;
-    /* XXX - multiple attachments of the same shared memory segment
-             to different locations of the process address space is
-	     not supported. */
-    shmdt(old_addr);
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- detach()
-*/
-
-/* Detach the memory object from the process address space */
-
-static PyObject *
-PyShmMemory_detach(PyShmObj *self, PyObject *args)
-{
-    if (!PyArg_NoArgs(args))
-	   return NULL;
-    if (self->addr != NULL) {
-        refresh_memory_status(self);
-        if (shmdt(self->addr) != 0)
-            return PyShm_Err();
-        self->addr = NULL;		/* mark as detached */
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- read(int Nbytes [,int Offset=0]) --> string
-*/
-
-/* Return a string of n bytes peeked from the shared memory segment */
-
-static PyObject *
-PyShmMemory_read(PyShmObj *self, PyObject *args)
-{
-    unsigned long n, offset = 0;
-    char buf[128];
-    char *addr;
-
-    if (!PyArg_ParseTuple(args, "l|l", &n, &offset))
-	    return NULL;
-    refresh_memory_status(self);
-    if (self->addr == NULL) {
-        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
-        return NULL;
-    }
-    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
-        sprintf(buf, "read() argument%s exceed%s upper memory limit",
-            offset ? "s" : "", offset ? "" : "s");
-        PyErr_SetString(PyShm_Error, buf);
-        return NULL;
-    }
-    addr = (char *)((unsigned long)self->addr + offset);
-    return PyString_FromStringAndSize(addr, n);
-}
-
-/*
--- setgid(int Gid)
-*/
-
-static PyObject *
-PyShmMemory_setgid(PyShmObj *self, PyObject *args)
-{
-    long newgid, oldgid;
-
-    if (!PyArg_ParseTuple(args, "l", &newgid))
-	    return NULL;
-    refresh_memory_status(self);
-    oldgid = (long)self->ds.shm_perm.gid;
-    self->ds.shm_perm.gid = (gid_t)newgid;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.gid = (gid_t)oldgid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setperm(int Perm)
-*/
-
-static PyObject *
-PyShmMemory_setperm(PyShmObj *self, PyObject *args)
-{
-    long newmode, oldmode;
-
-    if (!PyArg_ParseTuple(args, "l", &newmode))
-        return NULL;
-    refresh_memory_status(self);
-    newmode &= 0777;	/* permission bits only */
-    oldmode = (mode_t)self->ds.shm_perm.mode;
-    self->ds.shm_perm.mode ^= 0777;
-    self->ds.shm_perm.mode |= (mode_t)newmode;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.mode = (mode_t)oldmode;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setuid(int Uid)
-*/
-
-static PyObject *
-PyShmMemory_setuid(PyShmObj *self, PyObject *args)
-{
-    long newuid, olduid;
-
-    if (!PyArg_ParseTuple(args, "l", &newuid))
-        return NULL;
-    refresh_memory_status(self);
-    olduid = (long)self->ds.shm_perm.uid;
-    /* v1.1 - fixed typo that set the group id rather than the user id */
-    self->ds.shm_perm.uid = (uid_t)newuid;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.uid = (uid_t)olduid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- write(string Data [, int Offset=0])
-*/
-
-/* Write a string to the shared memory segment. */
-
-static PyObject *
-PyShmMemory_write(PyShmObj *self, PyObject *args)
-{
-    char *data;
-    unsigned long n, offset = 0;
-    char buf[128];
-    char *addr;
-
-    if (!PyArg_ParseTuple(args, "s#|l", &data, &n, &offset))
-        return NULL;
-    refresh_memory_status(self);
-    if (self->addr == NULL) {
-        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
-        return NULL;
-    }
-    if (self->mode & SHM_RDONLY) {
-        PyErr_SetString(PyShm_Error,
-                "can't write on read-only attached memory");
-        return NULL;
-    }
-    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
-        sprintf(buf, "write() argument%s exceed%s upper memory limit",
-            offset ? "s" : "", offset ? "" : "s");
-        PyErr_SetString(PyShm_Error, buf);
-        return NULL;
-    }
-    addr = (void *)((unsigned long)self->addr + offset);
-    memcpy(addr, data, n);
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of methods for shared memory objects */
-
-static PyMethodDef memory_methods[] = {
-    {"attach",	(PyCFunction)PyShmMemory_attach,	1,
-     "attach([int Addr=0 [,int How=0]]) --> None | except shm.error"},
-    {"detach",	(PyCFunction)PyShmMemory_detach,	0,
-     "detach() --> None | except shm.error"},
-    {"read",	(PyCFunction)PyShmMemory_read,		1,
-     "read(int Nbytes [,int Offset=0]) --> string | except shm.error"},
-    {"setgid",	(PyCFunction)PyShmMemory_setgid,	1,
-     "setgid(int Gid) --> None | except shm.error"},
-    {"setperm",	(PyCFunction)PyShmMemory_setperm,	1,
-     "setperm(int Perm) --> None | except shm.error"},
-    {"setuid",	(PyCFunction)PyShmMemory_setuid,	1,
-     "setuid(int Uid) --> None | except shm.error"},
-    {"write",	(PyCFunction)PyShmMemory_write,		1,
-     "write(string Data [,int Offset=0]) --> None | except shm.error"},
-    {NULL,	NULL}		/* sentinel */
-};
-
-#define OFF(x)	offsetof(PyShmMemoryObject, x)
-#define OFF1(x)	OFF(ds) + offsetof(struct shmid_ds, x)
-#define OFF2(x)	OFF1(shm_perm) + offsetof(struct ipc_perm, x)
-
-/* List of members for shared memory objects */
-
-/* Note: member types are set in the initshm function.
-   Members which need separate processing are:
-   - addr --> it is not part of the shmid_ds structure
-   - attached --> function depending on addr
-   - nattch  --> system dependent declaration in shmid_ds (unknown type)
-   - perm --> return permission (lower 9) bits only of ds.shm_perm.mode
-*/
-
-static struct memberlist memory_memberlist[] = {
-    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
-    {"cpid",	T_INT,	OFF1(shm_cpid),		RO},	/* 1  (pid_t)  */
-    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 2  (uid_t)  */
-    {"key", T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 3  (key_t)  */
-    {"lpid",	T_INT,	OFF1(shm_lpid),		RO},	/* 4  (pid_t)  */
-    {"shmid",	T_INT,	OFF(shmid),		RO},	/* 5  (int)    */
-    {"size",	T_INT,	OFF1(shm_segsz),	RO},	/* 6  (int)    */
-    {"gid",	T_INT,	OFF2(gid),		RO},	/* 7  (gid_t)  */
-    {"uid",	T_INT,	OFF2(uid),		RO},	/* 8  (uid_t)  */
-    /* The following members are implemented without this table */
-    {"addr",	T_INT,	0,			RO},	/* 9  (void *) */
-    {"attached",T_INT,	0,			RO},	/* 10  (int)    */
-    {"nattch",	T_INT,	0,			RO},	/* 11 sys.dep. */
-    {"perm",	T_INT,	0,			RO},	/* 12 (mode_t) */
-    {NULL}			/* sentinel */
-};
-
-#undef OFF
-#undef OFF1
-#undef OFF2
-
-static void
-PyShmMemory_dealloc(PyShmObj *self)
-{
-    /* del shm_dict[key], ignore if it fails */
-    if (PyDict_DelItem(shm_dict, PyInt_FromLong(self->shmid)) == -1)
-        PyErr_Clear();
-    /* all references in the current process to the shared
-       memory segment are lost, so if attached, detach it.
-       XXX: This is not true when Python is embedded.
-
-    if (self->addr != NULL) {
-	shmdt(self->addr);
-    }
-    */
-    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
-    PyObject_Del(self);
-}
-
-static PyObject *
-PyShmMemory_getattr(PyShmObj *self, char *name)
-{
-    PyObject *res;
-
-    res = Py_FindMethod(memory_methods, (PyObject *)self, name);
-    if (res != NULL)
-        return res;
-    PyErr_Clear();
-    refresh_memory_status(self);
-    if (strcmp(name, "attached") == 0)
-        return PyInt_FromLong((self->addr == NULL) ? 0 : 1);
-    if (strcmp(name, "addr") == 0) {
-        if (self->addr != NULL)
-            return PyInt_FromLong((unsigned long)self->addr);
-        else {
-            Py_INCREF(Py_None);
-            return Py_None;
-        }
-    }
-    if (strcmp(name, "nattch") == 0)
-        return PyInt_FromLong(self->ds.shm_nattch);
-    if (strcmp(name, "perm") == 0)
-        return PyInt_FromLong(self->ds.shm_perm.mode & 0777);
-    return PyMember_Get((char *)self, memory_memberlist, name);
-}
-
-static PyObject *
-PyShmMemory_repr(PyShmObj *self, char *name)
-{
-    char buf[100];
-    char buf2[20];
-
-    refresh_memory_status(self);
-    if (self->addr == NULL)
-        sprintf(buf2, "None");
-    else
-        /* v 1.1 - changed format from %lx to %p. */
-        /* v 1.1.2 - changed %u to %zu. */
-        sprintf(buf2, "0x%p", self->addr);
-    sprintf(buf, "<%s shared memory object, id=%d, size=%zu, addr=%s>",
-	    (self->addr == NULL) ? "detached" : (self->mode & SHM_RDONLY) ?
-	    "attached RO" : "attached R/W",
-	    self->shmid,
-	    self->ds.shm_segsz,
-	    buf2);
-    return PyString_FromString(buf);
-}
-
-/* Type object for shared memory objects */
-
-static PyTypeObject PyShmMemory_Type = {
-    PyObject_HEAD_INIT(&PyType_Type)
-    0,					/*ob_size*/
-    "shared memory",			/*tp_name*/
-    sizeof(PyShmObj),			/*tp_size*/
-    0,					/*tp_itemsize*/
-    /* methods */
-    (destructor)PyShmMemory_dealloc,	/*tp_dealloc*/
-    0,					/*tp_print*/
-    (getattrfunc)PyShmMemory_getattr,	/*tp_getattr*/
-    0,					/*tp_setattr*/
-    0,					/*tp_compare*/
-    (reprfunc)PyShmMemory_repr,		/*tp_repr*/
-    0,					/*tp_as_number*/
-    0,					/*tp_as_sequence*/
-    0,					/*tp_as_mapping*/
-};
-
-/************************************************************/
-/*                     Semaphore Objects                    */
-/************************************************************/
-
-/* This is to check the validity of a Python semaphore object */
-
-static int
-check_semaphore_identity(PyShmSemObj *o)
-{
-    int new_semid;
-    int old_semid = o->semid;
-    unsigned short old_nsems = o->ds.sem_nsems;
-    key_t old_key = o->ds.sem_perm.IPC_PERM_KEY_NAME;
-    semctl_arg arg;
-
-    if (old_key != IPC_PRIVATE) {
-        new_semid = semget(old_key, 0, 0);
-        if (new_semid != old_semid)
-            return 0;
-    }
-    else
-        new_semid = old_semid;
-    arg.buf = &(o->ds);
-    if ((semctl(new_semid, 0, IPC_STAT, arg) != -1) &&
-        (old_nsems == o->ds.sem_nsems) &&
-        (old_key == o->ds.sem_perm.IPC_PERM_KEY_NAME))
-        return 1;
-    return 0;
-}
-
-/* Convenience macro for updating the semaphore data status structure */
-
-#define refresh_semaphore_status(o)					\
-    if (!check_semaphore_identity(o)) {					\
-        PyErr_SetString(PyShm_Error,					\
-                "can't access semaphore");			\
-	return NULL;							\
-    }
-
-/*
--- P()
-*/
-
-static PyObject *
-PyShmSemaphore_P(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = -1;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- V()
-*/
-
-static PyObject *
-PyShmSemaphore_V(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = 1;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- Z()
-*/
-
-static PyObject *
-PyShmSemaphore_Z(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = 0;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setblocking(0|1)
-*/
-
-static PyObject *
-PyShmSemaphore_setblocking(PyShmSemObj *self, PyObject *args)
-{
-    int block;
-
-    if (!PyArg_ParseTuple(args, "i", &block))
-        return NULL;
-    refresh_semaphore_status(self);
-    if (block)
-        self->opflag &= ~IPC_NOWAIT;
-    else
-        self->opflag |= IPC_NOWAIT;
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setgid(int Gid)
-*/
-
-static PyObject *
-PyShmSemaphore_setgid(PyShmSemObj *self, PyObject *args)
-{
-    long newgid, oldgid;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newgid))
-        return NULL;
-    refresh_semaphore_status(self);
-    oldgid = (long)self->ds.sem_perm.gid;
-    self->ds.sem_perm.gid = (gid_t)newgid;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.gid = (gid_t)oldgid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setperm(int Perm)
-*/
-
-static PyObject *
-PyShmSemaphore_setperm(PyShmSemObj *self, PyObject *args)
-{
-    long newmode, oldmode;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newmode))
-        return NULL;
-    refresh_semaphore_status(self);
-    newmode &= 0777;	/* permission bits only */
-    oldmode = (mode_t)self->ds.sem_perm.mode;
-    self->ds.sem_perm.mode ^= 0777;
-    self->ds.sem_perm.mode |= (mode_t)newmode;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.mode = (mode_t)oldmode;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setuid(int Uid)
-*/
-
-static PyObject *
-PyShmSemaphore_setuid(PyShmSemObj *self, PyObject *args)
-{
-    long newuid, olduid;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newuid))
-        return NULL;
-    refresh_semaphore_status(self);
-    olduid = (long)self->ds.sem_perm.uid;
-    /* v1.1 - fixed typo that set the group id rather than the user id */
-    self->ds.sem_perm.uid = (uid_t)newuid;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.uid = (uid_t)olduid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setundo(0|1)
-*/
-
-static PyObject *
-PyShmSemaphore_setundo(PyShmSemObj *self, PyObject *args)
-{
-    int undo;
-
-    if (!PyArg_ParseTuple(args, "i", &undo))
-        return NULL;
-    refresh_semaphore_status(self);
-    if (undo)
-        self->opflag |= SEM_UNDO;
-    else
-        self->opflag &= ~SEM_UNDO;
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setval(int Value)
-*/
-
-static PyObject *
-PyShmSemaphore_setval(PyShmSemObj *self, PyObject *args)
-{
-    int value;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "i", &value))
-        return NULL;
-    refresh_semaphore_status(self);
-    arg.val = value;
-    if (semctl(self->semid, 0, SETVAL, arg) == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of methods for semaphore objects */
-
-static PyMethodDef semaphore_methods[] = {
-    {"P",		(PyCFunction)PyShmSemaphore_P,			0,
-     "P() --> None | except shm.error"},
-    {"V",		(PyCFunction)PyShmSemaphore_V,			0,
-     "V() --> None | except shm.error"},
-    {"Z",		(PyCFunction)PyShmSemaphore_Z,			0,
-     "Z() --> None | except shm.error"},
-    {"setblocking",	(PyCFunction)PyShmSemaphore_setblocking,	1,
-     "setblocking(0|1) --> None"},
-    {"setgid",		(PyCFunction)PyShmSemaphore_setgid,		1,
-     "setgid(int Gid) --> None | except shm.error"},
-    {"setperm",		(PyCFunction)PyShmSemaphore_setperm,		1,
-     "setperm(int Perm) --> None | except shm.error"},
-    {"setuid",		(PyCFunction)PyShmSemaphore_setuid,		1,
-     "setuid(int Uid) --> None | except shm.error"},
-    {"setundo",		(PyCFunction)PyShmSemaphore_setundo,		1,
-     "setundo(0|1) --> None"},
-    {"setval",		(PyCFunction)PyShmSemaphore_setval,		1,
-     "setval(int Value) --> None | except shm.error"},
-    {NULL,	NULL}		/* sentinel */
-};
-
-#define OFF(x)	offsetof(PyShmSemaphoreObject, x)
-#define OFF1(x)	OFF(ds) + offsetof(struct semid_ds, x)
-#define OFF2(x)	OFF1(sem_perm) + offsetof(struct ipc_perm, x)
-
-/* List of members for semaphore objects */
-
-/* Note: member types are set in the initshm function.
-   Members which need separate processing are:
-   - val, lpid, ncnt, zcnt --> in kernel memory, not accessible from a process
-   - perm --> return permission (lower 9) bits only of ds.sem_perm.mode
-   - blocking --> in opflags
-*/
-
-static struct memberlist semaphore_memberlist[] = {
-    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
-    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 1  (uid_t)  */
-    {"key",	    T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 2  (key_t)  */
-    {"semid",	T_INT,	OFF(semid),		RO},	/* 3  (int)    */
-    {"gid",	    T_INT,	OFF2(gid),		RO},	/* 4  (gid_t)  */
-    {"uid",	    T_INT,	OFF2(uid),		RO},	/* 5  (uid_t)  */
-    /* The following members are implemented without this table */
-    {"lpid",	T_INT,	0,			RO},	/* 6  (ushort) */
-    {"ncnt",	T_INT,	0,			RO},	/* 7  (ushort) */
-    {"perm",	T_INT,	0,			RO},	/* 8  (mode_t) */
-    {"val",	    T_INT,	0,			RO},	/* 9  (ushort) */
-    {"zcnt",	T_INT,	0,			RO},	/* 10 (ushort) */
-    {"blocking",T_INT,	0,			RO},	/* 11 (ushort) */
-    {NULL}			/* sentinel */
-};
-
-#undef OFF
-#undef OFF1
-#undef OFF2
-
-static void
-PyShmSemaphore_dealloc(PyShmSemObj *self)
-{
-    /* del sem_dict[key], ignore if it fails */
-    if (PyDict_DelItem(sem_dict, PyInt_FromLong(self->semid)) == -1)
-        PyErr_Clear();
-    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
-    PyObject_Del(self);
-}
-
-static PyObject *
-PyShmSemaphore_getattr(PyShmSemObj *self, char *name)
-{
-    PyObject *res;
-
-    res = Py_FindMethod(semaphore_methods, (PyObject *)self, name);
-    if (res != NULL)
-        return res;
-    PyErr_Clear();
-    refresh_semaphore_status(self);
-    if (strcmp(name, "val") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETVAL, 0));
-    if (strcmp(name, "lpid") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETPID, 0));
-    if (strcmp(name, "ncnt") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETNCNT, 0));
-    if (strcmp(name, "zcnt") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETZCNT, 0));
-    if (strcmp(name, "perm") == 0)
-        return PyInt_FromLong(self->ds.sem_perm.mode & 0777);
-    /* v1.1 - added blocking */
-    if (strcmp(name, "blocking") == 0)
-        return PyInt_FromLong(self->opflag & IPC_NOWAIT ? 0 : 1);
-    return PyMember_Get((char *)self, semaphore_memberlist, name);
-}
-
-static PyObject *
-PyShmSemaphore_repr(PyShmSemObj *self, char *name)
-{
-    /* v1.1 - added blocking */
-    char buf[200];
-
-    refresh_semaphore_status(self);
-    sprintf(buf, "<semaphore object, id=%d, val=%d, ncnt=%d, zcnt=%d, blocking=%d>",
-            self->semid,
-            semctl(self->semid, 0, GETVAL, 0),
-            semctl(self->semid, 0, GETNCNT, 0),
-            semctl(self->semid, 0, GETZCNT, 0),
-            self->opflag & IPC_NOWAIT ? 0 : 1);
-    return PyString_FromString(buf);
-}
-
-/* Type object for semaphore objects */
-
-static PyTypeObject PyShmSemaphore_Type = {
-    PyObject_HEAD_INIT(&PyType_Type)
-    0,					/*ob_size*/
-    "semaphore",			/*tp_name*/
-    sizeof(PyShmSemObj),		/*tp_size*/
-    0,					/*tp_itemsize*/
-    /* methods */
-    (destructor)PyShmSemaphore_dealloc,	/*tp_dealloc*/
-    0,					/*tp_print*/
-    (getattrfunc)PyShmSemaphore_getattr,/*tp_getattr*/
-    0,					/*tp_setattr*/
-    0,					/*tp_compare*/
-    (reprfunc)PyShmSemaphore_repr,	/*tp_repr*/
-    0,					/*tp_as_number*/
-    0,					/*tp_as_sequence*/
-    0,					/*tp_as_mapping*/
-};
-
-/************************************************************/
-/*                      Module Interface                    */
-/************************************************************/
-
-/*
--- ftok(string Path, int ProjId) -> int
-*/
-
-/* Compute a key by using the system's ftok algorithm */
-
-static PyObject *
-PyShm_ftok(PyObject *self, PyObject *args)
-{
-    char *path;
-    char id;
-    key_t key;
-
-    if (!PyArg_ParseTuple(args, "sb", &path, &id))
-        return NULL;
-    key = ftok(path, id);
-    return PyInt_FromLong((long)key);
-}
-
-/*
--- getshmid(int Key) --> int | except KeyError
-*/
-
-/* Return a shared memory segment id from a given key */
-
-static PyObject *
-PyShm_getshmid(PyObject *self, PyObject *args)
-{
-    long key;
-    int shmid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    shmid = shmget((key_t)key, 0, 0);
-    if (shmid == -1) {
-        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
-        return NULL;
-    }
-    return PyInt_FromLong(shmid);
-}
-
-/*
--- memory_haskey(int Key) --> int
-*/
-
-/* Check whether there is a shared memory segment with the given key */
-
-static PyObject *
-PyShm_memory_haskey(PyObject *self, PyObject *args)
-{
-    long key;
-    int shmid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    shmid = shmget((key_t)key, 0, 0);
-    return PyInt_FromLong((shmid == -1) ? 0 : 1);
-}
-
-/*
--- memory(int Shmid) --> object | except shm.error
-*/
-
-/* Get an existing shared memory segment and return it as a python object. */
-
-static PyObject *
-PyShm_memory(PyObject *self, PyObject *args)
-{
-    int shmid;
-    PyShmObj *o;
-    PyObject *keyo;
-
-    if (!PyArg_ParseTuple(args, "i", &shmid))
-        return NULL;
-    keyo = PyInt_FromLong(shmid);
-    /* get the object from the dictionary */
-    if (PyMapping_HasKey(shm_dict, keyo)) {
-        o = (PyShmObj *)PyDict_GetItem(shm_dict, keyo);
-        Py_INCREF(o);
-    }
-    else {
-        /* not found, create it */
-        if ((o = PyObject_NEW(PyShmObj, &PyShmMemory_Type)) == NULL)
-            return NULL;
-        o->shmid = shmid;
-        o->addr = NULL;
-        o->mode = 0;
-        /* shm_dict[shmid] = o */
-        if (PyDict_SetItem(shm_dict, keyo, (PyObject *)o) == -1) {
-            Py_DECREF(o);
-            PyErr_SetString(PyShm_Error, "can't initialize shared memory object");
-            return NULL;
-        }
-        Py_DECREF(o);	/* the owned reference in shm_dict doesn't count! */
-    }
-    /* v1.1 - plugged memory leak */
-    Py_DECREF(keyo);
-    /* set up the status data */
-    if (shmctl(o->shmid, IPC_STAT, &(o->ds)) == -1) {
-        Py_DECREF(o);
-        PyErr_SetString(PyShm_Error, "can't access shared memory segment");
-        return NULL;
-    }
-    return (PyObject *)o;
-}
-
-/*
--- create_memory(int Key, int Size [,int Perm=0666]) --> object
-*/
-
-/* Create a new shared memory segment. */
-
-static PyObject *
-PyShm_create_memory(PyObject *self, PyObject *args)
-{
-    long key;
-    int size, shmid;
-    int perm = 0666;	/* Default permission is -rw-rw-rw- */
-    PyObject *py_shmid;
-    PyObject *memory;
-
-    if (!PyArg_ParseTuple(args, "li|i", &key, &size, &perm))
-        return NULL;
-    shmid = shmget((key_t)key, size, perm | IPC_CREAT | IPC_EXCL);
-    if (shmid == -1)
-        return PyShm_Err();
-    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
-    py_shmid = Py_BuildValue("(i)", shmid);
-    memory = PyShm_memory(self, py_shmid);
-    Py_DECREF(py_shmid);
-
-    return memory;
-}
-
-/*
--- remove_memory(int Shmid) --> None | except shm.error
-*/
-
-/* Remove an existing shared memory segment. */
-
-static PyObject *
-PyShm_remove_memory(PyObject *self, PyObject *args)
-{
-    int shmid, res;
-
-    if (!PyArg_ParseTuple(args, "i", &shmid))
-        return NULL;
-    res = shmctl(shmid, IPC_RMID, 0);	/* remove it */
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- getsemid(int Key) --> int | except KeyError
-*/
-
-/* Return a semaphore id from a given key */
-
-static PyObject *
-PyShm_getsemid(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    semid = semget((key_t)key, 0, 0);
-    if (semid == -1) {
-        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
-        return NULL;
-    }
-    return PyInt_FromLong(semid);
-}
-
-/*
--- semaphore_haskey(int Key) --> int
-*/
-
-/* Check whether there is a semaphore with the given key */
-
-static PyObject *
-PyShm_semaphore_haskey(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    semid = semget((key_t)key, 0, 0);
-    return PyInt_FromLong((semid == -1) ? 0 : 1);
-}
-
-/*
--- semaphore(int Semid) --> object
-*/
-
-/* Get an existing semaphore and return it as a python object. */
-
-static PyObject *
-PyShm_semaphore(PyObject *self, PyObject *args)
-{
-    int semid;
-    PyShmSemObj *o;
-    PyObject *keyo;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "i", &semid))
-        return NULL;
-    keyo = PyInt_FromLong(semid);
-    /* get the object from the dictionary */
-    if (PyMapping_HasKey(sem_dict, keyo)) {
-        o = (PyShmSemObj *)PyDict_GetItem(sem_dict, keyo);
-        Py_INCREF(o);
-    }
-    else {
-        /* not found, create it */
-        if ((o = PyObject_NEW(PyShmSemObj, &PyShmSemaphore_Type)) == NULL)
-            return NULL;
-        o->semid = semid;
-        o->opflag = 0;
-        /* sem_dict[semid] = o */
-        if (PyDict_SetItem(sem_dict, keyo, (PyObject *)o) == -1) {
-            Py_DECREF(o);
-            PyErr_SetString(PyShm_Error, "can't initialize semaphore object");
-            return NULL;
-        }
-        Py_DECREF(o);	/* the owned reference in sem_dict doesn't count! */
-    }
-    /* v1.1 - plugged memory leak */
-    Py_DECREF(keyo);
-    /* set up the status data */
-    arg.buf = &(o->ds);
-    if (semctl(o->semid, 0, IPC_STAT, arg) == -1) {
-        Py_DECREF(o);
-        PyErr_SetString(PyShm_Error, "can't access semaphore");
-        return NULL;
-    }
-    return (PyObject *)o;
-}
-
-/*
--- create_semaphore(int Key, [,int Value=1 [,int Perm=0666]]) --> object
-*/
-
-/* Create a new semaphore. */
-
-static PyObject *
-PyShm_create_semaphore(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-    int value = 1;
-    int perm = 0666;	/* Default permission is -rw-rw-rw- */
-    semctl_arg arg;
-    PyObject *py_shmid;
-    PyObject *semaphore;
-
-    if (!PyArg_ParseTuple(args, "l|ii", &key, &value, &perm))
-        return NULL;
-    semid = semget((key_t)key, 1, perm | IPC_CREAT | IPC_EXCL);
-    arg.val = value;
-    if (!((semid != -1) && (semctl(semid, 0, SETVAL, arg) != -1)))
-	   return PyShm_Err();
-    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
-    py_shmid = Py_BuildValue("(i)", semid);
-    semaphore = PyShm_semaphore(self, py_shmid);
-    Py_DECREF(py_shmid);
-
-    return semaphore;
-}
-
-/*
--- remove_semaphore(int Semid) --> None | except shm.error
-*/
-
-/* Remove an existing semaphore. */
-
-static PyObject *
-PyShm_remove_semaphore(PyObject *self, PyObject *args)
-{
-    int semid, res;
-
-    if (!PyArg_ParseTuple(args, "i", &semid))
-        return NULL;
-    res = semctl(semid, 0, IPC_RMID, 0);	/* remove it */
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of functions exported by this module. */
-
-static PyMethodDef PyShm_methods[] = {
-    {"create_memory",		PyShm_create_memory,	1,
-     "create_memory(int Key, int Size [,int Perm=0666]) --> object | except shm.error"},
-    {"create_semaphore",	PyShm_create_semaphore,	1,
-     "create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object | except shm.error"},
-    {"ftok",			PyShm_ftok,		1,
-     "ftok(string Path, int ProjId) --> int | except shm.error"},
-    {"getsemid",		PyShm_getsemid,		1,
-     "getsemid(int Key) --> int | except KeyError"},
-    {"getshmid",		PyShm_getshmid,		1,
-     "getshmid(int Key) --> int | except KeyError"},
-    {"memory_haskey",		PyShm_memory_haskey,	1,
-     "memory_haskey(int Key) --> int"},
-    {"memory",			PyShm_memory,		1,
-     "memory(int Shmid) --> object | except shm.error"},
-    {"semaphore",		PyShm_semaphore,	1,
-     "semaphore(int Semid) --> object | except shm.error"},
-    {"semaphore_haskey",	PyShm_semaphore_haskey,	1,
-     "semaphore_haskey(int Key) --> int"},
-    {"remove_memory",		PyShm_remove_memory,	1,
-     "remove_memory(int Shmid) --> None | except shm.error"},
-    {"remove_semaphore",	PyShm_remove_semaphore,	1,
-     "remove_semaphore(int Semid) --> None | except shm.error"},
-    {NULL,			NULL}		/* Sentinel */
-};
-
-
-/* Initialize this module */
-
-/* This is for inserting constants in the module's dictionary */
-
-static void
-insint(PyObject *d, char *name, int value)
-{
-	PyObject *v = PyInt_FromLong((long) value);
-	if (!v || PyDict_SetItemString(d, name, v))
-		Py_FatalError("can't initialize shm module");
-
-	Py_DECREF(v);
-}
-
-/* This is to set up the type of shared memory/semaphore object members */
-
-static void
-set_member_type(struct memberlist *sxm_memberlist,
-                int index,                          /* index in memberlist */
-                int typesize                        /* sizeof(member_type) */
-               )
-{
-    int t;
-
-    if (typesize == sizeof(char))
-        t = T_UBYTE;
-    else if (typesize == sizeof(short))
-        t = T_USHORT;
-    else if (typesize == sizeof(int))
-        t = T_UINT;
-    else if (typesize == sizeof(long))
-        t = T_ULONG;
-    else
-        Py_FatalError("can't initialize shm module");
-    sxm_memberlist[index].type = t;
-};
-
-void
-initshm(void)
-{
-    PyObject *m, *d;
-
-    m = Py_InitModule("shm", PyShm_methods);
-    d = PyModule_GetDict(m);
-    PyShm_Error = PyString_FromString("shm.error");
-    if (PyShm_Error == NULL ||
-	PyDict_SetItemString(d, "error", PyShm_Error) != 0)
-	    Py_FatalError("can't define shm.error");
-    if (PyDict_SetItemString(d, "__doc__", PyString_FromString
-			     ("Interface to System V shared memory IPC")) != 0)
-        Py_FatalError("can't define shm.__doc__");
-    if ((shm_dict = PyDict_New()) == NULL || (sem_dict = PyDict_New()) == NULL)
-	   Py_FatalError("can't initialize shm module");
-
-    /* initialize the machine dependent types in memory_memberlist */
-    set_member_type(memory_memberlist, 0, sizeof(gid_t));	/* cgid   */
-    set_member_type(memory_memberlist, 1, sizeof(pid_t));	/* cpid   */
-    set_member_type(memory_memberlist, 2, sizeof(uid_t));	/* cuid   */
-    set_member_type(memory_memberlist, 3, sizeof(key_t));	/* key    */
-    set_member_type(memory_memberlist, 4, sizeof(pid_t));	/* lpid   */
-    set_member_type(memory_memberlist, 5, sizeof(int));		/* shmid  */
-    set_member_type(memory_memberlist, 6, sizeof(int));		/* size   */
-    set_member_type(memory_memberlist, 7, sizeof(gid_t));	/* gid    */
-    set_member_type(memory_memberlist, 8, sizeof(uid_t));	/* uid    */
-
-    /* initialize the machine dependent types in semaphore_memberlist */
-    set_member_type(semaphore_memberlist, 0, sizeof(gid_t));	/* cgid   */
-    set_member_type(semaphore_memberlist, 1, sizeof(uid_t));	/* cuid   */
-    set_member_type(semaphore_memberlist, 2, sizeof(key_t));	/* key    */
-    set_member_type(semaphore_memberlist, 3, sizeof(int));	/* semid  */
-    set_member_type(semaphore_memberlist, 4, sizeof(gid_t));	/* gid    */
-    set_member_type(semaphore_memberlist, 5, sizeof(uid_t));	/* uid    */
-
-    /* relevant constants for this module; the others are useless here */
-    insint(d, "IPC_PRIVATE", IPC_PRIVATE);
-    insint(d, "SHM_RDONLY", SHM_RDONLY);
-    insint(d, "SHM_RND", SHM_RND);
-#ifdef SHMLBA
-    insint(d, "SHMLBA", SHMLBA);
-#endif
-#ifdef SEM_A
-    insint(d, "SEM_A", SEM_A);
-#endif
-#ifdef SEM_R
-    insint(d, "SEM_R", SEM_R);
-#endif
-#ifdef SHM_R
-    insint(d, "SHM_R", SHM_R);
-#endif
-#ifdef SHM_W
-    insint(d, "SHM_W", SHM_W);
-#endif
-}

==== BEGIN SVK PATCH BLOCK ====
Version: svk 1.08 (linux)

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
==== END SVK PATCH BLOCK ====
