==== Patch <0.8.9.3> level 1
Source: 0d5daa73-5169-4a83-8e4c-b6d9a920c5be:/trunk:682
Target: 0d5daa73-5169-4a83-8e4c-b6d9a920c5be:/0.8.9:636
Log:
Patch.
=== i18n/de.po
==================================================================
--- i18n/de.po	(revision 636)
+++ i18n/de.po	(patch 0.8.9.3 level 1)
@@ -2,7 +2,7 @@
 msgstr ""
 "Project-Id-Version: Portato\n"
 "POT-Creation-Date: \n"
-"PO-Revision-Date: 2008-01-14 23:09+0100\n"
+"PO-Revision-Date: 2008-01-18 02:40+0100\n"
 "Last-Translator: René 'Necoro' Neumann <necoro@necoro.net>\n"
 "Language-Team: \n"
 "MIME-Version: 1.0\n"
@@ -25,7 +25,7 @@
 msgstr "Aktua_lisiere Portage-Cache"
 
 #: portato/gui/templates/portato.glade:68
-#: portato/gui/templates/portato.glade:1840
+#: portato/gui/templates/portato.glade:1962
 msgid "gtk-quit"
 msgstr ""
 
@@ -34,275 +34,268 @@
 msgstr "_Emerge"
 
 #: portato/gui/templates/portato.glade:89
-#: portato/gui/templates/portato.glade:945
-msgid "E_merge"
-msgstr "E_merge"
+#: portato/gui/templates/portato.glade:497
+msgid "_Install"
+msgstr "_Installieren"
 
-#: portato/gui/templates/portato.glade:104
-#: portato/gui/templates/portato.glade:979
-msgid "_Unmerge"
-msgstr "_Unmerge"
+#: portato/gui/templates/portato.glade:105
+#: portato/gui/templates/portato.glade:508
+msgid "_Uninstall"
+msgstr "_Deinstallieren"
 
-#: portato/gui/templates/portato.glade:118
-#: portato/gui/templates/portato.glade:998
+#: portato/gui/templates/portato.glade:121
+#: portato/gui/templates/portato.glade:951
 msgid "Update _World"
 msgstr "Update _World"
 
-#: portato/gui/templates/portato.glade:127
+#: portato/gui/templates/portato.glade:130
 msgid "Show Updatable P_ackages"
 msgstr "Zeige Pakete mit _Updates"
 
-#: portato/gui/templates/portato.glade:136
-msgid "Show Only _Installed Packages"
-msgstr "Zeige nur _installierte Pakete"
+#: portato/gui/templates/portato.glade:139
+msgid "Show _Only Installed Packages"
+msgstr "_Zeige nur installierte Pakete"
 
-#: portato/gui/templates/portato.glade:150
+#: portato/gui/templates/portato.glade:153
 msgid "_Sync"
 msgstr "_Sync"
 
-#: portato/gui/templates/portato.glade:166
+#: portato/gui/templates/portato.glade:169
 msgid "Save _Flags"
 msgstr "Speichere _Flags"
 
-#: portato/gui/templates/portato.glade:187
-#: portato/gui/templates/portato.glade:279
-#: portato/gui/templates/portato.glade:1815
+#: portato/gui/templates/portato.glade:190
+#: portato/gui/templates/portato.glade:282
+#: portato/gui/templates/portato.glade:1937
 msgid "Emerge _Paused"
 msgstr "Emerge _angehalten"
 
-#: portato/gui/templates/portato.glade:195
-#: portato/gui/templates/portato.glade:261
-#: portato/gui/templates/portato.glade:1822
+#: portato/gui/templates/portato.glade:198
+#: portato/gui/templates/portato.glade:264
+#: portato/gui/templates/portato.glade:1944
 msgid "_Kill Emerge"
 msgstr "_Kill Emerge"
 
-#: portato/gui/templates/portato.glade:218
-#: portato/gui/gtk/windows.py:1022
+#: portato/gui/templates/portato.glade:221
+#: portato/gui/gtk/windows.py:1064
 msgid "Queue"
 msgstr "Queue"
 
-#: portato/gui/templates/portato.glade:225
+#: portato/gui/templates/portato.glade:228
 msgid "Oneshot"
 msgstr "Oneshot"
 
-#: portato/gui/templates/portato.glade:237
-#: portato/gui/gtk/windows.py:1182
+#: portato/gui/templates/portato.glade:240
+#: portato/gui/gtk/windows.py:1231
 msgid "Console"
 msgstr "Konsole"
 
-#: portato/gui/templates/portato.glade:244
+#: portato/gui/templates/portato.glade:247
 msgid "_Copy"
 msgstr "_Kopieren"
 
-#: portato/gui/templates/portato.glade:290
+#: portato/gui/templates/portato.glade:293
 msgid "Plu_gins"
 msgstr "Plu_gins"
 
-#: portato/gui/templates/portato.glade:302
+#: portato/gui/templates/portato.glade:305
 msgid "_?"
 msgstr "_?"
 
-#: portato/gui/templates/portato.glade:310
+#: portato/gui/templates/portato.glade:313
 msgid "_About"
 msgstr "_Über"
 
-#: portato/gui/templates/portato.glade:328
+#: portato/gui/templates/portato.glade:331
 msgid "_Plugins"
 msgstr "_Plugins"
 
-#: portato/gui/templates/portato.glade:365
+#: portato/gui/templates/portato.glade:368
 msgid "gtk-find"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:464
-msgid "Add to Emerge Queue"
-msgstr "Füge zur Emerge Queue hinzu"
+#: portato/gui/templates/portato.glade:472
+#: portato/gui/templates/portato.glade:652
+#: portato/gui/templates/portato.glade:668
+msgid "label"
+msgstr ""
 
-#: portato/gui/templates/portato.glade:476
-msgid "Remove from Emerge Queue"
-msgstr "Entferne aus der Emerge Queue"
+#: portato/gui/templates/portato.glade:496
+msgid "Install onto system"
+msgstr "Füge zum System hinzu"
 
-#: portato/gui/templates/portato.glade:488
+#: portato/gui/templates/portato.glade:507
+msgid "Uninstall from system"
+msgstr "Lösche vom System"
+
+#: portato/gui/templates/portato.glade:518
 msgid "Revert changes"
 msgstr "Rückgängig"
 
-#: portato/gui/templates/portato.glade:510
-#: portato/gui/templates/portato.glade:633
-#: portato/gui/templates/portato.glade:648
-msgid "label"
-msgstr ""
+#: portato/gui/templates/portato.glade:519
+msgid "Re_vert"
+msgstr "Rü_ckgängig"
 
-#: portato/gui/templates/portato.glade:555
-msgid "<b>Installed, but not in portage anymore</b>"
-msgstr "<b>Installiert, aber nicht mehr im Portage-Tree vorhanden</b>"
+#: portato/gui/templates/portato.glade:565
+#: portato/gui/gtk/windows.py:755
+#: portato/gui/gtk/windows.py:758
+#: portato/gui/gtk/windows.py:825
+#: portato/gui/gtk/windows.py:829
+msgid "Testing"
+msgstr "Testing"
 
-#: portato/gui/templates/portato.glade:570
-msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
-msgstr "<span foreground='red'><b>FEHLENDES KEYWORD</b></span>"
+#: portato/gui/templates/portato.glade:598
+#: portato/gui/gtk/windows.py:738
+#: portato/gui/gtk/windows.py:741
+#: portato/gui/gtk/windows.py:744
+#: portato/gui/gtk/windows.py:852
+#: portato/gui/gtk/windows.py:856
+#: portato/gui/gtk/windows.py:863
+#: portato/gui/gtk/windows.py:867
+msgid "Masked"
+msgstr "Masked"
 
-#: portato/gui/templates/portato.glade:602
-msgid "<b>Description:</b>"
-msgstr "<b>Beschreibung</b>"
-
 #: portato/gui/templates/portato.glade:617
-msgid "<b>Overlay:</b>"
-msgstr "<b>Overlay:</b>"
+#: portato/gui/gtk/windows.py:610
+msgid "Installed"
+msgstr "Installiert"
 
-#: portato/gui/templates/portato.glade:665
+#: portato/gui/templates/portato.glade:635
 msgid "<b>Homepage:</b>"
 msgstr "<b>Homepage:</b>"
 
-#: portato/gui/templates/portato.glade:682
-#: portato/gui/gtk/windows.py:575
-msgid "Installed"
-msgstr "Installiert"
+#: portato/gui/templates/portato.glade:683
+msgid "<b>Overlay:</b>"
+msgstr "<b>Overlay:</b>"
 
-#: portato/gui/templates/portato.glade:701
-#: portato/gui/gtk/windows.py:703
-#: portato/gui/gtk/windows.py:706
-#: portato/gui/gtk/windows.py:709
-#: portato/gui/gtk/windows.py:811
-#: portato/gui/gtk/windows.py:815
-#: portato/gui/gtk/windows.py:822
-#: portato/gui/gtk/windows.py:826
-msgid "Masked"
-msgstr "Masked"
+#: portato/gui/templates/portato.glade:699
+msgid "<b>Description:</b>"
+msgstr "<b>Beschreibung</b>"
 
-#: portato/gui/templates/portato.glade:734
-#: portato/gui/gtk/windows.py:720
-#: portato/gui/gtk/windows.py:723
-#: portato/gui/gtk/windows.py:784
-#: portato/gui/gtk/windows.py:788
-msgid "Testing"
-msgstr "Testing"
+#: portato/gui/templates/portato.glade:730
+msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
+msgstr "<span foreground='red'><b>FEHLENDES KEYWORD</b></span>"
 
-#: portato/gui/templates/portato.glade:754
+#: portato/gui/templates/portato.glade:745
+msgid "<b>Installed, but not in portage anymore</b>"
+msgstr "<b>Installiert, aber nicht mehr im Portage-Tree vorhanden</b>"
+
+#: portato/gui/templates/portato.glade:762
 msgid "_General"
 msgstr "All_gemein"
 
-#: portato/gui/templates/portato.glade:786
+#: portato/gui/templates/portato.glade:794
 msgid "U_se List"
 msgstr "U_se-Flag-Liste"
 
-#: portato/gui/templates/portato.glade:814
+#: portato/gui/templates/portato.glade:822
 msgid "E_build"
 msgstr "E_build"
 
-#: portato/gui/templates/portato.glade:842
+#: portato/gui/templates/portato.glade:850
 msgid "C_hangelog"
 msgstr "C_hangelog"
 
-#: portato/gui/templates/portato.glade:870
-msgid "F_iles"
-msgstr "Date_ien"
+#: portato/gui/templates/portato.glade:878
+msgid "Fi_les"
+msgstr "_Dateien"
 
-#: portato/gui/templates/portato.glade:926
-msgid "Install all packages in the \"Emerge Queue\""
-msgstr "Installiere alle Pakete aus der \"Emerge Queue\""
+#: portato/gui/templates/portato.glade:916
+msgid "Execute the current selected queue"
+msgstr "Führe die aktuell gewählte Queue aus"
 
-#: portato/gui/templates/portato.glade:960
-msgid "Deinstall all packages in the \"Unmerge Queue\""
-msgstr "Deinstalliere alle Pakete aus der \"Unmerge Queue\""
+#: portato/gui/templates/portato.glade:935
+msgid "E_xecute"
+msgstr "_Ausführen"
 
-#: portato/gui/templates/portato.glade:997
+#: portato/gui/templates/portato.glade:950
 msgid "Calculate the packages which will be installed during an \"update world\""
 msgstr "Berechnet die Pakete, welche während eines \"update world\" installiert werden würden"
 
-#: portato/gui/templates/portato.glade:1010
+#: portato/gui/templates/portato.glade:963
 msgid "Remove the selected package from the queue"
 msgstr "Löscht das gewählte Paket aus der Queue"
 
-#: portato/gui/templates/portato.glade:1011
+#: portato/gui/templates/portato.glade:964
 msgid "_Remove"
 msgstr "_Löschen"
 
-#: portato/gui/templates/portato.glade:1033
+#: portato/gui/templates/portato.glade:1007
 msgid "_Queue"
 msgstr "_Queue"
 
-#: portato/gui/templates/portato.glade:1059
+#: portato/gui/templates/portato.glade:1033
 msgid "_Console"
 msgstr "_Konsole"
 
-#: portato/gui/templates/portato.glade:1094
+#: portato/gui/templates/portato.glade:1068
 msgid "L_og"
 msgstr "L_og"
 
-#: portato/gui/templates/portato.glade:1129
+#: portato/gui/templates/portato.glade:1103
 msgid "Portato - A Portage GUI"
 msgstr "Portato - A Portage GUI"
 
-#: portato/gui/templates/portato.glade:1146
+#: portato/gui/templates/portato.glade:1120
 msgid "Search Results"
 msgstr "Ergebnisse"
 
-#: portato/gui/templates/portato.glade:1186
-#: portato/gui/templates/portato.glade:1781
-#: portato/gui/templates/portato.glade:1889
+#: portato/gui/templates/portato.glade:1160
+#: portato/gui/templates/portato.glade:1903
+#: portato/gui/templates/portato.glade:2011
 msgid "gtk-cancel"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1198
+#: portato/gui/templates/portato.glade:1172
 msgid "gtk-jump-to"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1213
+#: portato/gui/templates/portato.glade:1187
 msgid "gtk-ok"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1234
+#: portato/gui/templates/portato.glade:1208
 msgid "Preferences"
 msgstr "Einstellungen"
 
-#: portato/gui/templates/portato.glade:1269
+#: portato/gui/templates/portato.glade:1243
 msgid "Debug"
 msgstr "Debug"
 
-#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1256
 msgid "Browser command: "
 msgstr "Browser-Befehl: "
 
-#: portato/gui/templates/portato.glade:1308
+#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1709
 msgid "<b>General Options</b>"
 msgstr "<b>Allgemeine Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1358
+#: portato/gui/templates/portato.glade:1332
 msgid "<b>Update World Options</b>"
 msgstr "<b>Optionen für \"update world\"</b>"
 
-#: portato/gui/templates/portato.glade:1386
+#: portato/gui/templates/portato.glade:1360
 msgid "Sync command: "
 msgstr "Sync-Befehl: "
 
-#: portato/gui/templates/portato.glade:1407
+#: portato/gui/templates/portato.glade:1381
 msgid "<b>Sync Options</b>"
 msgstr "<b>Sync Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1458
-msgid "File name to use, if package.use is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.use ein Verzeichnis ist:"
+#: portato/gui/templates/portato.glade:1422
+msgid "<u><i>Masking Keywords</i></u>"
+msgstr "<u><i>Masking Keywords</i></u>"
 
-#: portato/gui/templates/portato.glade:1469
-msgid "Add only exact version to package.use"
-msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+#: portato/gui/templates/portato.glade:1437
+msgid "<u><i>Testing Keywords</i></u>"
+msgstr "<u><i>Testing Keywords</i></u>"
 
-#: portato/gui/templates/portato.glade:1482
-msgid "Add only exact version to package.keywords"
-msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+#: portato/gui/templates/portato.glade:1452
+msgid "<u><i>Use-Flags</i></u>"
+msgstr "<u><i>Use-Flags</i></u>"
 
-#: portato/gui/templates/portato.glade:1496
-msgid "File name to use, if package.keywords is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.keywords ein Verzeichnis ist:"
-
-#: portato/gui/templates/portato.glade:1530
-msgid "File name to use, if package.mask/package.unmask is a directory: "
-msgstr "Zu benutzender Dateiname, wenn package.mask/package.unmask ein Verzeichnis ist:"
-
-#: portato/gui/templates/portato.glade:1541
-msgid "Add only exact version to package.mask/package.unmask"
-msgstr "Füge nur die exakte Paketversion zu package.mask/package.unmask hinzu"
-
-#: portato/gui/templates/portato.glade:1563
+#: portato/gui/templates/portato.glade:1474
 msgid ""
 "<u>You may use the following placeholders:</u>\n"
 "\n"
@@ -316,64 +309,92 @@
 "<i>$(pkg)</i>: Paketname\n"
 "<i>$(cat-1)/$(cat-2)</i>: erster/zweiter Teil der Kategorie"
 
-#: portato/gui/templates/portato.glade:1589
-msgid "<u><i>Use-Flags</i></u>"
-msgstr "<u><i>Use-Flags</i></u>"
+#: portato/gui/templates/portato.glade:1498
+msgid "Add only exact version to package.mask/package.unmask"
+msgstr "Füge nur die exakte Paketversion zu package.mask/package.unmask hinzu"
 
-#: portato/gui/templates/portato.glade:1604
-msgid "<u><i>Testing Keywords</i></u>"
-msgstr "<u><i>Testing Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1512
+msgid "File name to use, if package.mask/package.unmask is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.mask/package.unmask ein Verzeichnis ist:"
 
-#: portato/gui/templates/portato.glade:1619
-msgid "<u><i>Masking Keywords</i></u>"
-msgstr "<u><i>Masking Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1546
+msgid "File name to use, if package.keywords is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.keywords ein Verzeichnis ist:"
 
-#: portato/gui/templates/portato.glade:1636
+#: portato/gui/templates/portato.glade:1557
+msgid "Add only exact version to package.keywords"
+msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+
+#: portato/gui/templates/portato.glade:1570
+msgid "Add only exact version to package.use"
+msgstr "Füge nur die exakte Paketversion zu package.keywords hinzu"
+
+#: portato/gui/templates/portato.glade:1584
+msgid "File name to use, if package.use is a directory: "
+msgstr "Zu benutzender Dateiname, wenn package.use ein Verzeichnis ist:"
+
+#: portato/gui/templates/portato.glade:1610
 msgid "<b>Use Flag and Keyword Options</b>"
 msgstr "<b>Use-Flag- und Keyword-Optionen</b>"
 
-#: portato/gui/templates/portato.glade:1654
+#: portato/gui/templates/portato.glade:1628
 msgid "General"
 msgstr "Allgemein"
 
-#: portato/gui/templates/portato.glade:1677
+#: portato/gui/templates/portato.glade:1665
+msgid "Enable systray"
+msgstr "Aktiviere Systray"
+
+#: portato/gui/templates/portato.glade:1678
 msgid "Show emerge progress in title - similar to the console tab"
 msgstr "Zeige den Emerge Prozess im Fenstertitel (wie im Konsolen-Tab)"
 
-#: portato/gui/templates/portato.glade:1693
-msgid "Enable systray"
-msgstr "Aktiviere Systray"
-
-#: portato/gui/templates/portato.glade:1707
+#: portato/gui/templates/portato.glade:1692
 msgid "Hide on minimization (only if systray is enabled)"
 msgstr "Minimiere zu Systray"
 
-#: portato/gui/templates/portato.glade:1726
+#: portato/gui/templates/portato.glade:1743
 msgid "Console Font"
 msgstr "Schriftart in Konsole"
 
-#: portato/gui/templates/portato.glade:1736
+#: portato/gui/templates/portato.glade:1753
 msgid "Chose a console font"
 msgstr "Wähle eine Schriftart"
 
-#: portato/gui/templates/portato.glade:1763
+#: portato/gui/templates/portato.glade:1770
+msgid "<b>Console Options</b>"
+msgstr "<b>Konsolen Optionen</b>"
+
+#: portato/gui/templates/portato.glade:1810
+msgid "Package Tabs"
+msgstr "Pakettabs"
+
+#: portato/gui/templates/portato.glade:1835
+msgid "System Tabs"
+msgstr "Systemtabs"
+
+#: portato/gui/templates/portato.glade:1861
+msgid "<b>Tab Options</b>"
+msgstr "<b>Tab Optionen</b>"
+
+#: portato/gui/templates/portato.glade:1885
 msgid "Visual"
 msgstr "Oberfläche"
 
-#: portato/gui/templates/portato.glade:1790
-#: portato/gui/templates/portato.glade:1901
+#: portato/gui/templates/portato.glade:1912
+#: portato/gui/templates/portato.glade:2023
 msgid "gtk-apply"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1850
+#: portato/gui/templates/portato.glade:1972
 msgid "Plugins"
 msgstr "Plugins"
 
-#: portato/gui/templates/portato.glade:1922
+#: portato/gui/templates/portato.glade:2044
 msgid "About Portato"
 msgstr "Portato"
 
-#: portato/gui/templates/portato.glade:1931
+#: portato/gui/templates/portato.glade:2053
 msgid ""
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
@@ -381,23 +402,23 @@
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
 
-#: portato/gui/templates/portato.glade:1933
+#: portato/gui/templates/portato.glade:2055
 msgid "A Portage GUI"
 msgstr "A Portage GUI"
 
-#: portato/gui/templates/portato.glade:2023
+#: portato/gui/templates/portato.glade:2145
 msgid "Updateble Packages"
 msgstr "Pakete mit Updates"
 
-#: portato/gui/templates/portato.glade:2065
+#: portato/gui/templates/portato.glade:2187
 msgid "_Close"
 msgstr "_Schließen"
 
-#: portato/gui/templates/portato.glade:2077
+#: portato/gui/templates/portato.glade:2199
 msgid "Select _All"
 msgstr "_Alles auswählen"
 
-#: portato/gui/templates/portato.glade:2092
+#: portato/gui/templates/portato.glade:2214
 msgid "_Install Selected"
 msgstr "_Installiere ausgewählte"
 
@@ -481,7 +502,7 @@
 
 #: portato/gui/gtk/windows.py:61
 #: portato/gui/gtk/windows.py:149
-#: portato/gui/gtk/windows.py:574
+#: portato/gui/gtk/windows.py:609
 msgid "Enabled"
 msgstr "Aktiviert"
 
@@ -509,138 +530,151 @@
 msgid "Results"
 msgstr "Ergebnisse"
 
-#: portato/gui/gtk/windows.py:496
+#: portato/gui/gtk/windows.py:372
+msgid "Top"
+msgstr "Oben"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Bottom"
+msgstr "Unten"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Left"
+msgstr "Links"
+
+#: portato/gui/gtk/windows.py:372
+msgid "Right"
+msgstr "Rechts"
+
+#: portato/gui/gtk/windows.py:531
 msgid "<no description>"
 msgstr "<keine Beschreibung>"
 
-#: portato/gui/gtk/windows.py:519
+#: portato/gui/gtk/windows.py:554
 msgid "The first homepage part does not start with 'http' or 'ftp'."
 msgstr "Der erste Teil der Homepage startet nicht mit 'http' oder 'ftp'."
 
-#: portato/gui/gtk/windows.py:523
+#: portato/gui/gtk/windows.py:558
 msgid "Blank inside homepage."
 msgstr "Leerzeichen innerhalb der Homepage-URL."
 
-#: portato/gui/gtk/windows.py:552
+#: portato/gui/gtk/windows.py:587
 msgid "This is an expanded use flag and cannot be selected"
 msgstr "Dies ist ein \"Expanded Use Flag\" und kann daher nicht ausgewählt werden."
 
-#: portato/gui/gtk/windows.py:576
+#: portato/gui/gtk/windows.py:611
 msgid "Flag"
 msgstr "Flag"
 
-#: portato/gui/gtk/windows.py:577
+#: portato/gui/gtk/windows.py:612
 msgid "Description"
 msgstr "Beschreibung"
 
-#: portato/gui/gtk/windows.py:655
+#: portato/gui/gtk/windows.py:690
 #, python-format
 msgid "Package could not be found: %s"
 msgstr "Paket konnte nicht gefunden werden: %s"
 
-#: portato/gui/gtk/windows.py:712
-#: portato/gui/gtk/windows.py:813
+#: portato/gui/gtk/windows.py:747
+#: portato/gui/gtk/windows.py:854
 msgid "Masked by user"
 msgstr "Vom Benutzer maskiert"
 
-#: portato/gui/gtk/windows.py:888
+#: portato/gui/gtk/windows.py:929
 msgid "Loading Config"
 msgstr "Lade Konfiguration"
 
-#: portato/gui/gtk/windows.py:900
+#: portato/gui/gtk/windows.py:941
 msgid "Creating Database"
 msgstr "Erstelle Datenbank"
 
-#: portato/gui/gtk/windows.py:905
+#: portato/gui/gtk/windows.py:946
 msgid "Loading Plugins"
 msgstr "Lade Plugins"
 
-#: portato/gui/gtk/windows.py:918
+#: portato/gui/gtk/windows.py:959
 msgid "Building frontend"
 msgstr "Erstelle Oberfläche"
 
-#: portato/gui/gtk/windows.py:970
+#: portato/gui/gtk/windows.py:1011
 msgid "Restoring Session"
 msgstr "Lade Session"
 
-#: portato/gui/gtk/windows.py:973
+#: portato/gui/gtk/windows.py:1014
 msgid "Finishing startup"
 msgstr "Erledige letzte Handgriffe :)"
 
-#: portato/gui/gtk/windows.py:1025
+#: portato/gui/gtk/windows.py:1067
 msgid "Options"
 msgstr "Optionen"
 
-#: portato/gui/gtk/windows.py:1035
+#: portato/gui/gtk/windows.py:1077
 msgid "Categories"
 msgstr "Kategorien"
 
-#: portato/gui/gtk/windows.py:1062
+#: portato/gui/gtk/windows.py:1104
 msgid "Packages"
 msgstr "Pakete"
 
-#: portato/gui/gtk/windows.py:1184
+#: portato/gui/gtk/windows.py:1233
 #, python-format
 msgid "Console (%(title)s)"
 msgstr "Konsole (%(title)s)"
 
-#: portato/gui/gtk/windows.py:1300
+#: portato/gui/gtk/windows.py:1347
 msgid "use flags"
 msgstr "Use Flags"
 
-#: portato/gui/gtk/windows.py:1307
+#: portato/gui/gtk/windows.py:1354
 msgid "masking keywords"
 msgstr "Masking Keywords"
 
-#: portato/gui/gtk/views.py:70
-msgid "Package is not installed"
-msgstr "Paket ist nicht installiert"
-
-#: portato/gui/gtk/views.py:87
-#, python-format
-msgid "No %(old)s language file installed. Falling back to %(new)s."
-msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Benutze \"%(new)s\"-Syntax."
-
-#: portato/gui/gtk/views.py:92
-#, python-format
-msgid "No %(old)s language file installed. Disable highlighting."
-msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Deaktiviere Hervorhebung."
-
-#: portato/gui/gtk/views.py:111
-#, python-format
-msgid "Error: %s"
-msgstr "Fehler: %s"
-
 #: portato/gui/gtk/__init__.py:23
 msgid "Loading Portage"
 msgstr "Lade Portage"
 
-#: portato/gui/gtk/wrapper.py:39
+#: portato/gui/gtk/wrapper.py:40
 msgid "oneshot"
 msgstr "oneshot"
 
-#: portato/gui/gtk/wrapper.py:44
+#: portato/gui/gtk/wrapper.py:45
 #, python-format
 msgid "updating from version %s"
 msgstr "Update von Version %s"
 
-#: portato/gui/gtk/wrapper.py:46
+#: portato/gui/gtk/wrapper.py:47
 msgid "updating"
 msgstr "Update"
 
-#: portato/gui/gtk/wrapper.py:51
+#: portato/gui/gtk/wrapper.py:52
 #, python-format
 msgid "downgrading from version %s"
 msgstr "Downgrade von Version %s"
 
-#: portato/gui/gtk/wrapper.py:53
+#: portato/gui/gtk/wrapper.py:54
 msgid "downgrading"
 msgstr "Downgrade"
 
-#: portato/gui/gtk/wrapper.py:57
+#: portato/gui/gtk/wrapper.py:58
 msgid "IUSE changes:"
 msgstr "IUSE Änderungen:"
 
+#: portato/gui/gtk/wrapper.py:66
+msgid "(In Progress)"
+msgstr "(In Bearbeitung)"
+
+#: portato/gui/gtk/wrapper.py:70
+msgid "Install"
+msgstr "Installieren"
+
+#: portato/gui/gtk/wrapper.py:75
+msgid "Uninstall"
+msgstr "Deinstallieren"
+
+#: portato/gui/gtk/wrapper.py:81
+msgid "Update"
+msgstr "Update"
+
 #: portato/gui/gtk/dialogs.py:17
 msgid ""
 "There are some packages in the emerge queue and/or an emerge process is running.\n"
@@ -685,6 +719,14 @@
 msgstr "Du kannst keine Abhängigkeiten löschen ;)."
 
 #: portato/gui/gtk/dialogs.py:72
+msgid ""
+"This is the updates queue. You cannot remove single elements.\n"
+"Do you want to clear the whole queue instead?"
+msgstr ""
+"Das ist die Update-Queue. Aus dieser können keine einzelnen Pakete entfernt werden.\n"
+"Soll stattdessen die komplette Queue entfernt werden?"
+
+#: portato/gui/gtk/dialogs.py:78
 msgid "Do you really want to clear the whole queue?"
 msgstr "Wirklich die gesamte Queue löschen?"
 
@@ -727,6 +769,25 @@
 "Exception:\n"
 "%s"
 
+#: portato/gui/gtk/views.py:70
+msgid "Package is not installed"
+msgstr "Paket ist nicht installiert"
+
+#: portato/gui/gtk/views.py:87
+#, python-format
+msgid "No %(old)s language file installed. Falling back to %(new)s."
+msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Benutze \"%(new)s\"-Syntax."
+
+#: portato/gui/gtk/views.py:92
+#, python-format
+msgid "No %(old)s language file installed. Disable highlighting."
+msgstr "Keine \"%(old)s\" Syntaxdatei gefunden. Deaktiviere Hervorhebung."
+
+#: portato/gui/gtk/views.py:111
+#, python-format
+msgid "Error: %s"
+msgstr "Fehler: %s"
+
 #: portato/gui/gui_helper.py:125
 msgid "ALL"
 msgstr "ALLE"
=== i18n/messages.pot
==================================================================
--- i18n/messages.pot	(revision 636)
+++ i18n/messages.pot	(patch 0.8.9.3 level 1)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2008-01-14 23:07+0100\n"
+"POT-Creation-Date: 2008-01-18 02:35+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -29,7 +29,7 @@
 msgstr ""
 
 #: portato/gui/templates/portato.glade:68
-#: portato/gui/templates/portato.glade:1840
+#: portato/gui/templates/portato.glade:1962
 msgid "gtk-quit"
 msgstr ""
 
@@ -38,267 +38,260 @@
 msgstr ""
 
 #: portato/gui/templates/portato.glade:89
-#: portato/gui/templates/portato.glade:945
-msgid "E_merge"
+#: portato/gui/templates/portato.glade:497
+msgid "_Install"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:104
-#: portato/gui/templates/portato.glade:979
-msgid "_Unmerge"
+#: portato/gui/templates/portato.glade:105
+#: portato/gui/templates/portato.glade:508
+msgid "_Uninstall"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:118
-#: portato/gui/templates/portato.glade:998
+#: portato/gui/templates/portato.glade:121
+#: portato/gui/templates/portato.glade:951
 msgid "Update _World"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:127
+#: portato/gui/templates/portato.glade:130
 msgid "Show Updatable P_ackages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:136
-msgid "Show Only _Installed Packages"
+#: portato/gui/templates/portato.glade:139
+msgid "Show _Only Installed Packages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:150
+#: portato/gui/templates/portato.glade:153
 msgid "_Sync"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:166
+#: portato/gui/templates/portato.glade:169
 msgid "Save _Flags"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:187
-#: portato/gui/templates/portato.glade:279
-#: portato/gui/templates/portato.glade:1815
+#: portato/gui/templates/portato.glade:190
+#: portato/gui/templates/portato.glade:282
+#: portato/gui/templates/portato.glade:1937
 msgid "Emerge _Paused"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:195
-#: portato/gui/templates/portato.glade:261
-#: portato/gui/templates/portato.glade:1822
+#: portato/gui/templates/portato.glade:198
+#: portato/gui/templates/portato.glade:264
+#: portato/gui/templates/portato.glade:1944
 msgid "_Kill Emerge"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:218 portato/gui/gtk/windows.py:1022
+#: portato/gui/templates/portato.glade:221 portato/gui/gtk/windows.py:1064
 msgid "Queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:225
+#: portato/gui/templates/portato.glade:228
 msgid "Oneshot"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:237 portato/gui/gtk/windows.py:1182
+#: portato/gui/templates/portato.glade:240 portato/gui/gtk/windows.py:1231
 msgid "Console"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:244
+#: portato/gui/templates/portato.glade:247
 msgid "_Copy"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:290
+#: portato/gui/templates/portato.glade:293
 msgid "Plu_gins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:302
+#: portato/gui/templates/portato.glade:305
 msgid "_?"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:310
+#: portato/gui/templates/portato.glade:313
 msgid "_About"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:328
+#: portato/gui/templates/portato.glade:331
 msgid "_Plugins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:365
+#: portato/gui/templates/portato.glade:368
 msgid "gtk-find"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:464
-msgid "Add to Emerge Queue"
+#: portato/gui/templates/portato.glade:472
+#: portato/gui/templates/portato.glade:652
+#: portato/gui/templates/portato.glade:668
+msgid "label"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:476
-msgid "Remove from Emerge Queue"
+#: portato/gui/templates/portato.glade:496
+msgid "Install onto system"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:488
-msgid "Revert changes"
+#: portato/gui/templates/portato.glade:507
+msgid "Uninstall from system"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:510
-#: portato/gui/templates/portato.glade:633
-#: portato/gui/templates/portato.glade:648
-msgid "label"
+#: portato/gui/templates/portato.glade:518
+msgid "Revert changes"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:555
-msgid "<b>Installed, but not in portage anymore</b>"
+#: portato/gui/templates/portato.glade:519
+msgid "Re_vert"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:570
-msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
+#: portato/gui/templates/portato.glade:565 portato/gui/gtk/windows.py:755
+#: portato/gui/gtk/windows.py:758 portato/gui/gtk/windows.py:825
+#: portato/gui/gtk/windows.py:829
+msgid "Testing"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:602
-msgid "<b>Description:</b>"
+#: portato/gui/templates/portato.glade:598 portato/gui/gtk/windows.py:738
+#: portato/gui/gtk/windows.py:741 portato/gui/gtk/windows.py:744
+#: portato/gui/gtk/windows.py:852 portato/gui/gtk/windows.py:856
+#: portato/gui/gtk/windows.py:863 portato/gui/gtk/windows.py:867
+msgid "Masked"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:617
-msgid "<b>Overlay:</b>"
+#: portato/gui/templates/portato.glade:617 portato/gui/gtk/windows.py:610
+msgid "Installed"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:665
+#: portato/gui/templates/portato.glade:635
 msgid "<b>Homepage:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:682 portato/gui/gtk/windows.py:575
-msgid "Installed"
+#: portato/gui/templates/portato.glade:683
+msgid "<b>Overlay:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:701 portato/gui/gtk/windows.py:703
-#: portato/gui/gtk/windows.py:706 portato/gui/gtk/windows.py:709
-#: portato/gui/gtk/windows.py:811 portato/gui/gtk/windows.py:815
-#: portato/gui/gtk/windows.py:822 portato/gui/gtk/windows.py:826
-msgid "Masked"
+#: portato/gui/templates/portato.glade:699
+msgid "<b>Description:</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:734 portato/gui/gtk/windows.py:720
-#: portato/gui/gtk/windows.py:723 portato/gui/gtk/windows.py:784
-#: portato/gui/gtk/windows.py:788
-msgid "Testing"
+#: portato/gui/templates/portato.glade:730
+msgid "<span foreground='red'><b>MISSING KEYWORD</b></span>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:754
+#: portato/gui/templates/portato.glade:745
+msgid "<b>Installed, but not in portage anymore</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:762
 msgid "_General"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:786
+#: portato/gui/templates/portato.glade:794
 msgid "U_se List"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:814
+#: portato/gui/templates/portato.glade:822
 msgid "E_build"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:842
+#: portato/gui/templates/portato.glade:850
 msgid "C_hangelog"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:870
-msgid "F_iles"
+#: portato/gui/templates/portato.glade:878
+msgid "Fi_les"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:926
-msgid "Install all packages in the \"Emerge Queue\""
+#: portato/gui/templates/portato.glade:916
+msgid "Execute the current selected queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:960
-msgid "Deinstall all packages in the \"Unmerge Queue\""
+#: portato/gui/templates/portato.glade:935
+msgid "E_xecute"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:997
+#: portato/gui/templates/portato.glade:950
 msgid ""
 "Calculate the packages which will be installed during an \"update world\""
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1010
+#: portato/gui/templates/portato.glade:963
 msgid "Remove the selected package from the queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1011
+#: portato/gui/templates/portato.glade:964
 msgid "_Remove"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1033
+#: portato/gui/templates/portato.glade:1007
 msgid "_Queue"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1059
+#: portato/gui/templates/portato.glade:1033
 msgid "_Console"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1094
+#: portato/gui/templates/portato.glade:1068
 msgid "L_og"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1129
+#: portato/gui/templates/portato.glade:1103
 msgid "Portato - A Portage GUI"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1146
+#: portato/gui/templates/portato.glade:1120
 msgid "Search Results"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1186
-#: portato/gui/templates/portato.glade:1781
-#: portato/gui/templates/portato.glade:1889
+#: portato/gui/templates/portato.glade:1160
+#: portato/gui/templates/portato.glade:1903
+#: portato/gui/templates/portato.glade:2011
 msgid "gtk-cancel"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1198
+#: portato/gui/templates/portato.glade:1172
 msgid "gtk-jump-to"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1213
+#: portato/gui/templates/portato.glade:1187
 msgid "gtk-ok"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1234
+#: portato/gui/templates/portato.glade:1208
 msgid "Preferences"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1269
+#: portato/gui/templates/portato.glade:1243
 msgid "Debug"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1256
 msgid "Browser command: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1308
+#: portato/gui/templates/portato.glade:1282
+#: portato/gui/templates/portato.glade:1709
 msgid "<b>General Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1358
+#: portato/gui/templates/portato.glade:1332
 msgid "<b>Update World Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1386
+#: portato/gui/templates/portato.glade:1360
 msgid "Sync command: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1407
+#: portato/gui/templates/portato.glade:1381
 msgid "<b>Sync Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1458
-msgid "File name to use, if package.use is a directory: "
+#: portato/gui/templates/portato.glade:1422
+msgid "<u><i>Masking Keywords</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1469
-msgid "Add only exact version to package.use"
+#: portato/gui/templates/portato.glade:1437
+msgid "<u><i>Testing Keywords</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1482
-msgid "Add only exact version to package.keywords"
+#: portato/gui/templates/portato.glade:1452
+msgid "<u><i>Use-Flags</i></u>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1496
-msgid "File name to use, if package.keywords is a directory: "
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1530
-msgid "File name to use, if package.mask/package.unmask is a directory: "
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1541
-msgid "Add only exact version to package.mask/package.unmask"
-msgstr ""
-
-#: portato/gui/templates/portato.glade:1563
+#: portato/gui/templates/portato.glade:1474
 msgid ""
 "<u>You may use the following placeholders:</u>\n"
 "\n"
@@ -307,86 +300,114 @@
 "<i>$(cat-1)/$(cat-2)</i>: first/second part of the category"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1589
-msgid "<u><i>Use-Flags</i></u>"
+#: portato/gui/templates/portato.glade:1498
+msgid "Add only exact version to package.mask/package.unmask"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1604
-msgid "<u><i>Testing Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1512
+msgid "File name to use, if package.mask/package.unmask is a directory: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1619
-msgid "<u><i>Masking Keywords</i></u>"
+#: portato/gui/templates/portato.glade:1546
+msgid "File name to use, if package.keywords is a directory: "
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1636
+#: portato/gui/templates/portato.glade:1557
+msgid "Add only exact version to package.keywords"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1570
+msgid "Add only exact version to package.use"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1584
+msgid "File name to use, if package.use is a directory: "
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1610
 msgid "<b>Use Flag and Keyword Options</b>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1654
+#: portato/gui/templates/portato.glade:1628
 msgid "General"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1677
-msgid "Show emerge progress in title - similar to the console tab"
+#: portato/gui/templates/portato.glade:1665
+msgid "Enable systray"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1693
-msgid "Enable systray"
+#: portato/gui/templates/portato.glade:1678
+msgid "Show emerge progress in title - similar to the console tab"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1707
+#: portato/gui/templates/portato.glade:1692
 msgid "Hide on minimization (only if systray is enabled)"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1726
+#: portato/gui/templates/portato.glade:1743
 msgid "Console Font"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1736
+#: portato/gui/templates/portato.glade:1753
 msgid "Chose a console font"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1763
+#: portato/gui/templates/portato.glade:1770
+msgid "<b>Console Options</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1810
+msgid "Package Tabs"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1835
+msgid "System Tabs"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1861
+msgid "<b>Tab Options</b>"
+msgstr ""
+
+#: portato/gui/templates/portato.glade:1885
 msgid "Visual"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1790
-#: portato/gui/templates/portato.glade:1901
+#: portato/gui/templates/portato.glade:1912
+#: portato/gui/templates/portato.glade:2023
 msgid "gtk-apply"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1850
+#: portato/gui/templates/portato.glade:1972
 msgid "Plugins"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1922
+#: portato/gui/templates/portato.glade:2044
 msgid "About Portato"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1931
+#: portato/gui/templates/portato.glade:2053
 msgid ""
 "This software is licensed under the terms of the GPLv2.\n"
 "Copyright (C) 2006-2007 René 'Necoro' Neumann <necoro@necoro.net>"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:1933
+#: portato/gui/templates/portato.glade:2055
 msgid "A Portage GUI"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2023
+#: portato/gui/templates/portato.glade:2145
 msgid "Updateble Packages"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2065
+#: portato/gui/templates/portato.glade:2187
 msgid "_Close"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2077
+#: portato/gui/templates/portato.glade:2199
 msgid "Select _All"
 msgstr ""
 
-#: portato/gui/templates/portato.glade:2092
+#: portato/gui/templates/portato.glade:2214
 msgid "_Install Selected"
 msgstr ""
 
@@ -471,7 +492,7 @@
 msgstr ""
 
 #: portato/gui/gtk/windows.py:61 portato/gui/gtk/windows.py:149
-#: portato/gui/gtk/windows.py:574
+#: portato/gui/gtk/windows.py:609
 msgid "Enabled"
 msgstr ""
 
@@ -499,137 +520,150 @@
 msgid "Results"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:496
+#: portato/gui/gtk/windows.py:372
+msgid "Top"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Bottom"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Left"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:372
+msgid "Right"
+msgstr ""
+
+#: portato/gui/gtk/windows.py:531
 msgid "<no description>"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:519
+#: portato/gui/gtk/windows.py:554
 msgid "The first homepage part does not start with 'http' or 'ftp'."
 msgstr ""
 
-#: portato/gui/gtk/windows.py:523
+#: portato/gui/gtk/windows.py:558
 msgid "Blank inside homepage."
 msgstr ""
 
-#: portato/gui/gtk/windows.py:552
+#: portato/gui/gtk/windows.py:587
 msgid "This is an expanded use flag and cannot be selected"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:576
+#: portato/gui/gtk/windows.py:611
 msgid "Flag"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:577
+#: portato/gui/gtk/windows.py:612
 msgid "Description"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:655
+#: portato/gui/gtk/windows.py:690
 #, python-format
 msgid "Package could not be found: %s"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:712 portato/gui/gtk/windows.py:813
+#: portato/gui/gtk/windows.py:747 portato/gui/gtk/windows.py:854
 msgid "Masked by user"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:888
+#: portato/gui/gtk/windows.py:929
 msgid "Loading Config"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:900
+#: portato/gui/gtk/windows.py:941
 msgid "Creating Database"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:905
+#: portato/gui/gtk/windows.py:946
 msgid "Loading Plugins"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:918
+#: portato/gui/gtk/windows.py:959
 msgid "Building frontend"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:970
+#: portato/gui/gtk/windows.py:1011
 msgid "Restoring Session"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:973
+#: portato/gui/gtk/windows.py:1014
 msgid "Finishing startup"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1025
+#: portato/gui/gtk/windows.py:1067
 msgid "Options"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1035
+#: portato/gui/gtk/windows.py:1077
 msgid "Categories"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1062
+#: portato/gui/gtk/windows.py:1104
 msgid "Packages"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1184
+#: portato/gui/gtk/windows.py:1233
 #, python-format
 msgid "Console (%(title)s)"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1300
+#: portato/gui/gtk/windows.py:1347
 msgid "use flags"
 msgstr ""
 
-#: portato/gui/gtk/windows.py:1307
+#: portato/gui/gtk/windows.py:1354
 msgid "masking keywords"
 msgstr ""
 
-#: portato/gui/gtk/views.py:70
-msgid "Package is not installed"
-msgstr ""
-
-#: portato/gui/gtk/views.py:87
-#, python-format
-msgid "No %(old)s language file installed. Falling back to %(new)s."
-msgstr ""
-
-#: portato/gui/gtk/views.py:92
-#, python-format
-msgid "No %(old)s language file installed. Disable highlighting."
-msgstr ""
-
-#: portato/gui/gtk/views.py:111
-#, python-format
-msgid "Error: %s"
-msgstr ""
-
 #: portato/gui/gtk/__init__.py:23
 msgid "Loading Portage"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:39
+#: portato/gui/gtk/wrapper.py:40
 msgid "oneshot"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:44
+#: portato/gui/gtk/wrapper.py:45
 #, python-format
 msgid "updating from version %s"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:46
+#: portato/gui/gtk/wrapper.py:47
 msgid "updating"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:51
+#: portato/gui/gtk/wrapper.py:52
 #, python-format
 msgid "downgrading from version %s"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:53
+#: portato/gui/gtk/wrapper.py:54
 msgid "downgrading"
 msgstr ""
 
-#: portato/gui/gtk/wrapper.py:57
+#: portato/gui/gtk/wrapper.py:58
 msgid "IUSE changes:"
 msgstr ""
 
+#: portato/gui/gtk/wrapper.py:66
+msgid "(In Progress)"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:70
+msgid "Install"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:75
+msgid "Uninstall"
+msgstr ""
+
+#: portato/gui/gtk/wrapper.py:81
+msgid "Update"
+msgstr ""
+
 #: portato/gui/gtk/dialogs.py:17
 msgid ""
 "There are some packages in the emerge queue and/or an emerge process is "
@@ -671,6 +705,12 @@
 msgstr ""
 
 #: portato/gui/gtk/dialogs.py:72
+msgid ""
+"This is the updates queue. You cannot remove single elements.\n"
+"Do you want to clear the whole queue instead?"
+msgstr ""
+
+#: portato/gui/gtk/dialogs.py:78
 msgid "Do you really want to clear the whole queue?"
 msgstr ""
 
@@ -712,6 +752,25 @@
 "%s"
 msgstr ""
 
+#: portato/gui/gtk/views.py:70
+msgid "Package is not installed"
+msgstr ""
+
+#: portato/gui/gtk/views.py:87
+#, python-format
+msgid "No %(old)s language file installed. Falling back to %(new)s."
+msgstr ""
+
+#: portato/gui/gtk/views.py:92
+#, python-format
+msgid "No %(old)s language file installed. Disable highlighting."
+msgstr ""
+
+#: portato/gui/gtk/views.py:111
+#, python-format
+msgid "Error: %s"
+msgstr ""
+
 #: portato/gui/gui_helper.py:125
 msgid "ALL"
 msgstr ""
=== portato.py
==================================================================
--- portato.py	(revision 636)
+++ portato.py	(patch 0.8.9.3 level 1)
@@ -102,7 +102,7 @@
 		try:
 			import shm_wrapper as shm
 		except ImportError:
-			from portato.shm import shm_wrapper as shm
+			from portato._shm import shm_wrapper as shm
 
 		mem = shm.create_memory(1024, permissions=0600)
 		sig = shm.create_semaphore(InitialValue = 0, permissions = 0600)
=== doc/TODO
==================================================================
--- doc/TODO	(revision 636)
+++ doc/TODO	(patch 0.8.9.3 level 1)
@@ -16,6 +16,7 @@
 - save/restore queue on exit/start
 - only remove already merged packages from queue
 - make sure, a package being removed from the queue is not needed as a dependency by another package
+- binary package support
 
 - "nach hause telefonieren" :)
 
@@ -30,7 +31,6 @@
 	- colors and font sizes
 
 - rotating systray icon
-- interactive emerges
 
 GTK:
 ----
@@ -38,6 +38,7 @@
 - show dependencies
 - reload package table when emerge is finished
 - dependency tree out of the installed packages
+- better display for search results
 
 Qt (stopped):
 ---
=== doc/Changelog
==================================================================
--- doc/Changelog	(revision 636)
+++ doc/Changelog	(patch 0.8.9.3 level 1)
@@ -7,7 +7,8 @@
 - handle new "use defaults" correctly
 - allowed the permanent change of a plugin status
 - added "ALL" category
-- new design
+- new design and handling
+- allowed interactive emerges
 
 0.8.6.2:
 - changed the pipe version and use shm instead (fixes issues with kdesu)
=== _shm/__init__.py
==================================================================
=== _shm/shm_wrapper.py
==================================================================
--- _shm/shm_wrapper.py	(revision 636)
+++ _shm/shm_wrapper.py	(patch 0.8.9.3 level 1)
@@ -0,0 +1,301 @@
+# shm_wrapper - A wrapper for the shm module which provides access
+# to System V shared memory and semaphores on *nix systems.
+#
+# Copyright (c) 2007 by Philip Semanchuk
+# Contact info at http://NikitaTheSpider.com/
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version 2
+# of the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+# Python modules
+import random
+import sys
+
+# Third party modules
+import shm
+
+r"""shm_wrapper - A wrapper for the shm module which provides access
+to System V shared memory and semaphores on *nix systems.
+
+The module shm is a Python wrapper around system functions like shmget. This
+module in turn offers higher-level, more Pythonic access to shared memory and
+semaphores.
+
+Full documentation is online at http://NikitaTheSpider.com/python/shm/
+
+"""
+
+def create_memory(size, permissions = 0666, InitCharacter = ' '):
+    """ Creates a new shared memory segment. One can destroy it either by calling the
+    module-level method remove_memory() or by calling the .remove() method of a handle to
+    said memory.
+    """
+    memory = None
+
+    # I create the memory using a randomly-generated key. I keep trying until I find one
+    # that works or until I hit an error.
+    while not memory:
+        key = random.randint(1, sys.maxint - 1)
+        try:
+            memory = shm.create_memory(key, size, permissions)
+        except shm.error, ExtraData:
+            if shm.memory_haskey(key):
+                # Oops, bad luck, the key exists. I'll try another. I can't call
+                # memory_haskey() before calling create_memory() because that would create
+                # a race condition where I could verify a key is not used but then another
+                # process could call create_memory() with that key before I got a chance to
+                # do so.
+                pass
+            else:
+                # Uh-oh, something fundamental is wrong.
+                raise shm.error, ExtraData
+
+    # Here I implicitly discard the memory handle object returned to me by shm and instead
+    # return my own handle to the shared memory segment.
+    memory = SharedMemoryHandle(key)
+
+    memory.write(InitCharacter[0] * memory.size)
+
+    return memory
+
+
+def remove_memory(key):
+    # Destroys the shared memory segment. Raises KeyError if the key doesn't exist.
+    shm.remove_memory(shm.getshmid(key))
+
+
+class SharedMemoryHandle(object):
+    def __init__(self, key):
+        self._MemoryHandle = None
+
+        # getshmid will raise a KeyError if there's no memory segment with this key.
+        shmid = shm.getshmid(key)
+        self._MemoryHandle = shm.memory(shmid)
+
+
+    def __del__(self):
+        if self._MemoryHandle:
+            # This will raise an error if the memory has been destroyed.
+            try:
+                if self._MemoryHandle.attached:
+                    self._MemoryHandle.detach()
+            except shm.error:
+                pass
+
+
+    def remove(self):
+        if self._MemoryHandle:
+            if self._MemoryHandle.attached:
+                self._MemoryHandle.detach()
+
+            shm.remove_memory(self._MemoryHandle.shmid)
+            self._MemoryHandle = None
+
+
+    def read(self, NumberOfBytes = 0, offset = 0):
+        if not self._MemoryHandle.attached:
+            self._MemoryHandle.attach()
+
+        if not NumberOfBytes:
+            NumberOfBytes = self._MemoryHandle.size - offset
+
+        return self._MemoryHandle.read(NumberOfBytes, offset)
+
+
+    def write(self, s, offset = 0):
+        if not self._MemoryHandle.attached:
+            self._MemoryHandle.attach()
+
+        self._MemoryHandle.write(s, offset)
+
+
+    # Properties start here ================================================================
+
+    # key
+    def __get_key(self): return self._MemoryHandle.key
+    def __set_key(self, foo): raise AttributeError
+    key = property(__get_key, __set_key)
+
+    # size of segment
+    def __get_size(self): return self._MemoryHandle.size
+    def __set_size(self, foo): raise AttributeError
+    size = property(__get_size, __set_size)
+
+    # permissions
+    def __get_permissions(self): return self._MemoryHandle.perm
+    def __set_permissions(self, permissions): self._MemoryHandle.setperm(permissions)
+    permissions = property(__get_permissions, __set_permissions)
+
+    # The number of processes currently attached to this memory segment.
+    def __get_number_attached(self): return self._MemoryHandle.nattch
+    def __set_number_attached(self, foo): raise AttributeError
+    number_attached = property(__get_number_attached, __set_number_attached)
+
+    # segment's uid
+    def __get_uid(self): return self._MemoryHandle.uid
+    def __set_uid(self, uid): self._MemoryHandle.setuid(uid)
+    uid = property(__get_uid, __set_uid)
+
+    # segment's gid
+    def __get_gid(self): return self._MemoryHandle.gid
+    def __set_gid(self, gid): self._MemoryHandle.setgid(gid)
+    gid = property(__get_gid, __set_gid)
+
+    # Creator uid (read-only)
+    def __get_creator_uid(self): return self._MemoryHandle.cuid
+    def __set_creator_uid(self, foo): raise AttributeError
+    creator_uid = property(__get_creator_uid, __set_creator_uid)
+
+    # Creator gid (read-only)
+    def __get_creator_gid(self): return self._MemoryHandle.cgid
+    def __set_creator_gid(self, foo): raise AttributeError
+    creator_gid = property(__get_creator_gid, __set_creator_gid)
+
+    # Creator pid (read-only)
+    def __get_creator_pid(self): return self._MemoryHandle.cpid
+    def __set_creator_pid(self, foo): raise AttributeError
+    creator_pid = property(__get_creator_pid, __set_creator_pid)
+
+    # pid of last process to operate on this segment (read-only)
+    def __get_last_pid(self): return self._MemoryHandle.lpid
+    def __set_last_pid(self, foo): raise AttributeError
+    last_pid = property(__get_last_pid, __set_last_pid)
+
+
+
+def create_semaphore(InitialValue = 1, permissions = 0666):
+    """ Creates a new semaphore. One can destroy it either by calling the
+    module-level method remove_semaphore() or by calling the .remove() method of a
+    handle to said semaphore.
+    """
+    semaphore = None
+
+    # I create the semaphore using a randomly-generated key. I keep trying until I find one
+    # that works or until I hit an error.
+    while not semaphore:
+        key = random.randint(1, sys.maxint - 1)
+        try:
+            semaphore = shm.create_semaphore(key, InitialValue, permissions)
+        except shm.error, ExtraData:
+            if shm.semaphore_haskey(key):
+                # Oops, bad luck, the key exists. I'll try another. I can't call
+                # memory_haskey() before calling create_semaphore() because that would create
+                # a race condition where I could verify a key is not used but then another
+                # process could call create_semaphore() with that key before I got a chance to
+                # do so.
+                pass
+            else:
+                # Uh-oh, something fundamental is wrong.
+                raise ExtraData
+
+    # Here I implicitly discard the semaphore object returned to me by shm and instead
+    # return my own handle to the semaphore.
+    return SemaphoreHandle(key)
+
+
+def remove_semaphore(key):
+    # Destroys the semaphore. Raises KeyError if the key doesn't exist.
+    shm.remove_semaphore(shm.getsemid(key))
+
+
+class SemaphoreHandle(object):
+    def __init__(self, key):
+        # getsemid will raise a KeyError if appropriate.
+        self._SemaphoreHandle = shm.semaphore(shm.getsemid(key))
+
+
+    def remove(self):
+        shm.remove_semaphore(self._SemaphoreHandle.semid)
+        self._SemaphoreHandle = None
+
+
+    def P(self):
+        # P = prolaag = probeer te verlagen (try to decrease)
+        self._SemaphoreHandle.P()
+
+
+    def V(self):
+        # V = verhoog (increase)
+        self._SemaphoreHandle.V()
+
+
+    def Z(self):
+        # Z = block until Zee semaphore is Zero
+        self._SemaphoreHandle.Z()
+
+
+    # Properties start here ================================================================
+    def __get_key(self): return self._SemaphoreHandle.key
+    def __set_key(self, foo): raise AttributeError
+    key = property(__get_key, __set_key)
+
+
+    def __get_value(self): return self._SemaphoreHandle.val
+    def __set_value(self, value): self._semaphore.setval(value)
+    value = property(__get_value, __set_value)
+
+
+    def __get_WaitingForZero(self): return self._SemaphoreHandle.zcnt
+    def __set_WaitingForZero(self, foo): raise AttributeError
+    WaitingForZero = property(__get_WaitingForZero, __set_WaitingForZero)
+
+
+    def __get_WaitingForNonZero(self): return self._SemaphoreHandle.ncnt
+    def __set_WaitingForNonZero(self, foo): raise AttributeError
+    WaitingForNonZero = property(__get_WaitingForNonZero, __set_WaitingForNonZero)
+
+
+    def __get_blocking(self): return self._SemaphoreHandle.blocking
+    def __set_blocking(self, block): self._SemaphoreHandle.setblocking(block)
+    blocking = property(__get_blocking, __set_blocking)
+
+
+    def __get_undo(self): raise AttributeError
+    def __set_undo(self, undo): self._SemaphoreHandle.setundo(undo)
+    undo = property(__get_undo, __set_undo)
+
+
+    # segment's uid
+    def __get_uid(self): return self._SemaphoreHandle.uid
+    def __set_uid(self, uid): self._SemaphoreHandle.setuid(uid)
+    uid = property(__get_uid, __set_uid)
+
+
+    # segment's gid
+    def __get_gid(self): return self._SemaphoreHandle.gid
+    def __set_gid(self, gid): self._SemaphoreHandle.setgid(gid)
+    gid = property(__get_gid, __set_gid)
+
+
+    # Creator uid (read-only)
+    def __get_creator_uid(self): return self._SemaphoreHandle.cuid
+    def __set_creator_uid(self, foo): raise AttributeError
+    creator_uid = property(__get_creator_uid, __set_creator_uid)
+
+
+    # Creator gid (read-only)
+    def __get_creator_gid(self): return self._SemaphoreHandle.cgid
+    def __set_creator_gid(self, foo): raise AttributeError
+    creator_gid = property(__get_creator_gid, __set_creator_gid)
+
+
+    # Creator pid -- since semaphores have a lot of the same properties as memory
+    # objects, one would expect creator PID to be exposed here, but it isn't
+    # made available by the system (true AFAICT for BSDs, OS X and Solaris).
+
+
+    # pid of last process to operate on this segment (read-only)
+    def __get_last_pid(self): return self._SemaphoreHandle.lpid
+    def __set_last_pid(self, foo): raise AttributeError
+    last_pid = property(__get_last_pid, __set_last_pid)
=== _shm/shmmodule.c
==================================================================
--- _shm/shmmodule.c	(revision 636)
+++ _shm/shmmodule.c	(patch 0.8.9.3 level 1)
@@ -0,0 +1,1396 @@
+/****************************************************************************
+ *
+ * shmmodule.c Copyright 1997, 1998 by INRIA. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY WARRANTIES, EXPRESS OR IMPLIED,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
+ * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ *
+ * IN NO EVENT SHALL THE INRIA OR THE AUTHORS BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES,
+ * INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,
+ * LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION, HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT,
+ * INCLUDING NEGLIGENCE OR OTHERWISE, ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ ***************************************************************************/
+
+/* Python Shared Memory module 
+   Written by Vladimir Marangozov  
+   Adopted by Philip Semanchuk 
+
+  This module provides an interface to System V shared memory IPC.
+
+  Version history:
+  - 1.0 (sometime in the 1990s) - Released by Mr. Marangozov
+  - 1.1 (Feb 2007) - Released by me, Philip Semanchuk. Fixes a few bugs (including some 
+        memory leaks) and adds the ability to read the blocking flag on semaphores.
+  - 1.1.1 (Mar 2007)- Updated setup.py to handle compile options for Linux users.
+  - 1.1.2 (Nov 2007) - Fixed a sprintf() format in repr to handle size_t.
+  - 1.1.3 (Nov 2007) - Changed #define of key to _key instead of __key for OS X Leopard.
+        Thanks to Bill Hart.
+  - 1.1.4 (Jan 2008) - Changed the reference to key in the ipc_perm structure to the 
+        explicit #define IPC_PERM_KEY_NAME. 
+
+  See http://NikitaTheSpider.com/python/shm/ for more thorough documentation, a more Pythonic 
+  wrapper, updates, contact info, setup.py, etc.
+
+
+  Module interface:
+
+  - shm.create_memory(int Key, int Size [,int Perm=0666]) --> object
+  - shm.create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object
+  - shm.error
+  - shm.ftok(string Path, int ProjId) --> int
+  - shm.getsemid(int Key) --> int
+  - shm.getshmid(int Key) --> int
+  - shm.memory(int Shmid) --> object
+  - shm.memory_haskey(int Key) --> int
+  - shm.remove_memory(int Shmid) --> None
+  - shm.remove_semaphore(int Semid) --> None
+  - shm.semaphore(int Semid) --> object
+  - shm.semaphore_haskey(int Key) --> int
+
+  Memory Objects:
+
+  + Members:
+
+    - m.addr	- attachment address in the process address space
+    - m.attached	- 0|1
+    - m.cgid	- gid of creator
+    - m.cpid	- pid of creator
+    - m.cuid	- uid of creator
+    - m.gid		- gid of owner
+    - m.key		- segment key or IPC_PRIVATE (=0)
+    - m.lpid	- pid of last shmop
+    - m.nattch	- current # of attached processes
+    - m.perm	- operation permission
+    - m.shmid	- shared memory segment id
+    - m.size	- segment size
+    - m.uid		- uid of owner
+
+  + Methods:
+
+    - m.attach([int Addr=0 [,int How=0]]) --> None
+    - m.detach() --> None
+    - m.read(int Nbytes [,int Offset=0]) --> string
+    - m.setgid(int Gid) --> None
+    - m.setperm(int Perm) --> None
+    - m.setuid(int Uid) --> None
+    - m.write(string Data [,int Offset=0]) --> None
+
+  Semaphore Objects:
+
+  + Members:
+
+    - s.cgid        - gid of creator
+    - s.cuid        - uid of creator
+    - s.gid         - gid of owner
+    - s.key         - semaphore key or IPC_PRIVATE (=0)
+    - s.lpid        - pid of last semop
+    - s.ncnt        - current # of processes waiting for s.val > 0
+    - s.perm        - operation permission
+    - s.semid       - semaphore id
+    - s.uid         - uid of owner
+    - s.val         - value of the semaphore counter
+    - s.zcnt        - current # of processes waiting for s.val == 0
+    - s.blocking    - whether or not the semaphore is in blocking mode
+
+  + Methods:
+
+    - s.P() --> None		- blocks if s.val == 0; decrements s.val
+    - s.V() --> None		- increments s.val
+    - s.Z() --> None		- blocks until s.val == 0
+    - s.setblocking(0|1) --> None
+    - s.setgid(int Gid) --> None
+    - s.setperm(int Perm) --> None
+    - s.setuid(int Uid) --> None
+    - s.setundo(0|1) --> None
+    - s.setval(int Value) --> None
+
+*/
+
+/* ------------------------------------------------------------------------- */
+#include "Python.h"
+#include "structmember.h"
+
+/* v1.1 - added */
+#ifdef __FreeBSD__
+#include <machine/param.h>  /* for system definition of PAGE_SIZE */
+#endif
+
+#include <sys/types.h>
+#include <sys/ipc.h>		/* for system's IPC_xxx definitions */
+#include <sys/shm.h>		/* for shmget, shmat, shmdt, shmctl */
+#include <sys/sem.h>		/* for semget, semctl, semop */
+
+/* v1.1.4 - The name of this member varies and is sniffed out by setup.py. */
+#if defined(ZERO_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME   key
+#elif defined(ONE_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME  _key
+#elif defined(TWO_UNDERSCORE_KEY)
+#define IPC_PERM_KEY_NAME __key
+#endif
+
+/*
+-- Exception type for errors detected by this module.
+*/
+
+static PyObject *PyShm_Error;
+
+/*
+-- Convenience function to raise an error according to errno.
+*/
+
+static PyObject *
+PyShm_Err(void)
+{
+    return PyErr_SetFromErrno(PyShm_Error);
+}
+
+/*
+-- The object holding a shared memory segment
+*/
+
+typedef struct {
+    PyObject_HEAD
+    int shmid;			/* shared memory id	*/
+    int mode;			/* attachment mode	*/
+    void *addr;			/* shmseg start address	*/
+    struct shmid_ds ds;		/* data structure	*/
+} PyShmMemoryObject;
+
+staticforward PyTypeObject	PyShmMemory_Type;
+
+#define PyShmObj		PyShmMemoryObject
+#define PyShmMemory_Check(op)	((op)->ob_type == &PyShmMemory_Type)
+
+/*
+-- The object holding a semaphore
+*/
+
+typedef struct {
+    PyObject_HEAD
+    int semid;			/* semaphore id		*/
+    short opflag;		/* IPC_NOWAIT, SEM_UNDO	*/
+    struct semid_ds ds;		/* data structure	*/
+} PyShmSemaphoreObject;
+
+#ifndef HAVE_UNION_SEMUN
+union semun {
+    int val;                    /* used for SETVAL only */
+    struct semid_ds *buf;       /* for IPC_STAT and IPC_SET */
+    unsigned short *array;      /* used for GETALL and SETALL */
+};
+#endif
+
+typedef union semun semctl_arg;
+
+staticforward PyTypeObject	PyShmSemaphore_Type;
+
+#define PyShmSemObj		PyShmSemaphoreObject
+#define PyShmSemaphore_Check(op) ((op)->ob_type == &PyShmSemaphore_Type)
+
+/*
+-- Internal dictionaries for Python memory and semaphore objects
+*/
+
+static PyObject *shm_dict = NULL;
+static PyObject *sem_dict = NULL;
+
+/************************************************************/
+/*                       Memory Objects                     */
+/************************************************************/
+
+/* This is to check the validity of a Python memory object
+   (and to refresh its data status structure). Notably, we
+   have to check that the real memory segment it points to
+   is still in memory and hasn't changed (test its id and
+   size). It could be that the segment has been removed and
+   created again by someone else with the same key. This is
+   fine as far as the segment (1) has the same id and size,
+   and (2) is accessible via shmctl. If you have a better
+   test, you're welcome :-) */
+
+static int
+check_memory_identity(PyShmObj *o)
+{
+    int new_shmid;
+    int old_shmid = o->shmid;
+    int old_size = o->ds.shm_segsz;
+    key_t old_key = o->ds.shm_perm.IPC_PERM_KEY_NAME;
+
+    /*
+    -- 1. Try to get the segment identified by the old key (if not IPC_PRIVATE)
+    -- 2. On failure or on mismatch of the new and the old id -> fail.
+    -- 3. Try to refresh the object's status using the new id.
+    -- 4. On failure (the segment cannot be accessed) -> fail.
+    -- 5. Finaly, compare the old size and the one we got via the new id.
+    */
+    if (old_key != IPC_PRIVATE) {
+        new_shmid = shmget(old_key, 0, 0);
+        if (new_shmid != old_shmid)
+            return 0;
+    }
+    else
+        new_shmid = old_shmid;
+    if ((shmctl(new_shmid, IPC_STAT, &(o->ds)) != -1) &&
+        (old_size == o->ds.shm_segsz) &&
+	    (old_key == o->ds.shm_perm.IPC_PERM_KEY_NAME))
+        return 1;
+    return 0;
+}
+
+/* Convenience macro for updating the shared memory data status structure */
+
+#define refresh_memory_status(o)					\
+    if (!check_memory_identity(o)) {					\
+	   PyErr_SetString(PyShm_Error, "can't access shared memory segment");		\
+	   return NULL;							\
+    }
+
+/*
+-- attach([,address=0 [,how=0]])
+*/
+
+/* Attach the shared memory segment to the process address space */
+
+static PyObject *
+PyShmMemory_attach(PyShmObj *self, PyObject *args)
+{
+    unsigned long address = 0;
+    int mode = 0;
+    void *addr, *old_addr;
+
+    if (!PyArg_ParseTuple(args, "|li", &address, &mode))
+	   return NULL;
+    refresh_memory_status(self);
+    /* return if already attached with the same mode to the same address */
+    if ((self->addr != NULL) && (self->mode == mode) &&
+        ((address == 0) || (self->addr == (void *)address))) {
+    	Py_INCREF(Py_None);
+    	return Py_None;
+    }
+    /* perform the attach */
+    addr = (void *)shmat(self->shmid, (void *)address, mode);
+    if (addr  == (void *)-1)
+	   return PyShm_Err();
+    old_addr = self->addr;
+    self->addr = addr;
+    self->mode = mode;
+    /* XXX - multiple attachments of the same shared memory segment
+             to different locations of the process address space is
+	     not supported. */
+    shmdt(old_addr);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- detach()
+*/
+
+/* Detach the memory object from the process address space */
+
+static PyObject *
+PyShmMemory_detach(PyShmObj *self, PyObject *args)
+{
+    if (!PyArg_NoArgs(args))
+	   return NULL;
+    if (self->addr != NULL) {
+        refresh_memory_status(self);
+        if (shmdt(self->addr) != 0)
+            return PyShm_Err();
+        self->addr = NULL;		/* mark as detached */
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- read(int Nbytes [,int Offset=0]) --> string
+*/
+
+/* Return a string of n bytes peeked from the shared memory segment */
+
+static PyObject *
+PyShmMemory_read(PyShmObj *self, PyObject *args)
+{
+    unsigned long n, offset = 0;
+    char buf[128];
+    char *addr;
+
+    if (!PyArg_ParseTuple(args, "l|l", &n, &offset))
+	    return NULL;
+    refresh_memory_status(self);
+    if (self->addr == NULL) {
+        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
+        return NULL;
+    }
+    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
+        sprintf(buf, "read() argument%s exceed%s upper memory limit",
+            offset ? "s" : "", offset ? "" : "s");
+        PyErr_SetString(PyShm_Error, buf);
+        return NULL;
+    }
+    addr = (char *)((unsigned long)self->addr + offset);
+    return PyString_FromStringAndSize(addr, n);
+}
+
+/*
+-- setgid(int Gid)
+*/
+
+static PyObject *
+PyShmMemory_setgid(PyShmObj *self, PyObject *args)
+{
+    long newgid, oldgid;
+
+    if (!PyArg_ParseTuple(args, "l", &newgid))
+	    return NULL;
+    refresh_memory_status(self);
+    oldgid = (long)self->ds.shm_perm.gid;
+    self->ds.shm_perm.gid = (gid_t)newgid;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.gid = (gid_t)oldgid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setperm(int Perm)
+*/
+
+static PyObject *
+PyShmMemory_setperm(PyShmObj *self, PyObject *args)
+{
+    long newmode, oldmode;
+
+    if (!PyArg_ParseTuple(args, "l", &newmode))
+        return NULL;
+    refresh_memory_status(self);
+    newmode &= 0777;	/* permission bits only */
+    oldmode = (mode_t)self->ds.shm_perm.mode;
+    self->ds.shm_perm.mode ^= 0777;
+    self->ds.shm_perm.mode |= (mode_t)newmode;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.mode = (mode_t)oldmode;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setuid(int Uid)
+*/
+
+static PyObject *
+PyShmMemory_setuid(PyShmObj *self, PyObject *args)
+{
+    long newuid, olduid;
+
+    if (!PyArg_ParseTuple(args, "l", &newuid))
+        return NULL;
+    refresh_memory_status(self);
+    olduid = (long)self->ds.shm_perm.uid;
+    /* v1.1 - fixed typo that set the group id rather than the user id */
+    self->ds.shm_perm.uid = (uid_t)newuid;
+    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
+        self->ds.shm_perm.uid = (uid_t)olduid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- write(string Data [, int Offset=0])
+*/
+
+/* Write a string to the shared memory segment. */
+
+static PyObject *
+PyShmMemory_write(PyShmObj *self, PyObject *args)
+{
+    char *data;
+    unsigned long n, offset = 0;
+    char buf[128];
+    char *addr;
+
+    if (!PyArg_ParseTuple(args, "s#|l", &data, &n, &offset))
+        return NULL;
+    refresh_memory_status(self);
+    if (self->addr == NULL) {
+        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
+        return NULL;
+    }
+    if (self->mode & SHM_RDONLY) {
+        PyErr_SetString(PyShm_Error,
+                "can't write on read-only attached memory");
+        return NULL;
+    }
+    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
+        sprintf(buf, "write() argument%s exceed%s upper memory limit",
+            offset ? "s" : "", offset ? "" : "s");
+        PyErr_SetString(PyShm_Error, buf);
+        return NULL;
+    }
+    addr = (void *)((unsigned long)self->addr + offset);
+    memcpy(addr, data, n);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of methods for shared memory objects */
+
+static PyMethodDef memory_methods[] = {
+    {"attach",	(PyCFunction)PyShmMemory_attach,	1,
+     "attach([int Addr=0 [,int How=0]]) --> None | except shm.error"},
+    {"detach",	(PyCFunction)PyShmMemory_detach,	0,
+     "detach() --> None | except shm.error"},
+    {"read",	(PyCFunction)PyShmMemory_read,		1,
+     "read(int Nbytes [,int Offset=0]) --> string | except shm.error"},
+    {"setgid",	(PyCFunction)PyShmMemory_setgid,	1,
+     "setgid(int Gid) --> None | except shm.error"},
+    {"setperm",	(PyCFunction)PyShmMemory_setperm,	1,
+     "setperm(int Perm) --> None | except shm.error"},
+    {"setuid",	(PyCFunction)PyShmMemory_setuid,	1,
+     "setuid(int Uid) --> None | except shm.error"},
+    {"write",	(PyCFunction)PyShmMemory_write,		1,
+     "write(string Data [,int Offset=0]) --> None | except shm.error"},
+    {NULL,	NULL}		/* sentinel */
+};
+
+#define OFF(x)	offsetof(PyShmMemoryObject, x)
+#define OFF1(x)	OFF(ds) + offsetof(struct shmid_ds, x)
+#define OFF2(x)	OFF1(shm_perm) + offsetof(struct ipc_perm, x)
+
+/* List of members for shared memory objects */
+
+/* Note: member types are set in the initshm function.
+   Members which need separate processing are:
+   - addr --> it is not part of the shmid_ds structure
+   - attached --> function depending on addr
+   - nattch  --> system dependent declaration in shmid_ds (unknown type)
+   - perm --> return permission (lower 9) bits only of ds.shm_perm.mode
+*/
+
+static struct memberlist memory_memberlist[] = {
+    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
+    {"cpid",	T_INT,	OFF1(shm_cpid),		RO},	/* 1  (pid_t)  */
+    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 2  (uid_t)  */
+    {"key", T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 3  (key_t)  */
+    {"lpid",	T_INT,	OFF1(shm_lpid),		RO},	/* 4  (pid_t)  */
+    {"shmid",	T_INT,	OFF(shmid),		RO},	/* 5  (int)    */
+    {"size",	T_INT,	OFF1(shm_segsz),	RO},	/* 6  (int)    */
+    {"gid",	T_INT,	OFF2(gid),		RO},	/* 7  (gid_t)  */
+    {"uid",	T_INT,	OFF2(uid),		RO},	/* 8  (uid_t)  */
+    /* The following members are implemented without this table */
+    {"addr",	T_INT,	0,			RO},	/* 9  (void *) */
+    {"attached",T_INT,	0,			RO},	/* 10  (int)    */
+    {"nattch",	T_INT,	0,			RO},	/* 11 sys.dep. */
+    {"perm",	T_INT,	0,			RO},	/* 12 (mode_t) */
+    {NULL}			/* sentinel */
+};
+
+#undef OFF
+#undef OFF1
+#undef OFF2
+
+static void
+PyShmMemory_dealloc(PyShmObj *self)
+{
+    /* del shm_dict[key], ignore if it fails */
+    if (PyDict_DelItem(shm_dict, PyInt_FromLong(self->shmid)) == -1)
+        PyErr_Clear();
+    /* all references in the current process to the shared
+       memory segment are lost, so if attached, detach it.
+       XXX: This is not true when Python is embedded.
+
+    if (self->addr != NULL) {
+	shmdt(self->addr);
+    }
+    */
+    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
+    PyObject_Del(self);
+}
+
+static PyObject *
+PyShmMemory_getattr(PyShmObj *self, char *name)
+{
+    PyObject *res;
+
+    res = Py_FindMethod(memory_methods, (PyObject *)self, name);
+    if (res != NULL)
+        return res;
+    PyErr_Clear();
+    refresh_memory_status(self);
+    if (strcmp(name, "attached") == 0)
+        return PyInt_FromLong((self->addr == NULL) ? 0 : 1);
+    if (strcmp(name, "addr") == 0) {
+        if (self->addr != NULL)
+            return PyInt_FromLong((unsigned long)self->addr);
+        else {
+            Py_INCREF(Py_None);
+            return Py_None;
+        }
+    }
+    if (strcmp(name, "nattch") == 0)
+        return PyInt_FromLong(self->ds.shm_nattch);
+    if (strcmp(name, "perm") == 0)
+        return PyInt_FromLong(self->ds.shm_perm.mode & 0777);
+    return PyMember_Get((char *)self, memory_memberlist, name);
+}
+
+static PyObject *
+PyShmMemory_repr(PyShmObj *self, char *name)
+{
+    char buf[100];
+    char buf2[20];
+
+    refresh_memory_status(self);
+    if (self->addr == NULL)
+        sprintf(buf2, "None");
+    else
+        /* v 1.1 - changed format from %lx to %p. */
+        /* v 1.1.2 - changed %u to %zu. */
+        sprintf(buf2, "0x%p", self->addr);
+    sprintf(buf, "<%s shared memory object, id=%d, size=%zu, addr=%s>",
+	    (self->addr == NULL) ? "detached" : (self->mode & SHM_RDONLY) ?
+	    "attached RO" : "attached R/W",
+	    self->shmid,
+	    self->ds.shm_segsz,
+	    buf2);
+    return PyString_FromString(buf);
+}
+
+/* Type object for shared memory objects */
+
+static PyTypeObject PyShmMemory_Type = {
+    PyObject_HEAD_INIT(&PyType_Type)
+    0,					/*ob_size*/
+    "shared memory",			/*tp_name*/
+    sizeof(PyShmObj),			/*tp_size*/
+    0,					/*tp_itemsize*/
+    /* methods */
+    (destructor)PyShmMemory_dealloc,	/*tp_dealloc*/
+    0,					/*tp_print*/
+    (getattrfunc)PyShmMemory_getattr,	/*tp_getattr*/
+    0,					/*tp_setattr*/
+    0,					/*tp_compare*/
+    (reprfunc)PyShmMemory_repr,		/*tp_repr*/
+    0,					/*tp_as_number*/
+    0,					/*tp_as_sequence*/
+    0,					/*tp_as_mapping*/
+};
+
+/************************************************************/
+/*                     Semaphore Objects                    */
+/************************************************************/
+
+/* This is to check the validity of a Python semaphore object */
+
+static int
+check_semaphore_identity(PyShmSemObj *o)
+{
+    int new_semid;
+    int old_semid = o->semid;
+    unsigned short old_nsems = o->ds.sem_nsems;
+    key_t old_key = o->ds.sem_perm.IPC_PERM_KEY_NAME;
+    semctl_arg arg;
+
+    if (old_key != IPC_PRIVATE) {
+        new_semid = semget(old_key, 0, 0);
+        if (new_semid != old_semid)
+            return 0;
+    }
+    else
+        new_semid = old_semid;
+    arg.buf = &(o->ds);
+    if ((semctl(new_semid, 0, IPC_STAT, arg) != -1) &&
+        (old_nsems == o->ds.sem_nsems) &&
+        (old_key == o->ds.sem_perm.IPC_PERM_KEY_NAME))
+        return 1;
+    return 0;
+}
+
+/* Convenience macro for updating the semaphore data status structure */
+
+#define refresh_semaphore_status(o)					\
+    if (!check_semaphore_identity(o)) {					\
+        PyErr_SetString(PyShm_Error,					\
+                "can't access semaphore");			\
+	return NULL;							\
+    }
+
+/*
+-- P()
+*/
+
+static PyObject *
+PyShmSemaphore_P(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = -1;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- V()
+*/
+
+static PyObject *
+PyShmSemaphore_V(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = 1;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- Z()
+*/
+
+static PyObject *
+PyShmSemaphore_Z(PyShmSemObj *self, PyObject *args)
+{
+    struct sembuf op[1];
+    int res;
+
+    op[0].sem_num = 0;
+    op[0].sem_op = 0;
+    op[0].sem_flg = self->opflag;
+
+    if (!PyArg_NoArgs(args))
+        return NULL;
+    refresh_semaphore_status(self);
+    res = semop(self->semid, op, (size_t)1);
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setblocking(0|1)
+*/
+
+static PyObject *
+PyShmSemaphore_setblocking(PyShmSemObj *self, PyObject *args)
+{
+    int block;
+
+    if (!PyArg_ParseTuple(args, "i", &block))
+        return NULL;
+    refresh_semaphore_status(self);
+    if (block)
+        self->opflag &= ~IPC_NOWAIT;
+    else
+        self->opflag |= IPC_NOWAIT;
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setgid(int Gid)
+*/
+
+static PyObject *
+PyShmSemaphore_setgid(PyShmSemObj *self, PyObject *args)
+{
+    long newgid, oldgid;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newgid))
+        return NULL;
+    refresh_semaphore_status(self);
+    oldgid = (long)self->ds.sem_perm.gid;
+    self->ds.sem_perm.gid = (gid_t)newgid;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.gid = (gid_t)oldgid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setperm(int Perm)
+*/
+
+static PyObject *
+PyShmSemaphore_setperm(PyShmSemObj *self, PyObject *args)
+{
+    long newmode, oldmode;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newmode))
+        return NULL;
+    refresh_semaphore_status(self);
+    newmode &= 0777;	/* permission bits only */
+    oldmode = (mode_t)self->ds.sem_perm.mode;
+    self->ds.sem_perm.mode ^= 0777;
+    self->ds.sem_perm.mode |= (mode_t)newmode;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.mode = (mode_t)oldmode;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setuid(int Uid)
+*/
+
+static PyObject *
+PyShmSemaphore_setuid(PyShmSemObj *self, PyObject *args)
+{
+    long newuid, olduid;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "l", &newuid))
+        return NULL;
+    refresh_semaphore_status(self);
+    olduid = (long)self->ds.sem_perm.uid;
+    /* v1.1 - fixed typo that set the group id rather than the user id */
+    self->ds.sem_perm.uid = (uid_t)newuid;
+    arg.buf = &(self->ds);
+    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
+        self->ds.sem_perm.uid = (uid_t)olduid;
+        return PyShm_Err();
+    }
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setundo(0|1)
+*/
+
+static PyObject *
+PyShmSemaphore_setundo(PyShmSemObj *self, PyObject *args)
+{
+    int undo;
+
+    if (!PyArg_ParseTuple(args, "i", &undo))
+        return NULL;
+    refresh_semaphore_status(self);
+    if (undo)
+        self->opflag |= SEM_UNDO;
+    else
+        self->opflag &= ~SEM_UNDO;
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- setval(int Value)
+*/
+
+static PyObject *
+PyShmSemaphore_setval(PyShmSemObj *self, PyObject *args)
+{
+    int value;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "i", &value))
+        return NULL;
+    refresh_semaphore_status(self);
+    arg.val = value;
+    if (semctl(self->semid, 0, SETVAL, arg) == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of methods for semaphore objects */
+
+static PyMethodDef semaphore_methods[] = {
+    {"P",		(PyCFunction)PyShmSemaphore_P,			0,
+     "P() --> None | except shm.error"},
+    {"V",		(PyCFunction)PyShmSemaphore_V,			0,
+     "V() --> None | except shm.error"},
+    {"Z",		(PyCFunction)PyShmSemaphore_Z,			0,
+     "Z() --> None | except shm.error"},
+    {"setblocking",	(PyCFunction)PyShmSemaphore_setblocking,	1,
+     "setblocking(0|1) --> None"},
+    {"setgid",		(PyCFunction)PyShmSemaphore_setgid,		1,
+     "setgid(int Gid) --> None | except shm.error"},
+    {"setperm",		(PyCFunction)PyShmSemaphore_setperm,		1,
+     "setperm(int Perm) --> None | except shm.error"},
+    {"setuid",		(PyCFunction)PyShmSemaphore_setuid,		1,
+     "setuid(int Uid) --> None | except shm.error"},
+    {"setundo",		(PyCFunction)PyShmSemaphore_setundo,		1,
+     "setundo(0|1) --> None"},
+    {"setval",		(PyCFunction)PyShmSemaphore_setval,		1,
+     "setval(int Value) --> None | except shm.error"},
+    {NULL,	NULL}		/* sentinel */
+};
+
+#define OFF(x)	offsetof(PyShmSemaphoreObject, x)
+#define OFF1(x)	OFF(ds) + offsetof(struct semid_ds, x)
+#define OFF2(x)	OFF1(sem_perm) + offsetof(struct ipc_perm, x)
+
+/* List of members for semaphore objects */
+
+/* Note: member types are set in the initshm function.
+   Members which need separate processing are:
+   - val, lpid, ncnt, zcnt --> in kernel memory, not accessible from a process
+   - perm --> return permission (lower 9) bits only of ds.sem_perm.mode
+   - blocking --> in opflags
+*/
+
+static struct memberlist semaphore_memberlist[] = {
+    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
+    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 1  (uid_t)  */
+    {"key",	    T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 2  (key_t)  */
+    {"semid",	T_INT,	OFF(semid),		RO},	/* 3  (int)    */
+    {"gid",	    T_INT,	OFF2(gid),		RO},	/* 4  (gid_t)  */
+    {"uid",	    T_INT,	OFF2(uid),		RO},	/* 5  (uid_t)  */
+    /* The following members are implemented without this table */
+    {"lpid",	T_INT,	0,			RO},	/* 6  (ushort) */
+    {"ncnt",	T_INT,	0,			RO},	/* 7  (ushort) */
+    {"perm",	T_INT,	0,			RO},	/* 8  (mode_t) */
+    {"val",	    T_INT,	0,			RO},	/* 9  (ushort) */
+    {"zcnt",	T_INT,	0,			RO},	/* 10 (ushort) */
+    {"blocking",T_INT,	0,			RO},	/* 11 (ushort) */
+    {NULL}			/* sentinel */
+};
+
+#undef OFF
+#undef OFF1
+#undef OFF2
+
+static void
+PyShmSemaphore_dealloc(PyShmSemObj *self)
+{
+    /* del sem_dict[key], ignore if it fails */
+    if (PyDict_DelItem(sem_dict, PyInt_FromLong(self->semid)) == -1)
+        PyErr_Clear();
+    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
+    PyObject_Del(self);
+}
+
+static PyObject *
+PyShmSemaphore_getattr(PyShmSemObj *self, char *name)
+{
+    PyObject *res;
+
+    res = Py_FindMethod(semaphore_methods, (PyObject *)self, name);
+    if (res != NULL)
+        return res;
+    PyErr_Clear();
+    refresh_semaphore_status(self);
+    if (strcmp(name, "val") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETVAL, 0));
+    if (strcmp(name, "lpid") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETPID, 0));
+    if (strcmp(name, "ncnt") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETNCNT, 0));
+    if (strcmp(name, "zcnt") == 0)
+        return PyInt_FromLong(semctl(self->semid, 0, GETZCNT, 0));
+    if (strcmp(name, "perm") == 0)
+        return PyInt_FromLong(self->ds.sem_perm.mode & 0777);
+    /* v1.1 - added blocking */
+    if (strcmp(name, "blocking") == 0)
+        return PyInt_FromLong(self->opflag & IPC_NOWAIT ? 0 : 1);
+    return PyMember_Get((char *)self, semaphore_memberlist, name);
+}
+
+static PyObject *
+PyShmSemaphore_repr(PyShmSemObj *self, char *name)
+{
+    /* v1.1 - added blocking */
+    char buf[200];
+
+    refresh_semaphore_status(self);
+    sprintf(buf, "<semaphore object, id=%d, val=%d, ncnt=%d, zcnt=%d, blocking=%d>",
+            self->semid,
+            semctl(self->semid, 0, GETVAL, 0),
+            semctl(self->semid, 0, GETNCNT, 0),
+            semctl(self->semid, 0, GETZCNT, 0),
+            self->opflag & IPC_NOWAIT ? 0 : 1);
+    return PyString_FromString(buf);
+}
+
+/* Type object for semaphore objects */
+
+static PyTypeObject PyShmSemaphore_Type = {
+    PyObject_HEAD_INIT(&PyType_Type)
+    0,					/*ob_size*/
+    "semaphore",			/*tp_name*/
+    sizeof(PyShmSemObj),		/*tp_size*/
+    0,					/*tp_itemsize*/
+    /* methods */
+    (destructor)PyShmSemaphore_dealloc,	/*tp_dealloc*/
+    0,					/*tp_print*/
+    (getattrfunc)PyShmSemaphore_getattr,/*tp_getattr*/
+    0,					/*tp_setattr*/
+    0,					/*tp_compare*/
+    (reprfunc)PyShmSemaphore_repr,	/*tp_repr*/
+    0,					/*tp_as_number*/
+    0,					/*tp_as_sequence*/
+    0,					/*tp_as_mapping*/
+};
+
+/************************************************************/
+/*                      Module Interface                    */
+/************************************************************/
+
+/*
+-- ftok(string Path, int ProjId) -> int
+*/
+
+/* Compute a key by using the system's ftok algorithm */
+
+static PyObject *
+PyShm_ftok(PyObject *self, PyObject *args)
+{
+    char *path;
+    char id;
+    key_t key;
+
+    if (!PyArg_ParseTuple(args, "sb", &path, &id))
+        return NULL;
+    key = ftok(path, id);
+    return PyInt_FromLong((long)key);
+}
+
+/*
+-- getshmid(int Key) --> int | except KeyError
+*/
+
+/* Return a shared memory segment id from a given key */
+
+static PyObject *
+PyShm_getshmid(PyObject *self, PyObject *args)
+{
+    long key;
+    int shmid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    shmid = shmget((key_t)key, 0, 0);
+    if (shmid == -1) {
+        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
+        return NULL;
+    }
+    return PyInt_FromLong(shmid);
+}
+
+/*
+-- memory_haskey(int Key) --> int
+*/
+
+/* Check whether there is a shared memory segment with the given key */
+
+static PyObject *
+PyShm_memory_haskey(PyObject *self, PyObject *args)
+{
+    long key;
+    int shmid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    shmid = shmget((key_t)key, 0, 0);
+    return PyInt_FromLong((shmid == -1) ? 0 : 1);
+}
+
+/*
+-- memory(int Shmid) --> object | except shm.error
+*/
+
+/* Get an existing shared memory segment and return it as a python object. */
+
+static PyObject *
+PyShm_memory(PyObject *self, PyObject *args)
+{
+    int shmid;
+    PyShmObj *o;
+    PyObject *keyo;
+
+    if (!PyArg_ParseTuple(args, "i", &shmid))
+        return NULL;
+    keyo = PyInt_FromLong(shmid);
+    /* get the object from the dictionary */
+    if (PyMapping_HasKey(shm_dict, keyo)) {
+        o = (PyShmObj *)PyDict_GetItem(shm_dict, keyo);
+        Py_INCREF(o);
+    }
+    else {
+        /* not found, create it */
+        if ((o = PyObject_NEW(PyShmObj, &PyShmMemory_Type)) == NULL)
+            return NULL;
+        o->shmid = shmid;
+        o->addr = NULL;
+        o->mode = 0;
+        /* shm_dict[shmid] = o */
+        if (PyDict_SetItem(shm_dict, keyo, (PyObject *)o) == -1) {
+            Py_DECREF(o);
+            PyErr_SetString(PyShm_Error, "can't initialize shared memory object");
+            return NULL;
+        }
+        Py_DECREF(o);	/* the owned reference in shm_dict doesn't count! */
+    }
+    /* v1.1 - plugged memory leak */
+    Py_DECREF(keyo);
+    /* set up the status data */
+    if (shmctl(o->shmid, IPC_STAT, &(o->ds)) == -1) {
+        Py_DECREF(o);
+        PyErr_SetString(PyShm_Error, "can't access shared memory segment");
+        return NULL;
+    }
+    return (PyObject *)o;
+}
+
+/*
+-- create_memory(int Key, int Size [,int Perm=0666]) --> object
+*/
+
+/* Create a new shared memory segment. */
+
+static PyObject *
+PyShm_create_memory(PyObject *self, PyObject *args)
+{
+    long key;
+    int size, shmid;
+    int perm = 0666;	/* Default permission is -rw-rw-rw- */
+    PyObject *py_shmid;
+    PyObject *memory;
+
+    if (!PyArg_ParseTuple(args, "li|i", &key, &size, &perm))
+        return NULL;
+    shmid = shmget((key_t)key, size, perm | IPC_CREAT | IPC_EXCL);
+    if (shmid == -1)
+        return PyShm_Err();
+    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
+    py_shmid = Py_BuildValue("(i)", shmid);
+    memory = PyShm_memory(self, py_shmid);
+    Py_DECREF(py_shmid);
+
+    return memory;
+}
+
+/*
+-- remove_memory(int Shmid) --> None | except shm.error
+*/
+
+/* Remove an existing shared memory segment. */
+
+static PyObject *
+PyShm_remove_memory(PyObject *self, PyObject *args)
+{
+    int shmid, res;
+
+    if (!PyArg_ParseTuple(args, "i", &shmid))
+        return NULL;
+    res = shmctl(shmid, IPC_RMID, 0);	/* remove it */
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/*
+-- getsemid(int Key) --> int | except KeyError
+*/
+
+/* Return a semaphore id from a given key */
+
+static PyObject *
+PyShm_getsemid(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    semid = semget((key_t)key, 0, 0);
+    if (semid == -1) {
+        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
+        return NULL;
+    }
+    return PyInt_FromLong(semid);
+}
+
+/*
+-- semaphore_haskey(int Key) --> int
+*/
+
+/* Check whether there is a semaphore with the given key */
+
+static PyObject *
+PyShm_semaphore_haskey(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+
+    if (!PyArg_ParseTuple(args, "l", &key))
+        return NULL;
+    semid = semget((key_t)key, 0, 0);
+    return PyInt_FromLong((semid == -1) ? 0 : 1);
+}
+
+/*
+-- semaphore(int Semid) --> object
+*/
+
+/* Get an existing semaphore and return it as a python object. */
+
+static PyObject *
+PyShm_semaphore(PyObject *self, PyObject *args)
+{
+    int semid;
+    PyShmSemObj *o;
+    PyObject *keyo;
+    semctl_arg arg;
+
+    if (!PyArg_ParseTuple(args, "i", &semid))
+        return NULL;
+    keyo = PyInt_FromLong(semid);
+    /* get the object from the dictionary */
+    if (PyMapping_HasKey(sem_dict, keyo)) {
+        o = (PyShmSemObj *)PyDict_GetItem(sem_dict, keyo);
+        Py_INCREF(o);
+    }
+    else {
+        /* not found, create it */
+        if ((o = PyObject_NEW(PyShmSemObj, &PyShmSemaphore_Type)) == NULL)
+            return NULL;
+        o->semid = semid;
+        o->opflag = 0;
+        /* sem_dict[semid] = o */
+        if (PyDict_SetItem(sem_dict, keyo, (PyObject *)o) == -1) {
+            Py_DECREF(o);
+            PyErr_SetString(PyShm_Error, "can't initialize semaphore object");
+            return NULL;
+        }
+        Py_DECREF(o);	/* the owned reference in sem_dict doesn't count! */
+    }
+    /* v1.1 - plugged memory leak */
+    Py_DECREF(keyo);
+    /* set up the status data */
+    arg.buf = &(o->ds);
+    if (semctl(o->semid, 0, IPC_STAT, arg) == -1) {
+        Py_DECREF(o);
+        PyErr_SetString(PyShm_Error, "can't access semaphore");
+        return NULL;
+    }
+    return (PyObject *)o;
+}
+
+/*
+-- create_semaphore(int Key, [,int Value=1 [,int Perm=0666]]) --> object
+*/
+
+/* Create a new semaphore. */
+
+static PyObject *
+PyShm_create_semaphore(PyObject *self, PyObject *args)
+{
+    long key;
+    int semid;
+    int value = 1;
+    int perm = 0666;	/* Default permission is -rw-rw-rw- */
+    semctl_arg arg;
+    PyObject *py_shmid;
+    PyObject *semaphore;
+
+    if (!PyArg_ParseTuple(args, "l|ii", &key, &value, &perm))
+        return NULL;
+    semid = semget((key_t)key, 1, perm | IPC_CREAT | IPC_EXCL);
+    arg.val = value;
+    if (!((semid != -1) && (semctl(semid, 0, SETVAL, arg) != -1)))
+	   return PyShm_Err();
+    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
+    py_shmid = Py_BuildValue("(i)", semid);
+    semaphore = PyShm_semaphore(self, py_shmid);
+    Py_DECREF(py_shmid);
+
+    return semaphore;
+}
+
+/*
+-- remove_semaphore(int Semid) --> None | except shm.error
+*/
+
+/* Remove an existing semaphore. */
+
+static PyObject *
+PyShm_remove_semaphore(PyObject *self, PyObject *args)
+{
+    int semid, res;
+
+    if (!PyArg_ParseTuple(args, "i", &semid))
+        return NULL;
+    res = semctl(semid, 0, IPC_RMID, 0);	/* remove it */
+    if (res == -1)
+        return PyShm_Err();
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
+/* List of functions exported by this module. */
+
+static PyMethodDef PyShm_methods[] = {
+    {"create_memory",		PyShm_create_memory,	1,
+     "create_memory(int Key, int Size [,int Perm=0666]) --> object | except shm.error"},
+    {"create_semaphore",	PyShm_create_semaphore,	1,
+     "create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object | except shm.error"},
+    {"ftok",			PyShm_ftok,		1,
+     "ftok(string Path, int ProjId) --> int | except shm.error"},
+    {"getsemid",		PyShm_getsemid,		1,
+     "getsemid(int Key) --> int | except KeyError"},
+    {"getshmid",		PyShm_getshmid,		1,
+     "getshmid(int Key) --> int | except KeyError"},
+    {"memory_haskey",		PyShm_memory_haskey,	1,
+     "memory_haskey(int Key) --> int"},
+    {"memory",			PyShm_memory,		1,
+     "memory(int Shmid) --> object | except shm.error"},
+    {"semaphore",		PyShm_semaphore,	1,
+     "semaphore(int Semid) --> object | except shm.error"},
+    {"semaphore_haskey",	PyShm_semaphore_haskey,	1,
+     "semaphore_haskey(int Key) --> int"},
+    {"remove_memory",		PyShm_remove_memory,	1,
+     "remove_memory(int Shmid) --> None | except shm.error"},
+    {"remove_semaphore",	PyShm_remove_semaphore,	1,
+     "remove_semaphore(int Semid) --> None | except shm.error"},
+    {NULL,			NULL}		/* Sentinel */
+};
+
+
+/* Initialize this module */
+
+/* This is for inserting constants in the module's dictionary */
+
+static void
+insint(PyObject *d, char *name, int value)
+{
+	PyObject *v = PyInt_FromLong((long) value);
+	if (!v || PyDict_SetItemString(d, name, v))
+		Py_FatalError("can't initialize shm module");
+
+	Py_DECREF(v);
+}
+
+/* This is to set up the type of shared memory/semaphore object members */
+
+static void
+set_member_type(struct memberlist *sxm_memberlist,
+                int index,                          /* index in memberlist */
+                int typesize                        /* sizeof(member_type) */
+               )
+{
+    int t;
+
+    if (typesize == sizeof(char))
+        t = T_UBYTE;
+    else if (typesize == sizeof(short))
+        t = T_USHORT;
+    else if (typesize == sizeof(int))
+        t = T_UINT;
+    else if (typesize == sizeof(long))
+        t = T_ULONG;
+    else
+        Py_FatalError("can't initialize shm module");
+    sxm_memberlist[index].type = t;
+};
+
+void
+initshm(void)
+{
+    PyObject *m, *d;
+
+    m = Py_InitModule("shm", PyShm_methods);
+    d = PyModule_GetDict(m);
+    PyShm_Error = PyString_FromString("shm.error");
+    if (PyShm_Error == NULL ||
+	PyDict_SetItemString(d, "error", PyShm_Error) != 0)
+	    Py_FatalError("can't define shm.error");
+    if (PyDict_SetItemString(d, "__doc__", PyString_FromString
+			     ("Interface to System V shared memory IPC")) != 0)
+        Py_FatalError("can't define shm.__doc__");
+    if ((shm_dict = PyDict_New()) == NULL || (sem_dict = PyDict_New()) == NULL)
+	   Py_FatalError("can't initialize shm module");
+
+    /* initialize the machine dependent types in memory_memberlist */
+    set_member_type(memory_memberlist, 0, sizeof(gid_t));	/* cgid   */
+    set_member_type(memory_memberlist, 1, sizeof(pid_t));	/* cpid   */
+    set_member_type(memory_memberlist, 2, sizeof(uid_t));	/* cuid   */
+    set_member_type(memory_memberlist, 3, sizeof(key_t));	/* key    */
+    set_member_type(memory_memberlist, 4, sizeof(pid_t));	/* lpid   */
+    set_member_type(memory_memberlist, 5, sizeof(int));		/* shmid  */
+    set_member_type(memory_memberlist, 6, sizeof(int));		/* size   */
+    set_member_type(memory_memberlist, 7, sizeof(gid_t));	/* gid    */
+    set_member_type(memory_memberlist, 8, sizeof(uid_t));	/* uid    */
+
+    /* initialize the machine dependent types in semaphore_memberlist */
+    set_member_type(semaphore_memberlist, 0, sizeof(gid_t));	/* cgid   */
+    set_member_type(semaphore_memberlist, 1, sizeof(uid_t));	/* cuid   */
+    set_member_type(semaphore_memberlist, 2, sizeof(key_t));	/* key    */
+    set_member_type(semaphore_memberlist, 3, sizeof(int));	/* semid  */
+    set_member_type(semaphore_memberlist, 4, sizeof(gid_t));	/* gid    */
+    set_member_type(semaphore_memberlist, 5, sizeof(uid_t));	/* uid    */
+
+    /* relevant constants for this module; the others are useless here */
+    insint(d, "IPC_PRIVATE", IPC_PRIVATE);
+    insint(d, "SHM_RDONLY", SHM_RDONLY);
+    insint(d, "SHM_RND", SHM_RND);
+#ifdef SHMLBA
+    insint(d, "SHMLBA", SHMLBA);
+#endif
+#ifdef SEM_A
+    insint(d, "SEM_A", SEM_A);
+#endif
+#ifdef SEM_R
+    insint(d, "SEM_R", SEM_R);
+#endif
+#ifdef SHM_R
+    insint(d, "SHM_R", SHM_R);
+#endif
+#ifdef SHM_W
+    insint(d, "SHM_W", SHM_W);
+#endif
+}
=== setup.py
==================================================================
--- setup.py	(revision 636)
+++ setup.py	(patch 0.8.9.3 level 1)
@@ -127,14 +127,14 @@
 	uis = [x for x in os.listdir("portato/gui/templates/ui/") if x.endswith(".ui")]
 	return [os.path.join("portato/gui/templates/ui",x) for x in uis]
 
-packages = ["portato", "portato.gui", "portato.plugins", "portato.backend", "portato.backend.portage", "portato.backend.catapult", "portato.shm"]
-ext_modules = [Extension("portato.shm.shm", ["shm/shmmodule.c"], define_macros = MacrosAndDefines, extra_compile_args=["-fPIC"])]
+packages = ["portato", "portato.gui", "portato.plugins", "portato.backend", "portato.backend.portage", "portato.backend.catapult", "portato._shm"]
+ext_modules = [Extension("portato._shm.shm", ["_shm/shmmodule.c"], define_macros = MacrosAndDefines, extra_compile_args=["-fPIC"])]
 data_files = [
 		(ICON_DIR, ["icons/portato-icon.png"]), 
 		#(PLUGIN_DIR, plugin_list("shutdown", "resume_loop")), 
 		(DATA_DIR, ["plugin.xsd"])]
 cmdclass = {}
-package_dir = {"portato.shm" : "shm"}
+package_dir = {"portato._shm" : "_shm"}
 
 if "gtk" in FRONTENDS:
 	packages.append("portato.gui.gtk")
=== portato/gui/gtk/windows.py
==================================================================
--- portato/gui/gtk/windows.py	(revision 636)
+++ portato/gui/gtk/windows.py	(patch 0.8.9.3 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gtk/windows.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006-2007 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -37,7 +37,7 @@
 from .views import LogView, HighlightView, InstalledOnlyView
 from .dialogs import (blocked_dialog, changed_flags_dialog, io_ex_dialog,
 		nothing_found_dialog, queue_not_empty_dialog, remove_deps_dialog,
-		remove_queue_dialog, unmask_dialog)
+		remove_queue_dialog, remove_updates_dialog, unmask_dialog)
 
 class AboutWindow (AbstractDialog):
 	"""A window showing the "about"-informations."""
@@ -304,23 +304,37 @@
 			"browserEdit"		: ("browserCmd", "GUI")
 			}
 
-	def __init__ (self, parent, cfg, set_console_font):
+	# the mappings for the tabpos combos
+	tabpos = {
+			1 : gtk.POS_TOP,
+			2 : gtk.POS_BOTTOM,
+			3 : gtk.POS_LEFT,
+			4 : gtk.POS_RIGHT
+			}
+
+	def __init__ (self, parent, cfg, console_fn, linkbtn_fn, tabpos_fn):
 		"""Constructor.
 
 		@param parent: parent window
 		@type parent: gtk.Window
 		@param cfg: configuration object
 		@type cfg: gui_helper.Config
-		@param set_console_font: function to call to set the console font
-		@type set_console_font: function(string)"""
+		@param console_fn: function to call to set the console font
+		@type console_fn: function(string)
+		@param linkbtn_fn: function to call to set the linkbutton behavior
+		@type linkbtn_fn: function(string)
+		@param tabpos_fn: function to call to set the tabposition of the notebooks
+		@type tabpos_fn: function(gtk.ComboBox,int)"""
 		
 		AbstractDialog.__init__(self, parent)
 
 		# our config
 		self.cfg = cfg
 
-		# the console font setter
-		self.set_console_font = set_console_font
+		# the setter functions
+		self.console_fn = console_fn
+		self.linkbtn_fn = linkbtn_fn
+		self.tabpos_fn = tabpos_fn
 		
 		# set the bg-color of the hint
 		hintEB = self.tree.get_widget("hintEB")
@@ -348,6 +362,19 @@
 		self.consoleFontBtn = self.tree.get_widget("consoleFontBtn")
 		self.consoleFontBtn.set_font_name(self.cfg.get("consolefont", section = "GTK"))
 
+		# the comboboxes
+		self.systemTabCombo = self.tree.get_widget("systemTabCombo")
+		self.pkgTabCombo = self.tree.get_widget("packageTabCombo")
+
+		for c in (self.systemTabCombo, self.pkgTabCombo):
+			m = c.get_model()
+			m.clear()
+			for i in (_("Top"), _("Bottom"), _("Left"), _("Right")):
+				m.append((i,))
+
+		self.systemTabCombo.set_active(int(self.cfg.get("systemTabPos", section = "GTK"))-1)
+		self.pkgTabCombo.set_active(int(self.cfg.get("packageTabPos", section = "GTK"))-1)
+
 		self.window.show_all()
 
 	def _save(self):
@@ -367,9 +394,17 @@
 
 		font = self.consoleFontBtn.get_font_name()
 		self.cfg.set("consolefont", font, section = "GTK")
-		self.set_console_font(font)
+		self.console_fn(font)
+
+		pkgPos = self.pkgTabCombo.get_active()+1
+		sysPos = self.systemTabCombo.get_active()+1
+
+		self.cfg.set("packageTabPos", str(pkgPos), section = "GTK")
+		self.cfg.set("systemTabPos", str(sysPos), section = "GTK")
+
+		self.tabpos_fn(map(self.tabpos.get, (pkgPos, sysPos)))
 		
-		gtk.link_button_set_uri_hook(lambda btn, x: get_listener().send_cmd([self.cfg.get("browserCmd", section = "GUI"), btn.get_uri()]))
+		self.linkbtn_fn(self.cfg.get("browserCmd", section="GUI"))
 
 	def cb_ok_clicked(self, button):
 		"""Saves, writes to config-file and closes the window."""
@@ -417,12 +452,13 @@
 		self.maskedLabel = self.tree.get_widget("maskedLabel")
 
 		# labels
-		generalEB = self.tree.get_widget("generalEB")
-		generalEB.modify_bg(gtk.STATE_NORMAL, gtk.gdk.color_parse("#FFFFFF"))
+		generalVB = self.tree.get_widget("generalVB")
+		generalVB.modify_bg(gtk.STATE_NORMAL, gtk.gdk.color_parse("#FFFFFF"))
 		
 		self.nameLabel = self.tree.get_widget("nameLabel")
 		self.descLabel = self.tree.get_widget("descLabel")
 		self.overlayLabel = self.tree.get_widget("overlayLabel")
+		self.licenseLabel = self.tree.get_widget("licenseLabel")
 		self.overlayLL = self.tree.get_widget("overlayLabelLabel")
 		self.linkBox = self.tree.get_widget("linkBox")
 		self.notInSysLabel = self.tree.get_widget("notInSysLabel")
@@ -442,7 +478,7 @@
 		self.changelogView = self.tree.get_widget("changelogScroll").get_child()
 		self.filesView = self.tree.get_widget("filesScroll").get_child()
 
-	def update (self, cp, queue = None, version = None, doEmerge = True, instantChange = False):
+	def update (self, cp, queue = None, version = None, doEmerge = True, instantChange = False, type = None):
 		"""Updates the table to show the contents for the package.
 		
 		@param cp: the selected package
@@ -454,13 +490,16 @@
 		@param doEmerge: if False, the emerge buttons are disabled
 		@type doEmerge: boolean
 		@param instantChange: if True the changed keywords are updated instantly
-		@type instantChange: boolean"""
+		@type instantChange: boolean
+		@param type: the type of the queue this package is in; if None there is no queue :)
+		@type type: string"""
 		
 		self.cp = cp # category/package
 		self.version = version # version - if not None this is used
 		self.queue = queue
 		self.doEmerge = doEmerge
 		self.instantChange = instantChange
+		self.type = type
 
 		# packages and installed packages
 		if not self.doEmerge:
@@ -497,7 +536,7 @@
 		self.descLabel.set_label(desc)
 
 		# overlay
-		if self.actual_package().is_overlay():
+		if pkg.is_overlay():
 			self.overlayLabel.set_label(pkg.get_overlay_path())
 			self.overlayLabel.show()
 			self.overlayLL.show()
@@ -505,6 +544,9 @@
 			self.overlayLabel.hide()
 			self.overlayLL.hide()
 
+		# license
+		self.licenseLabel.set_label(pkg.get_package_settings("LICENSE"))
+
 		# link
 		for c in self.linkBox.get_children():
 			self.linkBox.remove(c)
@@ -640,17 +682,18 @@
 
 	def _update_keywords (self, emerge, update = False):
 		if emerge:
+			type = "install" if not self.type else self.type
 			try:
 				try:
-					self.queue.append(self.actual_package().get_cpv(), unmerge = False, update = update)
+					self.queue.append(self.actual_package().get_cpv(), type = type, update = update)
 				except PackageNotFoundException, e:
 					if unmask_dialog(e[0]) == gtk.RESPONSE_YES:
-						self.queue.append(self.actual_package().get_cpv(), unmerge = False, unmask = True, update = update)
+						self.queue.append(self.actual_package().get_cpv(), type = type, unmask = True, update = update)
 			except BlockedException, e:
 				blocked_dialog(e[0], e[1])
 		else:
 			try:
-				self.queue.append(self.actual_package().get_cpv(), unmerge = True)
+				self.queue.append(self.actual_package().get_cpv(), type = "uninstall")
 			except PackageNotFoundException, e:
 				error(_("Package could not be found: %s"), e[0])
 				#masked_dialog(e[0])
@@ -752,9 +795,9 @@
 		self.actual_package().remove_new_use_flags()
 		self.actual_package().remove_new_masked()
 		self.actual_package().remove_new_testing()
-		self.versList.get_model().clear()
-		self.fill_vers_list()
-		self.cb_vers_list_changed()
+		self.versionCombo.get_model().clear()
+		self.fill_version_combo()
+		self.cb_version_combo_changed()
 		if self.instantChange:
 			self._update_keywords(True, update = True)
 		return True
@@ -762,13 +805,13 @@
 	def cb_package_emerge_clicked (self, button):
 		"""Callback for pressed emerge-button. Adds the package to the EmergeQueue."""
 		self._update_keywords(True)
-		self.main.notebook.set_current_page(self.main.QUEUE_PAGE)
+		self.main.sysNotebook.set_current_page(self.main.QUEUE_PAGE)
 		return True
 
 	def cb_package_unmerge_clicked (self, button):
 		"""Callback for pressed unmerge-button clicked. Adds the package to the UnmergeQueue."""
 		self._update_keywords(False)
-		self.main.notebook.set_current_page(self.main.QUEUE_PAGE)
+		self.main.sysNotebook.set_current_page(self.main.QUEUE_PAGE)
 		return True
 
 	def cb_testing_toggled (self, button):
@@ -842,7 +885,7 @@
 		flag = store[path][2]
 		pkg = self.actual_package()
 		
-		if flag in pkg.get_global_settings("USE_EXPAND").split(): # ignore expanded flags
+		if pkg.use_expanded(flag): # ignore expanded flags
 			return False
 
 		store[path][0] = not store[path][0]
@@ -944,7 +987,31 @@
 		self.termHB = self.tree.get_widget("termHB")
 		self.build_terminal()
 		
+		# notebooks
+		self.sysNotebook = self.tree.get_widget("systemNotebook")
+		self.pkgNotebook = self.tree.get_widget("packageNotebook")
+		self.set_notebook_tabpos(map(PreferenceWindow.tabpos.get, map(int, (self.cfg.get("packageTabPos", "GTK"), self.cfg.get("systemTabPos", "GTK")))))
+		
+		# the different scrolls
+		ebuildScroll = self.tree.get_widget("ebuildScroll")
+		ebuildScroll.add(HighlightView(lambda p: p.get_ebuild_path(), ["gentoo", "sh"]))
 
+		changelogScroll = self.tree.get_widget("changelogScroll")
+		changelogScroll.add(HighlightView(lambda p: os.path.join(p.get_package_path(), "ChangeLog"), ["changelog"]))
+
+		def show_files (p):
+			try:
+				for f in p.get_files():
+					yield " %s\n" % f
+			except IOError, e:
+				yield _("Error: %s") % e.strerror
+
+		filesScroll = self.tree.get_widget("filesScroll")
+		filesScroll.add(InstalledOnlyView(show_files))
+		
+		# table
+		self.packageTable = PackageTable(self)
+
 		# popups
 		self.queuePopup = Popup("queuePopup", self)
 		self.consolePopup = Popup("consolePopup", self)
@@ -972,36 +1039,16 @@
 		self.queueTree = GtkTree(self.queueList.get_model())
 		self.queue = EmergeQueue(console = self.console, tree = self.queueTree, db = self.db, title_update = self.title_update, threadClass = GtkThread)
 		
+		self.catList.get_selection().select_path(1)
+		self.pkgList.get_selection().select_path(0)
+		
 		# session
 		splash(_("Restoring Session"))
 		self.load_session()
 		
 		splash(_("Finishing startup"))
 		
-		# notebook
-		self.notebook = self.tree.get_widget("systemNotebook")
 		self.window.show_all()
-		
-		# the hidden stuff
-		ebuildScroll = self.tree.get_widget("ebuildScroll")
-		ebuildScroll.add(HighlightView(lambda p: p.get_ebuild_path(), ["gentoo", "sh"]))
-		ebuildScroll.hide_all()
-
-		changelogScroll = self.tree.get_widget("changelogScroll")
-		changelogScroll.add(HighlightView(lambda p: os.path.join(p.get_package_path(), "ChangeLog"), ["changelog"]))
-		changelogScroll.hide_all()
-
-		def show_files (p):
-			for f in p.get_files():
-				yield " %s\n" % f
-
-		filesScroll = self.tree.get_widget("filesScroll")
-		filesScroll.add(InstalledOnlyView(show_files))
-		filesScroll.hide_all()
-		
-		# table
-		self.packageTable = PackageTable(self)
-		self.packageTable.hide()
 	
 	def show_package (self, *args, **kwargs):
 		self.packageTable.update(*args, **kwargs)
@@ -1020,12 +1067,12 @@
 	def build_queue_list (self):
 		"""Builds the queue list."""
 
-		store = gtk.TreeStore(str,str)
+		store = gtk.TreeStore(str,str,bool)
 		
 		self.queueList.set_model(store)
 		
 		cell = gtk.CellRendererText()
-		col = gtk.TreeViewColumn(_("Queue"), cell, text = 0)
+		col = gtk.TreeViewColumn(_("Queue"), cell, markup = 0)
 		self.queueList.append_column(col)
 		
 		col = gtk.TreeViewColumn(_("Options"), cell, markup = 1)
@@ -1042,6 +1089,7 @@
 		self.catList.append_column(col)
 
 		self.fill_cat_store(store)
+		self.catList.get_selection().connect("changed", self.cb_cat_list_selection)
 
 	def fill_cat_store (self, store):
 		
@@ -1081,6 +1129,8 @@
 		
 		self.pkgList.append_column(col)
 
+		self.pkgList.get_selection().connect("changed", self.cb_pkg_list_selection)
+
 	def fill_pkg_store (self, store, name = None):
 		"""Fills a given ListStore with the packages in a category.
 		
@@ -1107,7 +1157,7 @@
 			self.session = Session("gtk_session.cfg")
 		except (OSError, IOError), e:
 			io_ex_dialog(e)
-			raise
+			return
 
 		def load_queue (merge, unmerge, oneshot):
 			def _load(q, **kwargs):
@@ -1125,10 +1175,32 @@
 			else:
 				return ("", "", "")
 
+		def load_paned (*pos):
+			pos = map(int, pos)
+			[x.set_position(p) for x,p in zip((self.vpaned, self.hpaned), pos)]
+
+		def save_paned ():
+			return [x.get_position() for x in (self.vpaned, self.hpaned)]
+
+		def save_selection ():
+			def _save(list):
+				return list.get_model().get_string_from_iter(list.get_selection().get_selected()[1])
+
+			return map(_save, (self.catList, self.pkgList))
+
+		def load_selection (*positions):
+			
+			def _load(list, pos):
+				pos = int(pos)
+				list.get_selection().select_path(pos)
+				list.scroll_to_cell(pos)
+
+			map(_load, (self.catList, self.pkgList), positions)
+
 		map(self.session.add_handler,[
 			([("width", "window"), ("height", "window")], lambda w,h: self.window.resize(int(w), int(h)), self.window.get_size),
-			([("vpanedpos", "window")], lambda p: self.vpaned.set_position(int(p)), self.vpaned.get_position),
-			([("hpanedpos", "window")], lambda p: self.hpaned.set_position(int(p)), self.hpaned.get_position),
+			([("vpanedpos", "window"), ("hpanedpos", "window")], load_paned, save_paned),
+			([("catsel", "window"), ("pkgsel", "window")], load_selection, save_selection),
 			([("merge", "queue"), ("unmerge", "queue"), ("oneshot", "queue")], load_queue, save_queue)
 			])
 
@@ -1163,6 +1235,13 @@
 		"""Is called when we want to jump to a specific package."""
 		self.show_package(cp, self.queue, version = version)
 
+	def set_uri_hook (self, browser):
+		gtk.link_button_set_uri_hook(lambda btn, x: get_listener().send_cmd([browser, btn.get_uri()]))
+
+	def set_notebook_tabpos (self, tabposlist):
+		self.pkgNotebook.set_tab_pos(tabposlist[0])
+		self.sysNotebook.set_tab_pos(tabposlist[1])
+
 	def title_update (self, title):
 		
 		def window_title_update (title):
@@ -1189,27 +1268,25 @@
 			else: 
 				title = (_("Console (%(title)s)") % {"title" : title})
 			
-			self.notebook.set_tab_label_text(self.termHB, title)
+			self.sysNotebook.set_tab_label_text(self.termHB, title)
 
 			return False
 
 		gobject.idle_add(__update, title)
 
-	def cb_cat_list_selection (self, view):
+	def cb_cat_list_selection (self, selection):
 		"""Callback for a category-list selection. Updates the package list with the packages in the category."""
 		# get the selected category
-		sel = view.get_selection()
-		store, it = sel.get_selected()
+		store, it = selection.get_selected()
 		if it:
 			self.selCatName = store.get_value(it, 0)
 			self.pkgList.get_model().clear()
 			self.fill_pkg_store(self.pkgList.get_model(), self.selCatName)
 		return True
 
-	def cb_pkg_list_selection (self, view):
+	def cb_pkg_list_selection (self, selection):
 		"""Callback for a package-list selection. Updates the package info."""
-		sel = view.get_selection()
-		store, it = sel.get_selected()
+		store, it = selection.get_selected()
 		if it:
 			cp = "%s/%s" % (store.get_value(it, 2), store.get_value(it, 1))
 			self.show_package(cp, self.queue)
@@ -1221,7 +1298,7 @@
 		self.fill_pkg_store(self.pkgList.get_model(), self.selCatName)
 		return True
 
-	def cb_row_activated (self, view, path, *args):
+	def cb_queue_row_activated (self, view, path, *args):
 		"""Callback for an activated row in the emergeQueue. Opens a package window."""
 		store = self.queueTree
 		if len(path) > 1:
@@ -1230,7 +1307,15 @@
 				package = store.get_value(iterator, store.get_cpv_column())
 				cat, name, vers, rev = system.split_cpv(package)
 				if rev != "r0": vers = vers+"-"+rev
-				self.show_package(cat+"/"+name, queue = self.queue, version = vers, instantChange = True, doEmerge = False)
+
+				if store.is_in_emerge(iterator):
+					type = "install"
+				elif store.is_in_unmerge(iterator):
+					type = "uninstall"
+				elif store.is_in_update(iterator):
+					type = "update"
+
+				self.show_package(cat+"/"+name, queue = self.queue, version = vers, instantChange = True, doEmerge = False, type = type)
 		return True
 	
 	def cb_queue_tooltip_queried (self, view, x, y, is_keyboard, tooltip):
@@ -1297,37 +1382,51 @@
 		tooltip.set_markup(string)
 		return string != ""
 
-	def cb_emerge_clicked (self, action):
-		"""Do emerge."""
+	def cb_execute_clicked (self, action):
+		"""Execute the current queue."""
 		
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
-		
 		if len(flags.newUseFlags) > 0:
 			changed_flags_dialog(_("use flags"))
-			flags.write_use_flags()
+			try:
+				flags.write_use_flags()
+			except IOError, e:
+				io_ex_dialog(e)
+				return True
 		
 		if len(flags.new_masked)>0 or len(flags.new_unmasked)>0 or len(flags.newTesting)>0:
 			debug("new masked: %s",flags.new_masked)
 			debug("new unmasked: %s", flags.new_unmasked)
 			debug("new testing: %s", flags.newTesting)
 			changed_flags_dialog(_("masking keywords"))
-			flags.write_masked()
-			flags.write_testing()
-			system.reload_settings()
+			try:
+				flags.write_masked()
+				flags.write_testing()
+			except IOError, e:
+				io_ex_dialog(e)
+				return True
+			else:
+				system.reload_settings()
+
+		model, iter = self.queueList.get_selection().get_selected()
+
+		if iter is None:
+			if model.iter_n_children(None) == 1: # only one queue there - take this as being selected
+				iter = model.get_iter_root()
+			else:
+				return False
+
+		self.sysNotebook.set_current_page(self.CONSOLE_PAGE)
 		
-		if not self.doUpdate:
-			self.queue.emerge(force=True)
+		# test which type of queue we have here
+		if self.queueTree.is_in_emerge(iter):
+			self.queue.emerge(force = True)
+		elif self.queueTree.is_in_unmerge(iter):
+			self.queue.unmerge(force = True)
 		else:
 			self.queue.update_world(force=True, newuse = self.cfg.get_boolean("newuse"), deep = self.cfg.get_boolean("deep"))
-			self.doUpdate = False
-		
-	def cb_unmerge_clicked (self, button):
-		"""Do unmerge."""
 
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
-		self.queue.unmerge(force=True)
 		return True
-
+		
 	def cb_update_clicked (self, action):
 		def __update():
 			
@@ -1335,15 +1434,15 @@
 				try:
 					try:
 						for pkg, old_pkg in updating:
-							self.queue.append(pkg.get_cpv(), unmask = False)
+							self.queue.append(pkg.get_cpv(), type = "update", unmask = False)
 					except PackageNotFoundException, e:
 						if unmask_dialog(e[0]) == gtk.RESPONSE_YES:
 							for pkg, old_pkg in updating:
-								self.queue.append(pkg.get_cpv(), unmask = True)
+								self.queue.append(pkg.get_cpv(), type = "update", unmask = True)
 
 				except BlockedException, e:
 					blocked_dialog(e[0], e[1])
-					self.queue.remove_children(self.queue.emergeIt)
+					self.queue.remove_children(self.queueTree.get_update_it())
 				
 				return False
 
@@ -1353,7 +1452,6 @@
 				updating = system.update_world(newuse = self.cfg.get_boolean("newuse"), deep = self.cfg.get_boolean("deep"))
 				debug("updating list: %s --> length: %s", [(x.get_cpv(), y.get_cpv()) for x,y in updating], len(updating))
 				gobject.idle_add(cb_idle_append, updating)
-				if len(updating): self.doUpdate = True
 			finally:
 				self.window.window.set_cursor(None)
 			
@@ -1363,29 +1461,35 @@
 
 	def cb_remove_clicked (self, button):
 		"""Removes a selected item in the (un)emerge-queue if possible."""
-		selected = self.queueList.get_selection()
+		model, iter = self.queueList.get_selection().get_selected()
 
-		if selected:
-			model, iter = selected.get_selected()
+		if iter:
+			parent = model.iter_parent(iter)
 			
-			if iter == None: return False
-
-			if not model.iter_parent(iter): # top-level
+			if self.queueTree.is_in_update(iter) and parent:
+				if remove_updates_dialog() == gtk.RESPONSE_YES:
+					self.queue.remove_with_children(self.queueTree.get_update_it())
+			
+			elif not parent: # top-level
 				if model.iter_n_children(iter) > 0: # and has children which can be removed :)
 					if remove_queue_dialog() == gtk.RESPONSE_YES :
-						self.queue.remove_children(iter)
-						self.doUpdate = False
+						self.queue.remove_with_children(iter)
+				else:
+					self.queue.remove(iter)
 			
-			elif model.iter_parent(model.iter_parent(iter)): # this is in the 3rd level => dependency
+			elif model.iter_parent(parent): # this is in the 3rd level => dependency
 				remove_deps_dialog()
 			else:
 				self.queue.remove_with_children(iter)
-				self.doUpdate = False
+
+				if model.iter_n_children(parent) == 0: # no more children left - remove queue too
+					self.queue.remove(parent)
 		
-		return True
+			return True
+		return False
 
 	def cb_sync_clicked (self, action):
-		self.notebook.set_current_page(self.CONSOLE_PAGE)
+		self.sysNotebook.set_current_page(self.CONSOLE_PAGE)
 		cmd = self.cfg.get("syncCommand")
 
 		if cmd != "emerge --sync":
@@ -1395,9 +1499,12 @@
 			self.queue.sync()
 
 	def cb_save_flags_clicked (self, action):
-		flags.write_use_flags()
-		flags.write_testing()
-		flags.write_masked()
+		try:
+			flags.write_use_flags()
+			flags.write_testing()
+			flags.write_masked()
+		except IOError, e:
+			io_ex_dialog(e)
 
 	@Window.watch_cursor
 	def cb_reload_clicked (self, action):
@@ -1424,7 +1531,7 @@
 					SearchWindow(self.window, packages, self.jump_to)
 
 	def cb_preferences_clicked (self, button):
-		PreferenceWindow(self.window, self.cfg, self.console.set_font_from_string)
+		PreferenceWindow(self.window, self.cfg, self.console.set_font_from_string, self.set_uri_hook, self.set_notebook_tabpos)
 		return True
 
 	def cb_about_clicked (self, button):
=== portato/gui/gtk/wrapper.py
==================================================================
--- portato/gui/gtk/wrapper.py	(revision 636)
+++ portato/gui/gtk/wrapper.py	(patch 0.8.9.3 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gtk/wrapper.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -12,9 +12,10 @@
 
 from __future__ import absolute_import
 
+import vte
 from gettext import lgettext as _
 from ..wrapper import Tree, Console
-import vte
+from ...helper import debug
 
 class GtkTree (Tree):
 	"""The implementation of the abstract tree."""
@@ -29,8 +30,9 @@
 
 		self.tree = tree
 		self.cpv_col = col
-		self.emergeIt = self.append(None, ["Emerge", ""])
-		self.unmergeIt = self.append(None, ["Unmerge", ""])
+		self.emergeIt = None
+		self.unmergeIt = None
+		self.updateIt = None
 
 	def build_append_value (self, cpv, oneshot = False, update = False, downgrade = False, version = None, useChange = []):
 		string = ""
@@ -58,19 +60,51 @@
 			useChange.sort()
 			string += "<i>%s</i>" % " ".join(useChange)
 
-		return [cpv, string]
+		return [cpv, string, False]
 
+	def set_in_progress (self, it, to = True):
+		iter = self.first_iter(it)
+		if to:
+			self.tree.set_value(iter, 1, "<b>%s</b>" % _("(In Progress)"))
+		else:
+			self.tree.set_value(iter, 1, "")
+		
+		self.tree.set_value(iter, 2, to)
+
+	def is_in_progress (self, it):
+		return self.tree.get_value(it, 2)
+
 	def get_emerge_it (self):
+		if self.emergeIt is None:
+			self.emergeIt = self.append(None, ["<b>%s</b>" % _("Install"), "", False])
 		return self.emergeIt
 
 	def get_unmerge_it (self):
+		if self.unmergeIt is None:
+			self.unmergeIt = self.append(None, ["<b>%s</b>" % _("Uninstall"), "", False])
+
 		return self.unmergeIt
 
+	def get_update_it (self):
+		if self.updateIt is None:
+			self.updateIt = self.append(None, ["<b>%s</b>" % _("Update"), "", False])
+
+		return self.updateIt
+
+	def first_iter (self, it):
+		return self.tree.get_iter_from_string(self.tree.get_string_from_iter(it).split(":")[0])
+
+	def is_in (self, it, in_it):
+		return in_it and self.iter_equal(self.first_iter(it), in_it)
+
 	def is_in_emerge (self, it):
-		return self.tree.get_string_from_iter(it).split(":")[0] == self.tree.get_string_from_iter(self.emergeIt)
+		return self.is_in(it, self.emergeIt)
 
 	def is_in_unmerge (self, it):
-		return self.tree.get_string_from_iter(it).split(":")[0] == self.tree.get_string_from_iter(self.unmergeIt)
+		return self.is_in(it, self.unmergeIt)
+
+	def is_in_update (self, it):
+		return self.is_in(it, self.updateIt)
 	
 	def iter_has_parent (self, it):
 		return (self.tree.iter_parent(it) != None)
@@ -90,10 +124,18 @@
 	def get_value (self, it, column):
 		return self.tree.get_value(it, column)
 
+	def iter_equal (self, it, other_it):
+		return self.tree.get_string_from_iter(it) == self.tree.get_string_from_iter(other_it)
+
 	def append (self, parent = None, values = None):
 		return self.tree.append(parent, values)
 
 	def remove (self, it):
+		
+		if self.emergeIt and self.iter_equal(it, self.emergeIt) : self.emergeIt = None
+		elif self.unmergeIt and self.iter_equal(it, self.unmergeIt) : self.unmergeIt = None
+		elif self.updateIt and self.iter_equal(it, self.updateIt) : self.updateIt = None
+		
 		self.tree.remove(it)
 
 	def get_original (self):
=== portato/gui/gtk/dialogs.py
==================================================================
--- portato/gui/gtk/dialogs.py	(revision 636)
+++ portato/gui/gtk/dialogs.py	(patch 0.8.9.3 level 1)
@@ -11,6 +11,7 @@
 # Written by René 'Necoro' Neumann <necoro@necoro.net>
 
 import gtk
+from ...helper import error
 from gettext import lgettext as _
 
 def queue_not_empty_dialog():
@@ -26,6 +27,7 @@
 	if io_ex.filename:
 		string = string+": "+io_ex.filename
 	
+	error(string)
 	dialog = gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_ERROR, gtk.BUTTONS_OK, string)
 	ret = dialog.run()
 	dialog.destroy()
@@ -68,6 +70,12 @@
 	infoMB.destroy()
 	return ret
 
+def remove_updates_dialog():
+	askMB = gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_QUESTION, gtk.BUTTONS_YES_NO, _("This is the updates queue. You cannot remove single elements.\nDo you want to clear the whole queue instead?"))
+	ret = askMB.run()
+	askMB.destroy()
+	return ret
+
 def remove_queue_dialog ():
 	askMB = gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_QUESTION, gtk.BUTTONS_YES_NO, _("Do you really want to clear the whole queue?"))
 	ret = askMB.run()
=== portato/gui/wrapper.py
==================================================================
--- portato/gui/wrapper.py	(revision 636)
+++ portato/gui/wrapper.py	(patch 0.8.9.3 level 1)
@@ -125,6 +125,35 @@
 		@rtype: boolean"""
 		raise NotImplementedError
 
+	def is_in_emerge (self, it):
+		"""Checks whether an iterator is part of the "Update" section.
+
+		@param it: the iterator to check
+		@type it: Iterator
+		@returns: True if the iter is part; False otherwise
+		@rtype: boolean"""
+		raise NotImplementedError
+
+	def iter_equal (self, it, other_it):
+		"""Checks whether to iterators are equal.
+
+		@param it: the one iterator to compare
+		@type it: Iterator
+		@param other_it: the other iterator to compare
+		@type other_it: Iterator
+		@returns: True if both iterators are equal; False otherwise
+		@rtype boolean"""
+		raise NotImplementedError
+
+	def first_iter (self, it):
+		"""Returns the iterator at the top.
+
+		@param it: the iterator
+		@type it: Iterator
+		@returns: the top iterator
+		@rtype: Iterator"""
+		raise NotImplementedError
+
 	def get_emerge_it (self):
 		"""Returns an iterator signaling the top of the emerge section.
 
@@ -139,6 +168,31 @@
 		@rtype: Iterator"""
 		raise NotImplementedError
 
+	def get_update_it (self):
+		"""Returns an iterator signaling the top of the update section.
+
+		@returns: unmerge-iterator
+		@rtype: Iterator"""
+		raise NotImplementedError
+
+	def set_in_progress (self, it, to = True):
+		"""Marks the queue where the given iterator belongs as being in progress.
+
+		@param it: one iterator of the queue to mark to
+		@type it: Iterator
+		@param to: whether to enable or disable
+		@type to: boolean"""
+		raise NotImplementedError
+
+	def get_in_progress (self, it):
+		"""Returns whether the queue where the given iterator belongs to, is marked as "being in progress".
+
+		@param it: the iterator
+		@type it: Iterator
+		@returns: whether the queue is marked "in progress"
+		@rtype: boolean"""
+		raise NotImplementedError
+
 	def build_append_value (self, cpv, oneshot = False, update = False, downgrade = False, version = None, useChange = []):
 		"""Builds the list, which is going to be passed to append. 
 
@@ -164,9 +218,9 @@
 	Each frontend _MUST_ define its own subclass and implement ALL of the methods, otherwise a NotImplementedError will be thrown."""
 	
 	def set_pty (self, pty):
-		"""This sets the pseudo-terminal where to print the incoming output to.
+		"""This sets the pty master.
 
-		@param pty: the terminal to print to
+		@param pty: the pty master
 		@type pty: file-descriptor"""
 		raise NotImplementedError
 
=== portato/gui/gui_helper.py
==================================================================
--- portato/gui/gui_helper.py	(revision 636)
+++ portato/gui/gui_helper.py	(patch 0.8.9.3 level 1)
@@ -3,7 +3,7 @@
 # File: portato/gui/gui_helper.py
 # This file is part of the Portato-Project, a graphical portage-frontend.
 #
-# Copyright (C) 2006-2007 René 'Necoro' Neumann
+# Copyright (C) 2006-2008 René 'Necoro' Neumann
 # This is free software.  You may redistribute copies of it under the terms of
 # the GNU General Public License version 2.
 # There is NO WARRANTY, to the extent permitted by law.
@@ -14,7 +14,7 @@
 
 # some stuff needed
 import logging
-import os, pty
+import sys, os, pty
 import signal, threading, time
 from subprocess import Popen, PIPE, STDOUT
 
@@ -26,6 +26,7 @@
 from ..helper import debug, info, send_signal_to_group, set_log_level, unique_array
 from ..constants import USE_CATAPULT
 from ..waiting_queue import WaitingQueue
+from .updater import Updater
 
 # parser
 from ..config_parser import ConfigParser
@@ -219,7 +220,10 @@
 
 		if cat:
 			del self._db[cat]
-			self.inst_cats.remove(cat)
+			try:
+				self.inst_cats.remove(cat)
+			except KeyError: # not in inst_cats - can be ignored
+				pass
 			self.populate(cat+"/")
 		else:
 			self.__initialize()
@@ -251,8 +255,8 @@
 		self.pty = None
 
 		# dictionaries with data about the packages in the queue
-		self.iters = {} # iterator in the tree
-		self.deps = {} # all the deps of the package
+		self.iters = {"install" : {}, "uninstall" : {}, "update" : {}} # iterator in the tree
+		self.deps = {"install" : {}, "update" : {}} # all the deps of the package
 		
 		# member vars
 		self.tree = tree
@@ -263,14 +267,12 @@
 		
 		self.db = db
 		self.title_update = title_update
+		self.threadClass = threadClass
+		
+		if self.console:
+			self.pty = pty.openpty()
+			self.console.set_pty(self.pty[0])
 
-		# our iterators pointing at the toplevels; they are set to None if we do not have a tree
-		if self.tree: 
-			self.emergeIt = self.tree.get_emerge_it()
-			self.unmergeIt = self.tree.get_unmerge_it()
-		else:
-			self.emergeIt = self.unmergeIt = None
-
 	def _get_pkg_from_cpv (self, cpv, unmask = False):
 		"""Gets a L{backend.Package}-object from a cpv.
 
@@ -311,7 +313,7 @@
 		
 		return pkg
 	
-	def update_tree (self, it, cpv, unmask = False, oneshot = False):
+	def update_tree (self, it, cpv, unmask = False, oneshot = False, type = "install"):
 		"""This updates the tree recursivly, or? Isn't it? Bjorn!
 
 		@param it: iterator where to append
@@ -322,11 +324,13 @@
 		@type unmask: boolean
 		@param oneshot: True if we want to emerge is oneshot
 		@type oneshot: boolean
+		@param type: the type of the updating
+		@type type: string
 		
 		@raises backend.BlockedException: When occured during dependency-calculation.
 		@raises backend.PackageNotFoundException: If no package could be found - normally it is existing but masked."""
 		
-		if cpv in self.deps:
+		if cpv in self.deps[type]:
 			return # in list already and therefore it's already in the tree too	
 		
 		# try to find an already installed instance
@@ -375,29 +379,29 @@
 
 		# add iter
 		subIt = self.tree.append(it, self.tree.build_append_value(cpv, oneshot = oneshot, update = update, downgrade = downgrade, version = uVersion, useChange = changedUse))
-		self.iters.update({cpv: subIt})
+		self.iters[type].update({cpv: subIt})
 		
 		# get dependencies
 		deps = pkg.get_dep_packages() # this might raise a BlockedException
-		self.deps.update({cpv : deps})
+		self.deps[type].update({cpv : deps})
 		
 		# recursive call
 		for d in deps:
 			try:
-				self.update_tree(subIt, d, unmask)
+				self.update_tree(subIt, d, unmask, type = type)
 			except backend.BlockedException, e: # BlockedException occured -> delete current tree and re-raise exception
 				debug("Something blocked: %s", e[0])
 				self.remove_with_children(subIt)
 				raise
 		
-	def append (self, cpv, unmerge = False, update = False, forceUpdate = False, unmask = False, oneshot = False):
+	def append (self, cpv, type = "install", update = False, forceUpdate = False, unmask = False, oneshot = False):
 		"""Appends a cpv either to the merge queue or to the unmerge-queue.
 		Also updates the tree-view.
 		
 		@param cpv: Package to add
 		@type cpv: string (cat/pkg-ver)
-		@param unmerge: Set to True if you want to unmerge this package - else False.
-		@type unmerge: boolean		
+		@param type: The type of this append process. Possible values are "install", "uninstall", "update".
+		@type unmerge: string		
 		@param update: Set to True if a package is going to be updated (e.g. if the use-flags changed).
 		@type update: boolean
 		@param forceUpdate: Set to True if the update should be forced.
@@ -409,34 +413,37 @@
 		
 		@raises portato.backend.PackageNotFoundException: if trying to add a package which does not exist"""
 		
-		if not unmerge: # emerge
+		if type in ("install", "update"): # emerge
 			# insert dependencies
 			pkg = self._get_pkg_from_cpv(cpv, unmask)
 			deps = pkg.get_dep_packages()
 			
 			if update:
-				if not forceUpdate and cpv in self.deps and deps == self.deps[cpv]:
+				if not forceUpdate and cpv in self.deps[type] and deps == self.deps[type][cpv]:
 					return # nothing changed - return
 				else:
 					hasBeenInQueue = (cpv in self.mergequeue or cpv in self.oneshotmerge)
-					parentIt = self.tree.parent_iter(self.iters[cpv])
+					parentIt = self.tree.parent_iter(self.iters[type][cpv])
 
 					# delete it out of the tree - but NOT the changed flags
-					self.remove_with_children(self.iters[cpv], removeNewFlags = False)
+					self.remove_with_children(self.iters[type][cpv], removeNewFlags = False)
 					
 					if hasBeenInQueue: # package has been in queue before
 						self._queue_append(cpv, oneshot)
 					
-					self.update_tree(parentIt, cpv, unmask, oneshot = oneshot)
+					self.update_tree(parentIt, cpv, unmask, oneshot = oneshot, type = type)
 			else: # not update
-				self._queue_append(cpv, oneshot)
-				if self.emergeIt: 
-					self.update_tree(self.emergeIt, cpv, unmask, oneshot = oneshot)
+				if type == "install":
+					self._queue_append(cpv, oneshot)
+					if self.tree:
+						self.update_tree(self.tree.get_emerge_it(), cpv, unmask, type = type, oneshot = oneshot)
+				elif type == "update" and self.tree:
+					self.update_tree(self.tree.get_update_it(), cpv, unmask, type = type, oneshot = oneshot)
 			
 		else: # unmerge
 			self.unmergequeue.append(cpv)
-			if self.unmergeIt: # update tree
-				self.tree.append(self.unmergeIt, self.tree.build_append_value(cpv))
+			if self.tree: # update tree
+				self.iters["uninstall"].update({cpv: self.tree.append(self.tree.get_unmerge_it(), self.tree.build_append_value(cpv))})
 
 	def _queue_append (self, cpv, oneshot = False):
 		"""Convenience function appending a cpv either to self.mergequeue or to self.oneshotmerge.
@@ -453,10 +460,17 @@
 			if cpv not in self.oneshotmerge:
 				self.oneshotmerge.append(cpv)
 
-	def doEmerge (self, *args, **kwargs):
-		self.threadQueue.put(self.__emerge, *args, **kwargs)
+	def doEmerge (self, options, packages, it, *args, **kwargs):
+		top = None
+		if self.tree and it:
+			for v in it.itervalues():
+				self.tree.set_in_progress(v)
+				top = self.tree.first_iter(v)
+				break
+
+		self.threadQueue.put(self.__emerge, options, packages, it, top, *args, **kwargs)
 	
-	def __emerge (self, options, packages, it, command = None):
+	def __emerge (self, options, packages, it, top, command = None):
 		"""Calls emerge and updates the terminal.
 		
 		@param options: options to send to emerge
@@ -464,7 +478,9 @@
 		@param packages: packages to emerge
 		@type packages: string[]
 		@param it: Iterators which point to these entries whose children will be removed after completion.
-		@type it: Iterator[]
+		@type it: dict(string -> Iterator)
+		@param top: The top iterator
+		@type top: Iterator
 		@param command: the command to execute - default is "/usr/bin/python /usr/bin/emerge"
 		@type command: string[]"""
 
@@ -474,28 +490,45 @@
 				command = system.get_merge_command()
 
 			# open tty
-			if not self.pty:
-				self.pty = pty.openpty()
-				self.console.set_pty(self.pty[0])
-			else:
+			if self.console:
 				self.console.reset()
 			
+			def pre ():
+				os.setsid() # new session
+				if self.console:
+					import fcntl, termios
+					fcntl.ioctl(self.pty[1], termios.TIOCSCTTY, 0) # set pty-slave as session tty
+					os.dup2(self.pty[1], 0)
+					os.dup2(self.pty[1], 1)
+					os.dup2(self.pty[1], 2)
+
 			# start emerge
-			self.process = Popen(command+options+packages, stdout = self.pty[1], stderr = STDOUT, shell = False, env = system.get_environment(), preexec_fn = os.setsid)
-			
+			self.process = Popen(command+options+packages, shell = False, env = system.get_environment(), preexec_fn = pre)
+
 			# remove packages from queue
-			for i in it:
-				self.remove_with_children(i)
+			if self.tree and it:
+				self.up = Updater(self, it, self.threadClass)
+			else:
+				self.up = None
 			
 			# update title
-			old_title = self.console.get_window_title()
-			while self.process and self.process.poll() is None:
-				if self.title_update : 
-					title = self.console.get_window_title()
-					if title != old_title:
-						self.title_update(title)
-					time.sleep(0.5)
+			if self.console:
+				old_title = self.console.get_window_title()
+				while self.process and self.process.poll() is None:
+					if self.title_update : 
+						title = self.console.get_window_title()
+						if title != old_title:
+							self.title_update(title)
+							old_title = title
+						time.sleep(0.5)
 
+			if self.up: 
+				self.up.stop()
+				if it:
+					self.tree.set_in_progress(top, False)
+				else:
+					self.remove(top)
+
 			if self.title_update: self.title_update(None)
 
 			if self.process is None: # someone resetted this
@@ -508,9 +541,10 @@
 
 			@plugin.hook("after_emerge", packages = packages, retcode = ret)
 			def update_packages():
-				for cat in unique_array([system.split_cpv(p)[0] for p in packages if p not in ["world", "system"]]):
-					self.db.reload(cat)
-					debug("Category %s refreshed", cat)
+				if self.db:
+					for cat in unique_array([system.split_cpv(p)[0] for p in packages if p not in ["world", "system"]]):
+						self.db.reload(cat)
+						debug("Category %s refreshed", cat)
 
 			update_packages()
 			
@@ -527,17 +561,25 @@
 		def prepare(queue):
 			"""Prepares the list of iterators and the list of packages."""
 			list = []
-			its = []
+			its = {}
 			for k in queue:
 				list += ["="+k]
-				its.append(self.iters[k])
+				if self.tree: 
+					its.update({k : self.iters["install"][k]})
 
 			return list, its
 
+		if self.tree:
+			ownit = self.iters["install"]
+		else:
+			ownit = {}
+
 		# oneshot-queue
 		if self.oneshotmerge:
 			# prepare package-list for oneshot
 			list, its = prepare(self.oneshotmerge)
+			if not self.mergequeue :# the other one does not exist - remove completely
+				its = ownit
 			
 			s = system.get_oneshot_option()
 			if not force: s += system.get_pretend_option()
@@ -549,6 +591,8 @@
 		if self.mergequeue:
 			# prepare package-list
 			list, its = prepare(self.mergequeue)
+			if not self.oneshotmerge: # the other one does not exist - remove completely
+				its = ownit
 
 			s = []
 			if not force: s = system.get_pretend_option()
@@ -573,8 +617,13 @@
 		if not force: s += system.get_pretend_option()
 		if options is not None: s += options
 		
-		self.doEmerge(s,list, [self.unmergeIt], caller = self.unmerge)
+		if self.tree:
+			it = self.iters["uninstall"]
+		else:
+			it = {}
 
+		self.doEmerge(s,list, it, caller = self.unmerge)
+
 	def update_world(self, force = False, newuse = False, deep = False, options = None):
 		"""Does an update world. newuse and deep are the arguments handed to emerge.
 
@@ -594,8 +643,13 @@
 		if not force: opts += system.get_pretend_option()
 		if options is not None: opts += options
 
-		self.doEmerge(opts, ["world"], [self.emergeIt], caller = self.update_world)
+		if self.tree:
+			it = self.iters["update"]
+		else:
+			it = {}
 
+		self.doEmerge(opts, ["world"], it, caller = self.update_world)
+
 	def sync (self, command = None):
 		"""Calls "emerge --sync".
 		
@@ -677,12 +731,12 @@
 		@param removeNewFlags: True if new flags should be removed; False otherwise. Default: True.
 		@type removeNewFlags: boolean"""
 		
-		if self.tree.iter_has_parent(it): # NEVER remove our top stuff
+		if self.tree.iter_has_parent(it):
 			cpv = self.tree.get_value(it, self.tree.get_cpv_column())
 			if self.tree.is_in_emerge(it): # Emerge
-				del self.iters[cpv]
+				del self.iters["install"][cpv]
 				try:
-					del self.deps[cpv]
+					del self.deps["install"][cpv]
 				except KeyError: # this seems to be removed due to a BlockedException - so no deps here atm ;)
 					debug("Catched KeyError => %s seems not to be in self.deps. Should be no harm in normal cases.", cpv)
 				try:
@@ -698,11 +752,24 @@
 					flags.remove_new_masked(cpv)
 					flags.remove_new_testing(cpv)
 			
-			else: # in Unmerge
+			elif self.tree.is_in_unmerge(it): # in Unmerge
+				del self.iters["uninstall"][cpv]
 				self.unmergequeue.remove(cpv)
 			
-			self.tree.remove(it)
+			elif self.tree.is_in_update(it):
+				del self.iters["update"][cpv]
+				try:
+					del self.deps["update"][cpv]
+				except KeyError: # this seems to be removed due to a BlockedException - so no deps here atm ;)
+					debug("Catched KeyError => %s seems not to be in self.deps. Should be no harm in normal cases.", cpv)
 
+				if removeNewFlags: # remove the changed flags
+					flags.remove_new_use_flags(cpv)
+					flags.remove_new_masked(cpv)
+					flags.remove_new_testing(cpv)
+			
+		self.tree.remove(it)
+
 	def is_empty (self):
 		"""Checks whether the current queue is empty and not working. Therefore it looks, whether the queues are empty,
 		and the process is not running.
=== portato/gui/updater.py
==================================================================
--- portato/gui/updater.py	(revision 636)
+++ portato/gui/updater.py	(patch 0.8.9.3 level 1)
@@ -0,0 +1,106 @@
+# -*- coding: utf-8 -*-
+#
+# File: portato/gui/updater.py
+# This file is part of the Portato-Project, a graphical portage-frontend.
+#
+# Copyright (C) 2008 René 'Necoro' Neumann
+# This is free software.  You may redistribute copies of it under the terms of
+# the GNU General Public License version 2.
+# There is NO WARRANTY, to the extent permitted by law.
+#
+# Written by René 'Necoro' Neumann <necoro@necoro.net>
+
+from __future__ import absolute_import
+
+from ..backend import system
+
+import threading, subprocess, time
+from ..helper import debug
+
+class Updater (object):
+	"""
+	This class is intended to check what package is currently being installed and remove this one from the queue.
+
+	@cvar SED_EXP: The sed expression to strip the package name out of the qlop call.
+	"""
+	
+	SED_EXP = r"""
+/\*/{
+s/ \* //
+q
+}"""
+	
+	def __init__ (self, queue, iterators, threadClass = threading.Thread):
+		"""
+		Constructor.
+		Also directly initializes the thread.
+
+		@param queue: an emerge queue instance
+		@type queue: EmergeQueue
+		@param iterators: a dictionary of iterators in the current queue
+		@type iterators: dict(string->Iterator)
+		"""
+		
+		if not issubclass(threadClass, threading.Thread):
+			raise ValueError, "Only subclasses of threading.Thread are allowed."
+
+		self.queue = queue
+		self.iterators = iterators
+		self.threadClass = threadClass
+		self.stopEvent = threading.Event()
+
+		t = threadClass(name = "Queue Updater Thread", target = self.run)
+		t.setDaemon(True)
+		t.start()
+
+	def run (self):
+		"""
+		Run and run and run ...
+		Checks the packages until being stopped.
+		"""
+
+		curr = None
+		while not self.stopEvent.isSet():
+
+			# this = $(qlop -cCq | sed $SED_EXP)
+			p1 = subprocess.Popen(["qlop", "--current", "--nocolor", "--quiet"], stdout = subprocess.PIPE)
+			this = subprocess.Popen(["sed", self.SED_EXP], stdout = subprocess.PIPE, stdin = p1.stdout).communicate()[0]
+			
+			if this: this = this.strip()
+			if this != curr: # changed package
+				curr and self.remove(self.find(curr)) # remove the previous
+				curr = this
+			
+			time.sleep(2.0)
+				
+	def stop (self):
+		"""
+		Stops the current updater.
+		"""
+		self.stopEvent.set()
+
+	def find (self, pv):
+		"""
+		As qlop only returns 'package-version' we need to assign it to a cpv.
+		This is done here.
+		"""
+
+		pkgs = [l.get_cpv() for l in system.find_packages("=%s" % pv)]
+
+		if len(pkgs) > 1: # ambigous - try to find the one which is also in the iterators
+			for p in pkgs:
+				if p in self.iterators:
+					return p
+		elif not pkgs: # nothing found =|
+			error(_("Trying to remove package '%s' from queue which does not exist in system."), pv)
+		else: # only one choice =)
+			return pkgs[0]
+	
+	def remove (self, cpv):
+		"""
+		Remove a package from the queue.
+		"""
+		try:
+			self.queue.remove(self.iterators[cpv])
+		except KeyError:
+			debug("'%s' should be removed, but is not in queue.", cpv)
=== portato/gui/templates/portato.glade
==================================================================
--- portato/gui/templates/portato.glade	(revision 636)
+++ portato/gui/templates/portato.glade	(patch 0.8.9.3 level 1)
@@ -86,9 +86,10 @@
                     <child>
                       <widget class="GtkImageMenuItem" id="emergeItem">
                         <property name="visible">True</property>
-                        <property name="label" translatable="yes">E_merge</property>
+                        <property name="label" translatable="yes">_Install</property>
                         <property name="use_underline">True</property>
-                        <signal name="activate" handler="cb_emerge_clicked"/>
+                        <signal name="activate" handler="cb_package_emerge_clicked"/>
+                        <accelerator key="plus" modifiers="GDK_CONTROL_MASK" signal="activate"/>
                         <child internal-child="image">
                           <widget class="GtkImage" id="menu-item-image9">
                             <property name="visible">True</property>
@@ -101,8 +102,10 @@
                     <child>
                       <widget class="GtkImageMenuItem" id="unmergeItem">
                         <property name="visible">True</property>
-                        <property name="label" translatable="yes">_Unmerge</property>
+                        <property name="label" translatable="yes">_Uninstall</property>
                         <property name="use_underline">True</property>
+                        <signal name="activate" handler="cb_package_unmerge_clicked"/>
+                        <accelerator key="minus" modifiers="GDK_CONTROL_MASK" signal="activate"/>
                         <child internal-child="image">
                           <widget class="GtkImage" id="menu-item-image10">
                             <property name="visible">True</property>
@@ -133,7 +136,7 @@
                       <widget class="GtkCheckMenuItem" id="showInstalledItem">
                         <property name="visible">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Show Only _Installed Packages</property>
+                        <property name="label" translatable="yes">Show _Only Installed Packages</property>
                         <property name="use_underline">True</property>
                         <signal name="toggled" handler="cb_show_installed_toggled"/>
                         <accelerator key="i" modifiers="GDK_CONTROL_MASK" signal="activate"/>
@@ -404,7 +407,6 @@
                           <widget class="GtkTreeView" id="catList">
                             <property name="visible">True</property>
                             <property name="search_column">0</property>
-                            <signal name="cursor_changed" handler="cb_cat_list_selection"/>
                           </widget>
                         </child>
                       </widget>
@@ -420,7 +422,6 @@
                             <property name="visible">True</property>
                             <property name="headers_clickable">True</property>
                             <property name="search_column">0</property>
-                            <signal name="cursor_changed" handler="cb_pkg_list_selection"/>
                           </widget>
                         </child>
                       </widget>
@@ -452,297 +453,355 @@
                     <property name="visible">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                     <child>
-                      <widget class="GtkToolbar" id="packageTB">
+                      <widget class="GtkHBox" id="hbox5">
                         <property name="visible">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="icon_size">GTK_ICON_SIZE_BUTTON</property>
-                        <property name="icon_size_set">True</property>
+                        <property name="spacing">5</property>
                         <child>
-                          <widget class="GtkToolButton" id="pkgEmergeBtn">
+                          <widget class="GtkHBox" id="packageHB">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Add to Emerge Queue</property>
-                            <property name="stock_id">gtk-add</property>
-                            <signal name="clicked" handler="cb_package_emerge_clicked"/>
+                            <property name="spacing">4</property>
+                            <child>
+                              <widget class="GtkLabel" id="nameLabel">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="label" translatable="yes">label</property>
+                              </widget>
+                            </child>
+                            <child>
+                              <widget class="GtkComboBox" id="versionCombo">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                              </widget>
+                              <packing>
+                                <property name="position">1</property>
+                              </packing>
+                            </child>
                           </widget>
-                          <packing>
-                            <property name="expand">False</property>
-                          </packing>
                         </child>
                         <child>
-                          <widget class="GtkToolButton" id="pkgUnmergeBtn">
+                          <widget class="GtkToolbar" id="packageTB">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Remove from Emerge Queue</property>
-                            <property name="stock_id">gtk-remove</property>
-                            <signal name="clicked" handler="cb_package_unmerge_clicked"/>
+                            <property name="icon_size">GTK_ICON_SIZE_BUTTON</property>
+                            <property name="icon_size_set">True</property>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgEmergeBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Install onto system</property>
+                                <property name="label" translatable="yes">_Install</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-add</property>
+                                <signal name="clicked" handler="cb_package_emerge_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgUnmergeBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Uninstall from system</property>
+                                <property name="label" translatable="yes">_Uninstall</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-remove</property>
+                                <signal name="clicked" handler="cb_package_unmerge_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
+                            <child>
+                              <widget class="GtkToolButton" id="pkgRevertBtn">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="tooltip" translatable="yes">Revert changes</property>
+                                <property name="label" translatable="yes">Re_vert</property>
+                                <property name="use_underline">True</property>
+                                <property name="stock_id">gtk-undo</property>
+                                <signal name="clicked" handler="cb_package_revert_clicked"/>
+                              </widget>
+                              <packing>
+                                <property name="expand">False</property>
+                              </packing>
+                            </child>
                           </widget>
                           <packing>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <widget class="GtkToolButton" id="pkgRevertBtn">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">Revert changes</property>
-                            <property name="stock_id">gtk-undo</property>
-                            <signal name="clicked" handler="cb_package_revert_clicked"/>
-                          </widget>
-                          <packing>
-                            <property name="expand">False</property>
-                          </packing>
-                        </child>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkHBox" id="packageHB">
-                        <property name="visible">True</property>
-                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="homogeneous">True</property>
-                        <child>
-                          <widget class="GtkLabel" id="nameLabel">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">label</property>
-                          </widget>
-                        </child>
-                        <child>
-                          <widget class="GtkComboBox" id="versionCombo">
-                            <property name="visible">True</property>
-                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                          </widget>
-                          <packing>
                             <property name="position">1</property>
                           </packing>
                         </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="position">1</property>
+                        <property name="padding">5</property>
                       </packing>
                     </child>
                     <child>
                       <widget class="GtkNotebook" id="packageNotebook">
                         <property name="visible">True</property>
+                        <property name="tab_pos">GTK_POS_BOTTOM</property>
                         <child>
-                          <widget class="GtkEventBox" id="generalEB">
+                          <widget class="GtkScrolledWindow" id="generalScroll">
                             <property name="visible">True</property>
+                            <property name="can_focus">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
                             <child>
-                              <widget class="GtkTable" id="generalTable">
+                              <widget class="GtkViewport" id="generalVB">
                                 <property name="visible">True</property>
                                 <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                <property name="border_width">6</property>
-                                <property name="n_rows">7</property>
-                                <property name="n_columns">2</property>
-                                <property name="column_spacing">5</property>
-                                <property name="row_spacing">5</property>
+                                <property name="resize_mode">GTK_RESIZE_QUEUE</property>
+                                <property name="shadow_type">GTK_SHADOW_NONE</property>
                                 <child>
-                                  <placeholder/>
-                                </child>
-                                <child>
-                                  <placeholder/>
-                                </child>
-                                <child>
-                                  <widget class="GtkCheckButton" id="testingCheck">
+                                  <widget class="GtkTable" id="generalTable">
                                     <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
                                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Testing</property>
-                                    <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="toggled" handler="cb_testing_toggled"/>
-                                  </widget>
-                                  <packing>
-                                    <property name="top_attach">5</property>
-                                    <property name="bottom_attach">6</property>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="maskedLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="xalign">0</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">6</property>
-                                    <property name="bottom_attach">7</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkCheckButton" id="maskedCheck">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Masked</property>
-                                    <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="toggled" handler="cb_masked_toggled"/>
-                                  </widget>
-                                  <packing>
-                                    <property name="top_attach">6</property>
-                                    <property name="bottom_attach">7</property>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkCheckButton" id="installedCheck">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">Installed</property>
-                                    <property name="xalign">0</property>
-                                    <property name="response_id">0</property>
-                                    <property name="draw_indicator">True</property>
-                                    <signal name="button_press_event" handler="cb_button_pressed"/>
-                                  </widget>
-                                  <packing>
-                                    <property name="top_attach">4</property>
-                                    <property name="bottom_attach">5</property>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="homepageLinkLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Homepage:&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
-                                    <property name="single_line_mode">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="top_attach">2</property>
-                                    <property name="bottom_attach">3</property>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="overlayLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">label</property>
-                                    <property name="single_line_mode">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">1</property>
-                                    <property name="bottom_attach">2</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="descLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">label</property>
-                                    <property name="wrap">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="overlayLabelLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Overlay:&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
-                                    <property name="single_line_mode">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="top_attach">1</property>
-                                    <property name="bottom_attach">2</property>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="descLabelLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="xalign">0</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Description:&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
-                                    <property name="single_line_mode">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="x_options">GTK_FILL</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkHBox" id="linkBox">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="spacing">5</property>
+                                    <property name="border_width">6</property>
+                                    <property name="n_rows">8</property>
+                                    <property name="n_columns">2</property>
+                                    <property name="column_spacing">5</property>
+                                    <property name="row_spacing">5</property>
                                     <child>
                                       <placeholder/>
                                     </child>
+                                    <child>
+                                      <placeholder/>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="licenseLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">label</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">3</property>
+                                        <property name="bottom_attach">4</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="licenseLabelLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">&lt;b&gt;License:&lt;/b&gt;</property>
+                                        <property name="use_markup">True</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">3</property>
+                                        <property name="bottom_attach">4</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="notInSysLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="label" translatable="yes">&lt;b&gt;Installed, but not in portage anymore&lt;/b&gt;</property>
+                                        <property name="use_markup">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">4</property>
+                                        <property name="bottom_attach">5</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="missingLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="label" translatable="yes">&lt;span foreground='red'&gt;&lt;b&gt;MISSING KEYWORD&lt;/b&gt;&lt;/span&gt;</property>
+                                        <property name="use_markup">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">4</property>
+                                        <property name="bottom_attach">5</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkHBox" id="linkBox">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="spacing">5</property>
+                                        <child>
+                                          <placeholder/>
+                                        </child>
+                                      </widget>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">2</property>
+                                        <property name="bottom_attach">3</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="descLabelLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">&lt;b&gt;Description:&lt;/b&gt;</property>
+                                        <property name="use_markup">True</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="overlayLabelLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">&lt;b&gt;Overlay:&lt;/b&gt;</property>
+                                        <property name="use_markup">True</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">1</property>
+                                        <property name="bottom_attach">2</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="descLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">label</property>
+                                        <property name="wrap">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="right_attach">2</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="overlayLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">label</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">1</property>
+                                        <property name="bottom_attach">2</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="homepageLinkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">&lt;b&gt;Homepage:&lt;/b&gt;</property>
+                                        <property name="use_markup">True</property>
+                                        <property name="single_line_mode">True</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">2</property>
+                                        <property name="bottom_attach">3</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkCheckButton" id="installedCheck">
+                                        <property name="visible">True</property>
+                                        <property name="can_focus">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="label" translatable="yes">Installed</property>
+                                        <property name="xalign">0</property>
+                                        <property name="response_id">0</property>
+                                        <property name="draw_indicator">True</property>
+                                        <signal name="button_press_event" handler="cb_button_pressed"/>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">5</property>
+                                        <property name="bottom_attach">6</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkCheckButton" id="maskedCheck">
+                                        <property name="visible">True</property>
+                                        <property name="can_focus">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="label" translatable="yes">Masked</property>
+                                        <property name="xalign">0</property>
+                                        <property name="response_id">0</property>
+                                        <property name="draw_indicator">True</property>
+                                        <signal name="toggled" handler="cb_masked_toggled"/>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">7</property>
+                                        <property name="bottom_attach">8</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkLabel" id="maskedLabel">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                      </widget>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="right_attach">2</property>
+                                        <property name="top_attach">7</property>
+                                        <property name="bottom_attach">8</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkCheckButton" id="testingCheck">
+                                        <property name="visible">True</property>
+                                        <property name="can_focus">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="no_show_all">True</property>
+                                        <property name="label" translatable="yes">Testing</property>
+                                        <property name="xalign">0</property>
+                                        <property name="response_id">0</property>
+                                        <property name="draw_indicator">True</property>
+                                        <signal name="toggled" handler="cb_testing_toggled"/>
+                                      </widget>
+                                      <packing>
+                                        <property name="top_attach">6</property>
+                                        <property name="bottom_attach">7</property>
+                                        <property name="x_options">GTK_FILL</property>
+                                        <property name="y_options"></property>
+                                      </packing>
+                                    </child>
                                   </widget>
-                                  <packing>
-                                    <property name="left_attach">1</property>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">2</property>
-                                    <property name="bottom_attach">3</property>
-                                    <property name="y_options"></property>
-                                  </packing>
                                 </child>
-                                <child>
-                                  <widget class="GtkLabel" id="missingLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">&lt;span foreground='red'&gt;&lt;b&gt;MISSING KEYWORD&lt;/b&gt;&lt;/span&gt;</property>
-                                    <property name="use_markup">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">3</property>
-                                    <property name="bottom_attach">4</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <widget class="GtkLabel" id="notInSysLabel">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <property name="no_show_all">True</property>
-                                    <property name="label" translatable="yes">&lt;b&gt;Installed, but not in portage anymore&lt;/b&gt;</property>
-                                    <property name="use_markup">True</property>
-                                  </widget>
-                                  <packing>
-                                    <property name="right_attach">2</property>
-                                    <property name="top_attach">3</property>
-                                    <property name="bottom_attach">4</property>
-                                    <property name="y_options"></property>
-                                  </packing>
-                                </child>
                               </widget>
                             </child>
                           </widget>
@@ -866,7 +925,7 @@
                           <widget class="GtkLabel" id="label2">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="label" translatable="yes">F_iles</property>
+                            <property name="label" translatable="yes">Fi_les</property>
                             <property name="use_underline">True</property>
                           </widget>
                           <packing>
@@ -877,7 +936,7 @@
                         </child>
                       </widget>
                       <packing>
-                        <property name="position">2</property>
+                        <property name="position">1</property>
                       </packing>
                     </child>
                   </widget>
@@ -891,40 +950,22 @@
                     <property name="visible">True</property>
                     <property name="can_focus">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                    <property name="tab_pos">GTK_POS_BOTTOM</property>
                     <child>
                       <widget class="GtkVBox" id="queueVB">
                         <property name="visible">True</property>
                         <child>
-                          <widget class="GtkScrolledWindow" id="queueScroll">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <child>
-                              <widget class="GtkTreeView" id="queueList">
-                                <property name="visible">True</property>
-                                <property name="has_tooltip">True</property>
-                                <property name="headers_visible">False</property>
-                                <property name="enable_search">False</property>
-                                <signal name="button_press_event" handler="cb_right_click"/>
-                                <signal name="query_tooltip" handler="cb_queue_tooltip_queried"/>
-                                <signal name="row_activated" handler="cb_row_activated"/>
-                              </widget>
-                            </child>
-                          </widget>
-                        </child>
-                        <child>
                           <widget class="GtkHButtonBox" id="queueBB">
                             <property name="visible">True</property>
                             <property name="border_width">5</property>
                             <property name="homogeneous">True</property>
                             <property name="layout_style">GTK_BUTTONBOX_SPREAD</property>
                             <child>
-                              <widget class="GtkButton" id="emergeBtn">
+                              <widget class="GtkButton" id="executeBtn">
                                 <property name="visible">True</property>
-                                <property name="tooltip" translatable="yes">Install all packages in the "Emerge Queue"</property>
+                                <property name="tooltip" translatable="yes">Execute the current selected queue</property>
                                 <property name="response_id">0</property>
-                                <signal name="clicked" handler="cb_emerge_clicked"/>
+                                <signal name="clicked" handler="cb_execute_clicked"/>
                                 <child>
                                   <widget class="GtkHBox" id="hbox7">
                                     <property name="visible">True</property>
@@ -933,7 +974,7 @@
                                       <widget class="GtkImage" id="image6">
                                         <property name="visible">True</property>
                                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="stock">gtk-add</property>
+                                        <property name="stock">gtk-execute</property>
                                       </widget>
                                     </child>
                                     <child>
@@ -941,7 +982,7 @@
                                         <property name="visible">True</property>
                                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                                         <property name="xalign">0</property>
-                                        <property name="label" translatable="yes">E_merge</property>
+                                        <property name="label" translatable="yes">E_xecute</property>
                                         <property name="use_underline">True</property>
                                         <property name="single_line_mode">True</property>
                                       </widget>
@@ -954,43 +995,6 @@
                               </widget>
                             </child>
                             <child>
-                              <widget class="GtkButton" id="unmergeBtn">
-                                <property name="visible">True</property>
-                                <property name="tooltip" translatable="yes">Deinstall all packages in the "Unmerge Queue"</property>
-                                <property name="response_id">0</property>
-                                <signal name="clicked" handler="cb_unmerge_clicked"/>
-                                <child>
-                                  <widget class="GtkHBox" id="hbox8">
-                                    <property name="visible">True</property>
-                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                    <child>
-                                      <widget class="GtkImage" id="image7">
-                                        <property name="visible">True</property>
-                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="stock">gtk-remove</property>
-                                      </widget>
-                                    </child>
-                                    <child>
-                                      <widget class="GtkLabel" id="label13">
-                                        <property name="visible">True</property>
-                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                                        <property name="xalign">0</property>
-                                        <property name="label" translatable="yes">_Unmerge</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="single_line_mode">True</property>
-                                      </widget>
-                                      <packing>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </widget>
-                                </child>
-                              </widget>
-                              <packing>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                            <child>
                               <widget class="GtkButton" id="updateBtn">
                                 <property name="visible">True</property>
                                 <property name="tooltip" translatable="yes">Calculate the packages which will be installed during an "update world"</property>
@@ -1000,7 +1004,7 @@
                                 <signal name="clicked" handler="cb_update_clicked"/>
                               </widget>
                               <packing>
-                                <property name="position">2</property>
+                                <property name="position">1</property>
                               </packing>
                             </child>
                             <child>
@@ -1013,13 +1017,34 @@
                                 <signal name="clicked" handler="cb_remove_clicked"/>
                               </widget>
                               <packing>
-                                <property name="position">3</property>
+                                <property name="position">2</property>
                               </packing>
                             </child>
                           </widget>
                           <packing>
                             <property name="expand">False</property>
                             <property name="fill">False</property>
+                          </packing>
+                        </child>
+                        <child>
+                          <widget class="GtkScrolledWindow" id="queueScroll">
+                            <property name="visible">True</property>
+                            <property name="can_focus">False</property>
+                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <child>
+                              <widget class="GtkTreeView" id="queueList">
+                                <property name="visible">True</property>
+                                <property name="has_tooltip">True</property>
+                                <property name="headers_visible">False</property>
+                                <property name="enable_search">False</property>
+                                <signal name="button_press_event" handler="cb_right_click"/>
+                                <signal name="query_tooltip" handler="cb_queue_tooltip_queried"/>
+                                <signal name="row_activated" handler="cb_queue_row_activated"/>
+                              </widget>
+                            </child>
+                          </widget>
+                          <packing>
                             <property name="position">1</property>
                           </packing>
                         </child>
@@ -1669,83 +1694,231 @@
                     <property name="visible">True</property>
                     <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
                     <child>
-                      <widget class="GtkCheckButton" id="titleUpdateCheck">
+                      <widget class="GtkFrame" id="visualGeneralFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Show emerge progress in title - similar to the console tab</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
+                        <property name="label_xalign">0</property>
+                        <child>
+                          <widget class="GtkAlignment" id="alignment8">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="left_padding">12</property>
+                            <child>
+                              <widget class="GtkVBox" id="vbox6">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <child>
+                                  <widget class="GtkCheckButton" id="systrayCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Enable systray</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                  </packing>
+                                </child>
+                                <child>
+                                  <widget class="GtkCheckButton" id="titleUpdateCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Show emerge progress in title - similar to the console tab</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                                <child>
+                                  <widget class="GtkCheckButton" id="minimizeCheck">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="label" translatable="yes">Hide on minimization (only if systray is enabled)</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                    <property name="position">2</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label3">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="label" translatable="yes">&lt;b&gt;General Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
                       </packing>
                     </child>
                     <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <widget class="GtkCheckButton" id="systrayCheck">
+                      <widget class="GtkFrame" id="consoleFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Enable systray</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
+                        <property name="label_xalign">0</property>
+                        <child>
+                          <widget class="GtkAlignment" id="alignment9">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="bottom_padding">5</property>
+                            <property name="left_padding">12</property>
+                            <property name="right_padding">5</property>
+                            <child>
+                              <widget class="GtkHBox" id="hbox1">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="spacing">5</property>
+                                <child>
+                                  <widget class="GtkLabel" id="label11">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="xalign">0</property>
+                                    <property name="label" translatable="yes">Console Font</property>
+                                  </widget>
+                                </child>
+                                <child>
+                                  <widget class="GtkFontButton" id="consoleFontBtn">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="receives_default">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="response_id">0</property>
+                                    <property name="title" translatable="yes">Chose a console font</property>
+                                    <property name="use_font">True</property>
+                                    <property name="use_size">True</property>
+                                    <property name="show_style">False</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label8">
+                            <property name="visible">True</property>
+                            <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                            <property name="label" translatable="yes">&lt;b&gt;Console Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="position">2</property>
+                        <property name="position">1</property>
                       </packing>
                     </child>
                     <child>
-                      <widget class="GtkCheckButton" id="minimizeCheck">
+                      <widget class="GtkFrame" id="tabFrame">
                         <property name="visible">True</property>
-                        <property name="can_focus">True</property>
                         <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="label" translatable="yes">Hide on minimization (only if systray is enabled)</property>
-                        <property name="response_id">0</property>
-                        <property name="draw_indicator">True</property>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="position">3</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkHBox" id="hbox1">
-                        <property name="visible">True</property>
-                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="spacing">5</property>
+                        <property name="label_xalign">0</property>
                         <child>
-                          <widget class="GtkLabel" id="label11">
+                          <widget class="GtkAlignment" id="alignment10">
                             <property name="visible">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="xalign">0</property>
-                            <property name="label" translatable="yes">Console Font</property>
+                            <property name="bottom_padding">5</property>
+                            <property name="left_padding">12</property>
+                            <property name="right_padding">5</property>
+                            <child>
+                              <widget class="GtkVBox" id="vbox7">
+                                <property name="visible">True</property>
+                                <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                <property name="spacing">5</property>
+                                <child>
+                                  <widget class="GtkHBox" id="hbox2">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="homogeneous">True</property>
+                                    <child>
+                                      <widget class="GtkLabel" id="label15">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">Package Tabs</property>
+                                      </widget>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkComboBox" id="packageTabCombo">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="items" translatable="yes"></property>
+                                      </widget>
+                                      <packing>
+                                        <property name="position">1</property>
+                                      </packing>
+                                    </child>
+                                  </widget>
+                                </child>
+                                <child>
+                                  <widget class="GtkHBox" id="hbox4">
+                                    <property name="visible">True</property>
+                                    <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                    <property name="homogeneous">True</property>
+                                    <child>
+                                      <widget class="GtkLabel" id="label21">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="xalign">0</property>
+                                        <property name="label" translatable="yes">System Tabs</property>
+                                      </widget>
+                                    </child>
+                                    <child>
+                                      <widget class="GtkComboBox" id="systemTabCombo">
+                                        <property name="visible">True</property>
+                                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
+                                        <property name="items" translatable="yes"></property>
+                                      </widget>
+                                      <packing>
+                                        <property name="position">1</property>
+                                      </packing>
+                                    </child>
+                                  </widget>
+                                  <packing>
+                                    <property name="position">1</property>
+                                  </packing>
+                                </child>
+                              </widget>
+                            </child>
                           </widget>
                         </child>
                         <child>
-                          <widget class="GtkFontButton" id="consoleFontBtn">
+                          <widget class="GtkLabel" id="label9">
                             <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
                             <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                            <property name="response_id">0</property>
-                            <property name="title" translatable="yes">Chose a console font</property>
-                            <property name="use_font">True</property>
-                            <property name="use_size">True</property>
-                            <property name="show_style">False</property>
+                            <property name="label" translatable="yes">&lt;b&gt;Tab Options&lt;/b&gt;</property>
+                            <property name="use_markup">True</property>
                           </widget>
                           <packing>
-                            <property name="position">1</property>
+                            <property name="type">label_item</property>
                           </packing>
                         </child>
                       </widget>
                       <packing>
                         <property name="expand">False</property>
-                        <property name="padding">5</property>
-                        <property name="position">4</property>
+                        <property name="position">2</property>
                       </packing>
                     </child>
                   </widget>
@@ -1927,14 +2100,17 @@
     <property name="skip_pager_hint">True</property>
     <property name="urgency_hint">True</property>
     <property name="has_separator">False</property>
+    <property name="program_name">Portato</property>
     <property name="copyright" translatable="yes">This software is licensed under the terms of the GPLv2.
 Copyright (C) 2006-2007 René 'Necoro' Neumann &lt;necoro@necoro.net&gt;</property>
     <property name="comments" translatable="yes">A Portage GUI</property>
     <property name="website">http://portato.necoro.net</property>
     <property name="authors">René 'Necoro' Neumann
 
-Many thanks to the Porthole team which often inspired me or gave me hints.
-(And sometimes I even copied files ^^ ;))</property>
+Thanks goto:
+	- The Porthole team, which often inspired me and gave me hints :)
+	- franzf, who often tested and gave comments
+	- the Sabayon-Distro for making Portato the default Portage-GUI</property>
     <property name="translator_credits">Catalan - Roger Calvó
 German - René 'Necoro' Neumann</property>
     <property name="artists">p4r4d0x (inspired by wolfden)</property>
=== portato/backend/portage/system.py
==================================================================
--- portato/backend/portage/system.py	(revision 636)
+++ portato/backend/portage/system.py	(patch 0.8.9.3 level 1)
@@ -70,6 +70,7 @@
 		default_opts = self.get_global_settings("EMERGE_DEFAULT_OPTS")
 		opts = dict(os.environ)
 		opts.update(TERM = "xterm") # emulate terminal :)
+		opts.update(PAGER = "less") # force less
 
 		if default_opts:
 			opt_list = default_opts.split()
@@ -141,6 +142,7 @@
 			return list_of_packages
 
 	def get_global_settings (self, key):
+		self.settings.settings.reset()
 		return self.settings.settings[key]
 
 	def find_best (self, list, only_cpv = False):
=== portato/backend/package.py
==================================================================
--- portato/backend/package.py	(revision 636)
+++ portato/backend/package.py	(patch 0.8.9.3 level 1)
@@ -12,6 +12,7 @@
 
 from __future__ import absolute_import
 
+from ..helper import debug
 from . import _Package, system, flags
 
 class Package (_Package):
@@ -96,15 +97,22 @@
 		@rtype: string[]"""
 
 		i_flags = self.get_global_settings("USE", installed = False).split()
+		m_flags = system.get_global_settings("USE").split()
 		for f in self.get_new_use_flags():
+			removed = False
+
+			if f[0] == "~":
+				f = f[1:]
+				removed = True
 			
 			if f[0] == '-':
-				if flags.invert_use_flag(f) in i_flags:
+				if flags.invert_use_flag(f) in i_flags and not (removed and flags.invert_use_flag(f) in m_flags):
 					i_flags.remove(flags.invert_use_flag(f))
-			
+				
 			elif f not in i_flags:
-				i_flags.append(f)
-		
+				if not (removed and flags.invert_use_flag(f) in m_flags):
+					i_flags.append(f)
+
 		return i_flags
 
 	def set_use_flag (self, flag):
@@ -130,7 +138,7 @@
 		@returns: USE_EXPAND-value on success
 		@rtype: string or None"""
 
-		if not suggest is None:
+		if suggest is not None:
 			if flag.startswith(suggest.lower()):
 				return suggest
 
=== portato/backend/flags.py
==================================================================
--- portato/backend/flags.py	(revision 636)
+++ portato/backend/flags.py	(patch 0.8.9.3 level 1)
@@ -10,7 +10,7 @@
 #
 # Written by René 'Necoro' Neumann <necoro@necoro.net>
 
-from __future__ import absolute_import
+from __future__ import absolute_import, with_statement
 
 import os
 import os.path
@@ -250,12 +250,18 @@
 				if added: del newUseFlags[-1] # we currently added it as an extra option - delete it
 				added = True
 				jumpOut = False
-				for t in [(file, line, invFlag, False),(file, line, flag, True)]:
+				for t in ((file, line, invFlag, False),(file, line, flag, True)):
 					if t in newUseFlags[cpv]:
 						newUseFlags[cpv].remove(t)
 						jumpOut = True
-						break
-				if not jumpOut:	newUseFlags[cpv].append((file, line, invFlag, True))
+						# break # don't break as both cases can be valid (see below)
+				if not jumpOut:	
+					newUseFlags[cpv].append((file, line, invFlag, True))
+					
+					# we removed the inverted from package.use - but it is still enabled somewhere else
+					# so set it explicitly here
+					if invFlag in pkg.get_actual_use_flags():
+						newUseFlags[cpv].append((file, line, flag, False))
 				break
 			
 			# we want to duplicate the flag --> ignore
@@ -306,17 +312,17 @@
 	if is_package(cpv):
 		cpv = cpv.get_cpv()
 
-	list2return = []
+	list2return = set()
 	try:
 		for file, line, flag, remove in newUseFlags[cpv]:
 			if remove:
-				list2return.append(invert_use_flag(flag))
+				list2return.add("~"+invert_use_flag(flag))
 			else:
-				list2return.append(flag)
+				list2return.add(flag)
 	except KeyError:
 		pass
 
-	return list2return
+	return list(list2return)
 
 def write_use_flags ():
 	"""This writes our changed useflags into the file."""
@@ -342,9 +348,11 @@
 	file_cache = {} # cache for having to read the file only once: name->[lines]
 	for cpv in newUseFlags:
 		flagsToAdd = [] # this is used for collecting the flags to be inserted in a _new_ line
+
+		newUseFlags[cpv].sort(key = lambda x: x[3]) # now the flags are sorted in a manner, that removal comes after appending
+
 		for file, line, flag, delete in newUseFlags[cpv]:
 			line = int(line) # it is saved as a string so far!
-			
 			# add new line
 			if line == -1:
 				flagsToAdd.append(flag)
@@ -352,31 +360,30 @@
 			else:
 				if not file in file_cache:
 					# read file
-					f = open(file, "r")
-					lines = []
-					i = 1
-					while i < line: # stop at the given line
-						lines.append(f.readline())
-						i += 1
-					l = f.readline().split(" ")
-					
-					# delete or insert
-					if delete:
-						remove(flag,l)
-					else:
-						insert(flag,l)
-					lines.append(" ".join(l))
-					
-					# read the rest
-					lines.extend(f.readlines())
-					
-					file_cache[file] = lines
-					f.close()
+					with open(file, "r") as f:
+						lines = []
+						i = 1
+						while i < line: # stop at the given line
+							lines.append(f.readline())
+							i += 1
+						l = f.readline().split(" ")
+						
+						# delete or insert
+						if delete:
+							remove(flag,l)
+						else:
+							insert(flag,l)
+						lines.append(" ".join(l))
+						
+						# read the rest
+						lines.extend(f.readlines())
+						
+						file_cache[file] = lines
 
 				else: # in cache
 					l = file_cache[file][line-1].split(" ")
 					if delete:
-						remove(flag,l)
+						remove(flag, l)
 					else:
 						insert(flag,l)
 					file_cache[file][line-1] = " ".join(l)
=== portato/plistener.py
==================================================================
--- portato/plistener.py	(revision 636)
+++ portato/plistener.py	(patch 0.8.9.3 level 1)
@@ -93,7 +93,7 @@
 			try:
 				import shm_wrapper as shm
 			except ImportError:
-				from portato.shm import shm_wrapper as shm
+				from portato._shm import shm_wrapper as shm
 
 			self._mem = shm.SharedMemoryHandle(mem)
 			self._sig = shm.SemaphoreHandle(sig)
=== etc/portato.cfg
==================================================================
--- etc/portato.cfg	(revision 636)
+++ etc/portato.cfg	(patch 0.8.9.3 level 1)
@@ -73,4 +73,13 @@
 ; sets the font of the console - string values
 consolefont = Monospace 11
 
+; sets the position of the tabs of the two notebooks
+; allowed positions:
+;						- 1 : top
+;						- 2 : bottom
+;						- 3 : left
+;						- 4 : right
+packagetabpos = 2
+systemtabpos = 2
+
 # vim:ts=4:sw=4:ft=cfg
=== shm/__init__.py
==================================================================
=== shm/shm_wrapper.py
==================================================================
--- shm/shm_wrapper.py	(revision 636)
+++ shm/shm_wrapper.py	(patch 0.8.9.3 level 1)
@@ -1,301 +0,0 @@
-# shm_wrapper - A wrapper for the shm module which provides access
-# to System V shared memory and semaphores on *nix systems.
-#
-# Copyright (c) 2007 by Philip Semanchuk
-# Contact info at http://NikitaTheSpider.com/
-#
-# This program is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License
-# as published by the Free Software Foundation; either version 2
-# of the License, or (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-
-# Python modules
-import random
-import sys
-
-# Third party modules
-import shm
-
-r"""shm_wrapper - A wrapper for the shm module which provides access
-to System V shared memory and semaphores on *nix systems.
-
-The module shm is a Python wrapper around system functions like shmget. This
-module in turn offers higher-level, more Pythonic access to shared memory and
-semaphores.
-
-Full documentation is online at http://NikitaTheSpider.com/python/shm/
-
-"""
-
-def create_memory(size, permissions = 0666, InitCharacter = ' '):
-    """ Creates a new shared memory segment. One can destroy it either by calling the
-    module-level method remove_memory() or by calling the .remove() method of a handle to
-    said memory.
-    """
-    memory = None
-
-    # I create the memory using a randomly-generated key. I keep trying until I find one
-    # that works or until I hit an error.
-    while not memory:
-        key = random.randint(1, sys.maxint - 1)
-        try:
-            memory = shm.create_memory(key, size, permissions)
-        except shm.error, ExtraData:
-            if shm.memory_haskey(key):
-                # Oops, bad luck, the key exists. I'll try another. I can't call
-                # memory_haskey() before calling create_memory() because that would create
-                # a race condition where I could verify a key is not used but then another
-                # process could call create_memory() with that key before I got a chance to
-                # do so.
-                pass
-            else:
-                # Uh-oh, something fundamental is wrong.
-                raise shm.error, ExtraData
-
-    # Here I implicitly discard the memory handle object returned to me by shm and instead
-    # return my own handle to the shared memory segment.
-    memory = SharedMemoryHandle(key)
-
-    memory.write(InitCharacter[0] * memory.size)
-
-    return memory
-
-
-def remove_memory(key):
-    # Destroys the shared memory segment. Raises KeyError if the key doesn't exist.
-    shm.remove_memory(shm.getshmid(key))
-
-
-class SharedMemoryHandle(object):
-    def __init__(self, key):
-        self._MemoryHandle = None
-
-        # getshmid will raise a KeyError if there's no memory segment with this key.
-        shmid = shm.getshmid(key)
-        self._MemoryHandle = shm.memory(shmid)
-
-
-    def __del__(self):
-        if self._MemoryHandle:
-            # This will raise an error if the memory has been destroyed.
-            try:
-                if self._MemoryHandle.attached:
-                    self._MemoryHandle.detach()
-            except shm.error:
-                pass
-
-
-    def remove(self):
-        if self._MemoryHandle:
-            if self._MemoryHandle.attached:
-                self._MemoryHandle.detach()
-
-            shm.remove_memory(self._MemoryHandle.shmid)
-            self._MemoryHandle = None
-
-
-    def read(self, NumberOfBytes = 0, offset = 0):
-        if not self._MemoryHandle.attached:
-            self._MemoryHandle.attach()
-
-        if not NumberOfBytes:
-            NumberOfBytes = self._MemoryHandle.size - offset
-
-        return self._MemoryHandle.read(NumberOfBytes, offset)
-
-
-    def write(self, s, offset = 0):
-        if not self._MemoryHandle.attached:
-            self._MemoryHandle.attach()
-
-        self._MemoryHandle.write(s, offset)
-
-
-    # Properties start here ================================================================
-
-    # key
-    def __get_key(self): return self._MemoryHandle.key
-    def __set_key(self, foo): raise AttributeError
-    key = property(__get_key, __set_key)
-
-    # size of segment
-    def __get_size(self): return self._MemoryHandle.size
-    def __set_size(self, foo): raise AttributeError
-    size = property(__get_size, __set_size)
-
-    # permissions
-    def __get_permissions(self): return self._MemoryHandle.perm
-    def __set_permissions(self, permissions): self._MemoryHandle.setperm(permissions)
-    permissions = property(__get_permissions, __set_permissions)
-
-    # The number of processes currently attached to this memory segment.
-    def __get_number_attached(self): return self._MemoryHandle.nattch
-    def __set_number_attached(self, foo): raise AttributeError
-    number_attached = property(__get_number_attached, __set_number_attached)
-
-    # segment's uid
-    def __get_uid(self): return self._MemoryHandle.uid
-    def __set_uid(self, uid): self._MemoryHandle.setuid(uid)
-    uid = property(__get_uid, __set_uid)
-
-    # segment's gid
-    def __get_gid(self): return self._MemoryHandle.gid
-    def __set_gid(self, gid): self._MemoryHandle.setgid(gid)
-    gid = property(__get_gid, __set_gid)
-
-    # Creator uid (read-only)
-    def __get_creator_uid(self): return self._MemoryHandle.cuid
-    def __set_creator_uid(self, foo): raise AttributeError
-    creator_uid = property(__get_creator_uid, __set_creator_uid)
-
-    # Creator gid (read-only)
-    def __get_creator_gid(self): return self._MemoryHandle.cgid
-    def __set_creator_gid(self, foo): raise AttributeError
-    creator_gid = property(__get_creator_gid, __set_creator_gid)
-
-    # Creator pid (read-only)
-    def __get_creator_pid(self): return self._MemoryHandle.cpid
-    def __set_creator_pid(self, foo): raise AttributeError
-    creator_pid = property(__get_creator_pid, __set_creator_pid)
-
-    # pid of last process to operate on this segment (read-only)
-    def __get_last_pid(self): return self._MemoryHandle.lpid
-    def __set_last_pid(self, foo): raise AttributeError
-    last_pid = property(__get_last_pid, __set_last_pid)
-
-
-
-def create_semaphore(InitialValue = 1, permissions = 0666):
-    """ Creates a new semaphore. One can destroy it either by calling the
-    module-level method remove_semaphore() or by calling the .remove() method of a
-    handle to said semaphore.
-    """
-    semaphore = None
-
-    # I create the semaphore using a randomly-generated key. I keep trying until I find one
-    # that works or until I hit an error.
-    while not semaphore:
-        key = random.randint(1, sys.maxint - 1)
-        try:
-            semaphore = shm.create_semaphore(key, InitialValue, permissions)
-        except shm.error, ExtraData:
-            if shm.semaphore_haskey(key):
-                # Oops, bad luck, the key exists. I'll try another. I can't call
-                # memory_haskey() before calling create_semaphore() because that would create
-                # a race condition where I could verify a key is not used but then another
-                # process could call create_semaphore() with that key before I got a chance to
-                # do so.
-                pass
-            else:
-                # Uh-oh, something fundamental is wrong.
-                raise ExtraData
-
-    # Here I implicitly discard the semaphore object returned to me by shm and instead
-    # return my own handle to the semaphore.
-    return SemaphoreHandle(key)
-
-
-def remove_semaphore(key):
-    # Destroys the semaphore. Raises KeyError if the key doesn't exist.
-    shm.remove_semaphore(shm.getsemid(key))
-
-
-class SemaphoreHandle(object):
-    def __init__(self, key):
-        # getsemid will raise a KeyError if appropriate.
-        self._SemaphoreHandle = shm.semaphore(shm.getsemid(key))
-
-
-    def remove(self):
-        shm.remove_semaphore(self._SemaphoreHandle.semid)
-        self._SemaphoreHandle = None
-
-
-    def P(self):
-        # P = prolaag = probeer te verlagen (try to decrease)
-        self._SemaphoreHandle.P()
-
-
-    def V(self):
-        # V = verhoog (increase)
-        self._SemaphoreHandle.V()
-
-
-    def Z(self):
-        # Z = block until Zee semaphore is Zero
-        self._SemaphoreHandle.Z()
-
-
-    # Properties start here ================================================================
-    def __get_key(self): return self._SemaphoreHandle.key
-    def __set_key(self, foo): raise AttributeError
-    key = property(__get_key, __set_key)
-
-
-    def __get_value(self): return self._SemaphoreHandle.val
-    def __set_value(self, value): self._semaphore.setval(value)
-    value = property(__get_value, __set_value)
-
-
-    def __get_WaitingForZero(self): return self._SemaphoreHandle.zcnt
-    def __set_WaitingForZero(self, foo): raise AttributeError
-    WaitingForZero = property(__get_WaitingForZero, __set_WaitingForZero)
-
-
-    def __get_WaitingForNonZero(self): return self._SemaphoreHandle.ncnt
-    def __set_WaitingForNonZero(self, foo): raise AttributeError
-    WaitingForNonZero = property(__get_WaitingForNonZero, __set_WaitingForNonZero)
-
-
-    def __get_blocking(self): return self._SemaphoreHandle.blocking
-    def __set_blocking(self, block): self._SemaphoreHandle.setblocking(block)
-    blocking = property(__get_blocking, __set_blocking)
-
-
-    def __get_undo(self): raise AttributeError
-    def __set_undo(self, undo): self._SemaphoreHandle.setundo(undo)
-    undo = property(__get_undo, __set_undo)
-
-
-    # segment's uid
-    def __get_uid(self): return self._SemaphoreHandle.uid
-    def __set_uid(self, uid): self._SemaphoreHandle.setuid(uid)
-    uid = property(__get_uid, __set_uid)
-
-
-    # segment's gid
-    def __get_gid(self): return self._SemaphoreHandle.gid
-    def __set_gid(self, gid): self._SemaphoreHandle.setgid(gid)
-    gid = property(__get_gid, __set_gid)
-
-
-    # Creator uid (read-only)
-    def __get_creator_uid(self): return self._SemaphoreHandle.cuid
-    def __set_creator_uid(self, foo): raise AttributeError
-    creator_uid = property(__get_creator_uid, __set_creator_uid)
-
-
-    # Creator gid (read-only)
-    def __get_creator_gid(self): return self._SemaphoreHandle.cgid
-    def __set_creator_gid(self, foo): raise AttributeError
-    creator_gid = property(__get_creator_gid, __set_creator_gid)
-
-
-    # Creator pid -- since semaphores have a lot of the same properties as memory
-    # objects, one would expect creator PID to be exposed here, but it isn't
-    # made available by the system (true AFAICT for BSDs, OS X and Solaris).
-
-
-    # pid of last process to operate on this segment (read-only)
-    def __get_last_pid(self): return self._SemaphoreHandle.lpid
-    def __set_last_pid(self, foo): raise AttributeError
-    last_pid = property(__get_last_pid, __set_last_pid)
=== shm/shmmodule.c
==================================================================
--- shm/shmmodule.c	(revision 636)
+++ shm/shmmodule.c	(patch 0.8.9.3 level 1)
@@ -1,1396 +0,0 @@
-/****************************************************************************
- *
- * shmmodule.c Copyright 1997, 1998 by INRIA. All rights reserved.
- *
- * Permission is hereby granted, free of charge, to any person obtaining
- * a copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY WARRANTIES, EXPRESS OR IMPLIED,
- * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
- * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- *
- * IN NO EVENT SHALL THE INRIA OR THE AUTHORS BE LIABLE FOR ANY DIRECT,
- * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES,
- * INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,
- * LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION, HOWEVER CAUSED AND
- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT,
- * INCLUDING NEGLIGENCE OR OTHERWISE, ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- ***************************************************************************/
-
-/* Python Shared Memory module 
-   Written by Vladimir Marangozov  
-   Adopted by Philip Semanchuk 
-
-  This module provides an interface to System V shared memory IPC.
-
-  Version history:
-  - 1.0 (sometime in the 1990s) - Released by Mr. Marangozov
-  - 1.1 (Feb 2007) - Released by me, Philip Semanchuk. Fixes a few bugs (including some 
-        memory leaks) and adds the ability to read the blocking flag on semaphores.
-  - 1.1.1 (Mar 2007)- Updated setup.py to handle compile options for Linux users.
-  - 1.1.2 (Nov 2007) - Fixed a sprintf() format in repr to handle size_t.
-  - 1.1.3 (Nov 2007) - Changed #define of key to _key instead of __key for OS X Leopard.
-        Thanks to Bill Hart.
-  - 1.1.4 (Jan 2008) - Changed the reference to key in the ipc_perm structure to the 
-        explicit #define IPC_PERM_KEY_NAME. 
-
-  See http://NikitaTheSpider.com/python/shm/ for more thorough documentation, a more Pythonic 
-  wrapper, updates, contact info, setup.py, etc.
-
-
-  Module interface:
-
-  - shm.create_memory(int Key, int Size [,int Perm=0666]) --> object
-  - shm.create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object
-  - shm.error
-  - shm.ftok(string Path, int ProjId) --> int
-  - shm.getsemid(int Key) --> int
-  - shm.getshmid(int Key) --> int
-  - shm.memory(int Shmid) --> object
-  - shm.memory_haskey(int Key) --> int
-  - shm.remove_memory(int Shmid) --> None
-  - shm.remove_semaphore(int Semid) --> None
-  - shm.semaphore(int Semid) --> object
-  - shm.semaphore_haskey(int Key) --> int
-
-  Memory Objects:
-
-  + Members:
-
-    - m.addr	- attachment address in the process address space
-    - m.attached	- 0|1
-    - m.cgid	- gid of creator
-    - m.cpid	- pid of creator
-    - m.cuid	- uid of creator
-    - m.gid		- gid of owner
-    - m.key		- segment key or IPC_PRIVATE (=0)
-    - m.lpid	- pid of last shmop
-    - m.nattch	- current # of attached processes
-    - m.perm	- operation permission
-    - m.shmid	- shared memory segment id
-    - m.size	- segment size
-    - m.uid		- uid of owner
-
-  + Methods:
-
-    - m.attach([int Addr=0 [,int How=0]]) --> None
-    - m.detach() --> None
-    - m.read(int Nbytes [,int Offset=0]) --> string
-    - m.setgid(int Gid) --> None
-    - m.setperm(int Perm) --> None
-    - m.setuid(int Uid) --> None
-    - m.write(string Data [,int Offset=0]) --> None
-
-  Semaphore Objects:
-
-  + Members:
-
-    - s.cgid        - gid of creator
-    - s.cuid        - uid of creator
-    - s.gid         - gid of owner
-    - s.key         - semaphore key or IPC_PRIVATE (=0)
-    - s.lpid        - pid of last semop
-    - s.ncnt        - current # of processes waiting for s.val > 0
-    - s.perm        - operation permission
-    - s.semid       - semaphore id
-    - s.uid         - uid of owner
-    - s.val         - value of the semaphore counter
-    - s.zcnt        - current # of processes waiting for s.val == 0
-    - s.blocking    - whether or not the semaphore is in blocking mode
-
-  + Methods:
-
-    - s.P() --> None		- blocks if s.val == 0; decrements s.val
-    - s.V() --> None		- increments s.val
-    - s.Z() --> None		- blocks until s.val == 0
-    - s.setblocking(0|1) --> None
-    - s.setgid(int Gid) --> None
-    - s.setperm(int Perm) --> None
-    - s.setuid(int Uid) --> None
-    - s.setundo(0|1) --> None
-    - s.setval(int Value) --> None
-
-*/
-
-/* ------------------------------------------------------------------------- */
-#include "Python.h"
-#include "structmember.h"
-
-/* v1.1 - added */
-#ifdef __FreeBSD__
-#include <machine/param.h>  /* for system definition of PAGE_SIZE */
-#endif
-
-#include <sys/types.h>
-#include <sys/ipc.h>		/* for system's IPC_xxx definitions */
-#include <sys/shm.h>		/* for shmget, shmat, shmdt, shmctl */
-#include <sys/sem.h>		/* for semget, semctl, semop */
-
-/* v1.1.4 - The name of this member varies and is sniffed out by setup.py. */
-#if defined(ZERO_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME   key
-#elif defined(ONE_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME  _key
-#elif defined(TWO_UNDERSCORE_KEY)
-#define IPC_PERM_KEY_NAME __key
-#endif
-
-/*
--- Exception type for errors detected by this module.
-*/
-
-static PyObject *PyShm_Error;
-
-/*
--- Convenience function to raise an error according to errno.
-*/
-
-static PyObject *
-PyShm_Err(void)
-{
-    return PyErr_SetFromErrno(PyShm_Error);
-}
-
-/*
--- The object holding a shared memory segment
-*/
-
-typedef struct {
-    PyObject_HEAD
-    int shmid;			/* shared memory id	*/
-    int mode;			/* attachment mode	*/
-    void *addr;			/* shmseg start address	*/
-    struct shmid_ds ds;		/* data structure	*/
-} PyShmMemoryObject;
-
-staticforward PyTypeObject	PyShmMemory_Type;
-
-#define PyShmObj		PyShmMemoryObject
-#define PyShmMemory_Check(op)	((op)->ob_type == &PyShmMemory_Type)
-
-/*
--- The object holding a semaphore
-*/
-
-typedef struct {
-    PyObject_HEAD
-    int semid;			/* semaphore id		*/
-    short opflag;		/* IPC_NOWAIT, SEM_UNDO	*/
-    struct semid_ds ds;		/* data structure	*/
-} PyShmSemaphoreObject;
-
-#ifndef HAVE_UNION_SEMUN
-union semun {
-    int val;                    /* used for SETVAL only */
-    struct semid_ds *buf;       /* for IPC_STAT and IPC_SET */
-    unsigned short *array;      /* used for GETALL and SETALL */
-};
-#endif
-
-typedef union semun semctl_arg;
-
-staticforward PyTypeObject	PyShmSemaphore_Type;
-
-#define PyShmSemObj		PyShmSemaphoreObject
-#define PyShmSemaphore_Check(op) ((op)->ob_type == &PyShmSemaphore_Type)
-
-/*
--- Internal dictionaries for Python memory and semaphore objects
-*/
-
-static PyObject *shm_dict = NULL;
-static PyObject *sem_dict = NULL;
-
-/************************************************************/
-/*                       Memory Objects                     */
-/************************************************************/
-
-/* This is to check the validity of a Python memory object
-   (and to refresh its data status structure). Notably, we
-   have to check that the real memory segment it points to
-   is still in memory and hasn't changed (test its id and
-   size). It could be that the segment has been removed and
-   created again by someone else with the same key. This is
-   fine as far as the segment (1) has the same id and size,
-   and (2) is accessible via shmctl. If you have a better
-   test, you're welcome :-) */
-
-static int
-check_memory_identity(PyShmObj *o)
-{
-    int new_shmid;
-    int old_shmid = o->shmid;
-    int old_size = o->ds.shm_segsz;
-    key_t old_key = o->ds.shm_perm.IPC_PERM_KEY_NAME;
-
-    /*
-    -- 1. Try to get the segment identified by the old key (if not IPC_PRIVATE)
-    -- 2. On failure or on mismatch of the new and the old id -> fail.
-    -- 3. Try to refresh the object's status using the new id.
-    -- 4. On failure (the segment cannot be accessed) -> fail.
-    -- 5. Finaly, compare the old size and the one we got via the new id.
-    */
-    if (old_key != IPC_PRIVATE) {
-        new_shmid = shmget(old_key, 0, 0);
-        if (new_shmid != old_shmid)
-            return 0;
-    }
-    else
-        new_shmid = old_shmid;
-    if ((shmctl(new_shmid, IPC_STAT, &(o->ds)) != -1) &&
-        (old_size == o->ds.shm_segsz) &&
-	    (old_key == o->ds.shm_perm.IPC_PERM_KEY_NAME))
-        return 1;
-    return 0;
-}
-
-/* Convenience macro for updating the shared memory data status structure */
-
-#define refresh_memory_status(o)					\
-    if (!check_memory_identity(o)) {					\
-	   PyErr_SetString(PyShm_Error, "can't access shared memory segment");		\
-	   return NULL;							\
-    }
-
-/*
--- attach([,address=0 [,how=0]])
-*/
-
-/* Attach the shared memory segment to the process address space */
-
-static PyObject *
-PyShmMemory_attach(PyShmObj *self, PyObject *args)
-{
-    unsigned long address = 0;
-    int mode = 0;
-    void *addr, *old_addr;
-
-    if (!PyArg_ParseTuple(args, "|li", &address, &mode))
-	   return NULL;
-    refresh_memory_status(self);
-    /* return if already attached with the same mode to the same address */
-    if ((self->addr != NULL) && (self->mode == mode) &&
-        ((address == 0) || (self->addr == (void *)address))) {
-    	Py_INCREF(Py_None);
-    	return Py_None;
-    }
-    /* perform the attach */
-    addr = (void *)shmat(self->shmid, (void *)address, mode);
-    if (addr  == (void *)-1)
-	   return PyShm_Err();
-    old_addr = self->addr;
-    self->addr = addr;
-    self->mode = mode;
-    /* XXX - multiple attachments of the same shared memory segment
-             to different locations of the process address space is
-	     not supported. */
-    shmdt(old_addr);
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- detach()
-*/
-
-/* Detach the memory object from the process address space */
-
-static PyObject *
-PyShmMemory_detach(PyShmObj *self, PyObject *args)
-{
-    if (!PyArg_NoArgs(args))
-	   return NULL;
-    if (self->addr != NULL) {
-        refresh_memory_status(self);
-        if (shmdt(self->addr) != 0)
-            return PyShm_Err();
-        self->addr = NULL;		/* mark as detached */
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- read(int Nbytes [,int Offset=0]) --> string
-*/
-
-/* Return a string of n bytes peeked from the shared memory segment */
-
-static PyObject *
-PyShmMemory_read(PyShmObj *self, PyObject *args)
-{
-    unsigned long n, offset = 0;
-    char buf[128];
-    char *addr;
-
-    if (!PyArg_ParseTuple(args, "l|l", &n, &offset))
-	    return NULL;
-    refresh_memory_status(self);
-    if (self->addr == NULL) {
-        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
-        return NULL;
-    }
-    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
-        sprintf(buf, "read() argument%s exceed%s upper memory limit",
-            offset ? "s" : "", offset ? "" : "s");
-        PyErr_SetString(PyShm_Error, buf);
-        return NULL;
-    }
-    addr = (char *)((unsigned long)self->addr + offset);
-    return PyString_FromStringAndSize(addr, n);
-}
-
-/*
--- setgid(int Gid)
-*/
-
-static PyObject *
-PyShmMemory_setgid(PyShmObj *self, PyObject *args)
-{
-    long newgid, oldgid;
-
-    if (!PyArg_ParseTuple(args, "l", &newgid))
-	    return NULL;
-    refresh_memory_status(self);
-    oldgid = (long)self->ds.shm_perm.gid;
-    self->ds.shm_perm.gid = (gid_t)newgid;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.gid = (gid_t)oldgid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setperm(int Perm)
-*/
-
-static PyObject *
-PyShmMemory_setperm(PyShmObj *self, PyObject *args)
-{
-    long newmode, oldmode;
-
-    if (!PyArg_ParseTuple(args, "l", &newmode))
-        return NULL;
-    refresh_memory_status(self);
-    newmode &= 0777;	/* permission bits only */
-    oldmode = (mode_t)self->ds.shm_perm.mode;
-    self->ds.shm_perm.mode ^= 0777;
-    self->ds.shm_perm.mode |= (mode_t)newmode;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.mode = (mode_t)oldmode;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setuid(int Uid)
-*/
-
-static PyObject *
-PyShmMemory_setuid(PyShmObj *self, PyObject *args)
-{
-    long newuid, olduid;
-
-    if (!PyArg_ParseTuple(args, "l", &newuid))
-        return NULL;
-    refresh_memory_status(self);
-    olduid = (long)self->ds.shm_perm.uid;
-    /* v1.1 - fixed typo that set the group id rather than the user id */
-    self->ds.shm_perm.uid = (uid_t)newuid;
-    if (shmctl(self->shmid, IPC_SET, &(self->ds)) == -1) {
-        self->ds.shm_perm.uid = (uid_t)olduid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- write(string Data [, int Offset=0])
-*/
-
-/* Write a string to the shared memory segment. */
-
-static PyObject *
-PyShmMemory_write(PyShmObj *self, PyObject *args)
-{
-    char *data;
-    unsigned long n, offset = 0;
-    char buf[128];
-    char *addr;
-
-    if (!PyArg_ParseTuple(args, "s#|l", &data, &n, &offset))
-        return NULL;
-    refresh_memory_status(self);
-    if (self->addr == NULL) {
-        PyErr_SetString(PyShm_Error, "R/W operation on detached memory");
-        return NULL;
-    }
-    if (self->mode & SHM_RDONLY) {
-        PyErr_SetString(PyShm_Error,
-                "can't write on read-only attached memory");
-        return NULL;
-    }
-    if ((unsigned long)self->ds.shm_segsz < (n + offset)) {
-        sprintf(buf, "write() argument%s exceed%s upper memory limit",
-            offset ? "s" : "", offset ? "" : "s");
-        PyErr_SetString(PyShm_Error, buf);
-        return NULL;
-    }
-    addr = (void *)((unsigned long)self->addr + offset);
-    memcpy(addr, data, n);
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of methods for shared memory objects */
-
-static PyMethodDef memory_methods[] = {
-    {"attach",	(PyCFunction)PyShmMemory_attach,	1,
-     "attach([int Addr=0 [,int How=0]]) --> None | except shm.error"},
-    {"detach",	(PyCFunction)PyShmMemory_detach,	0,
-     "detach() --> None | except shm.error"},
-    {"read",	(PyCFunction)PyShmMemory_read,		1,
-     "read(int Nbytes [,int Offset=0]) --> string | except shm.error"},
-    {"setgid",	(PyCFunction)PyShmMemory_setgid,	1,
-     "setgid(int Gid) --> None | except shm.error"},
-    {"setperm",	(PyCFunction)PyShmMemory_setperm,	1,
-     "setperm(int Perm) --> None | except shm.error"},
-    {"setuid",	(PyCFunction)PyShmMemory_setuid,	1,
-     "setuid(int Uid) --> None | except shm.error"},
-    {"write",	(PyCFunction)PyShmMemory_write,		1,
-     "write(string Data [,int Offset=0]) --> None | except shm.error"},
-    {NULL,	NULL}		/* sentinel */
-};
-
-#define OFF(x)	offsetof(PyShmMemoryObject, x)
-#define OFF1(x)	OFF(ds) + offsetof(struct shmid_ds, x)
-#define OFF2(x)	OFF1(shm_perm) + offsetof(struct ipc_perm, x)
-
-/* List of members for shared memory objects */
-
-/* Note: member types are set in the initshm function.
-   Members which need separate processing are:
-   - addr --> it is not part of the shmid_ds structure
-   - attached --> function depending on addr
-   - nattch  --> system dependent declaration in shmid_ds (unknown type)
-   - perm --> return permission (lower 9) bits only of ds.shm_perm.mode
-*/
-
-static struct memberlist memory_memberlist[] = {
-    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
-    {"cpid",	T_INT,	OFF1(shm_cpid),		RO},	/* 1  (pid_t)  */
-    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 2  (uid_t)  */
-    {"key", T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 3  (key_t)  */
-    {"lpid",	T_INT,	OFF1(shm_lpid),		RO},	/* 4  (pid_t)  */
-    {"shmid",	T_INT,	OFF(shmid),		RO},	/* 5  (int)    */
-    {"size",	T_INT,	OFF1(shm_segsz),	RO},	/* 6  (int)    */
-    {"gid",	T_INT,	OFF2(gid),		RO},	/* 7  (gid_t)  */
-    {"uid",	T_INT,	OFF2(uid),		RO},	/* 8  (uid_t)  */
-    /* The following members are implemented without this table */
-    {"addr",	T_INT,	0,			RO},	/* 9  (void *) */
-    {"attached",T_INT,	0,			RO},	/* 10  (int)    */
-    {"nattch",	T_INT,	0,			RO},	/* 11 sys.dep. */
-    {"perm",	T_INT,	0,			RO},	/* 12 (mode_t) */
-    {NULL}			/* sentinel */
-};
-
-#undef OFF
-#undef OFF1
-#undef OFF2
-
-static void
-PyShmMemory_dealloc(PyShmObj *self)
-{
-    /* del shm_dict[key], ignore if it fails */
-    if (PyDict_DelItem(shm_dict, PyInt_FromLong(self->shmid)) == -1)
-        PyErr_Clear();
-    /* all references in the current process to the shared
-       memory segment are lost, so if attached, detach it.
-       XXX: This is not true when Python is embedded.
-
-    if (self->addr != NULL) {
-	shmdt(self->addr);
-    }
-    */
-    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
-    PyObject_Del(self);
-}
-
-static PyObject *
-PyShmMemory_getattr(PyShmObj *self, char *name)
-{
-    PyObject *res;
-
-    res = Py_FindMethod(memory_methods, (PyObject *)self, name);
-    if (res != NULL)
-        return res;
-    PyErr_Clear();
-    refresh_memory_status(self);
-    if (strcmp(name, "attached") == 0)
-        return PyInt_FromLong((self->addr == NULL) ? 0 : 1);
-    if (strcmp(name, "addr") == 0) {
-        if (self->addr != NULL)
-            return PyInt_FromLong((unsigned long)self->addr);
-        else {
-            Py_INCREF(Py_None);
-            return Py_None;
-        }
-    }
-    if (strcmp(name, "nattch") == 0)
-        return PyInt_FromLong(self->ds.shm_nattch);
-    if (strcmp(name, "perm") == 0)
-        return PyInt_FromLong(self->ds.shm_perm.mode & 0777);
-    return PyMember_Get((char *)self, memory_memberlist, name);
-}
-
-static PyObject *
-PyShmMemory_repr(PyShmObj *self, char *name)
-{
-    char buf[100];
-    char buf2[20];
-
-    refresh_memory_status(self);
-    if (self->addr == NULL)
-        sprintf(buf2, "None");
-    else
-        /* v 1.1 - changed format from %lx to %p. */
-        /* v 1.1.2 - changed %u to %zu. */
-        sprintf(buf2, "0x%p", self->addr);
-    sprintf(buf, "<%s shared memory object, id=%d, size=%zu, addr=%s>",
-	    (self->addr == NULL) ? "detached" : (self->mode & SHM_RDONLY) ?
-	    "attached RO" : "attached R/W",
-	    self->shmid,
-	    self->ds.shm_segsz,
-	    buf2);
-    return PyString_FromString(buf);
-}
-
-/* Type object for shared memory objects */
-
-static PyTypeObject PyShmMemory_Type = {
-    PyObject_HEAD_INIT(&PyType_Type)
-    0,					/*ob_size*/
-    "shared memory",			/*tp_name*/
-    sizeof(PyShmObj),			/*tp_size*/
-    0,					/*tp_itemsize*/
-    /* methods */
-    (destructor)PyShmMemory_dealloc,	/*tp_dealloc*/
-    0,					/*tp_print*/
-    (getattrfunc)PyShmMemory_getattr,	/*tp_getattr*/
-    0,					/*tp_setattr*/
-    0,					/*tp_compare*/
-    (reprfunc)PyShmMemory_repr,		/*tp_repr*/
-    0,					/*tp_as_number*/
-    0,					/*tp_as_sequence*/
-    0,					/*tp_as_mapping*/
-};
-
-/************************************************************/
-/*                     Semaphore Objects                    */
-/************************************************************/
-
-/* This is to check the validity of a Python semaphore object */
-
-static int
-check_semaphore_identity(PyShmSemObj *o)
-{
-    int new_semid;
-    int old_semid = o->semid;
-    unsigned short old_nsems = o->ds.sem_nsems;
-    key_t old_key = o->ds.sem_perm.IPC_PERM_KEY_NAME;
-    semctl_arg arg;
-
-    if (old_key != IPC_PRIVATE) {
-        new_semid = semget(old_key, 0, 0);
-        if (new_semid != old_semid)
-            return 0;
-    }
-    else
-        new_semid = old_semid;
-    arg.buf = &(o->ds);
-    if ((semctl(new_semid, 0, IPC_STAT, arg) != -1) &&
-        (old_nsems == o->ds.sem_nsems) &&
-        (old_key == o->ds.sem_perm.IPC_PERM_KEY_NAME))
-        return 1;
-    return 0;
-}
-
-/* Convenience macro for updating the semaphore data status structure */
-
-#define refresh_semaphore_status(o)					\
-    if (!check_semaphore_identity(o)) {					\
-        PyErr_SetString(PyShm_Error,					\
-                "can't access semaphore");			\
-	return NULL;							\
-    }
-
-/*
--- P()
-*/
-
-static PyObject *
-PyShmSemaphore_P(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = -1;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- V()
-*/
-
-static PyObject *
-PyShmSemaphore_V(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = 1;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- Z()
-*/
-
-static PyObject *
-PyShmSemaphore_Z(PyShmSemObj *self, PyObject *args)
-{
-    struct sembuf op[1];
-    int res;
-
-    op[0].sem_num = 0;
-    op[0].sem_op = 0;
-    op[0].sem_flg = self->opflag;
-
-    if (!PyArg_NoArgs(args))
-        return NULL;
-    refresh_semaphore_status(self);
-    res = semop(self->semid, op, (size_t)1);
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setblocking(0|1)
-*/
-
-static PyObject *
-PyShmSemaphore_setblocking(PyShmSemObj *self, PyObject *args)
-{
-    int block;
-
-    if (!PyArg_ParseTuple(args, "i", &block))
-        return NULL;
-    refresh_semaphore_status(self);
-    if (block)
-        self->opflag &= ~IPC_NOWAIT;
-    else
-        self->opflag |= IPC_NOWAIT;
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setgid(int Gid)
-*/
-
-static PyObject *
-PyShmSemaphore_setgid(PyShmSemObj *self, PyObject *args)
-{
-    long newgid, oldgid;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newgid))
-        return NULL;
-    refresh_semaphore_status(self);
-    oldgid = (long)self->ds.sem_perm.gid;
-    self->ds.sem_perm.gid = (gid_t)newgid;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.gid = (gid_t)oldgid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setperm(int Perm)
-*/
-
-static PyObject *
-PyShmSemaphore_setperm(PyShmSemObj *self, PyObject *args)
-{
-    long newmode, oldmode;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newmode))
-        return NULL;
-    refresh_semaphore_status(self);
-    newmode &= 0777;	/* permission bits only */
-    oldmode = (mode_t)self->ds.sem_perm.mode;
-    self->ds.sem_perm.mode ^= 0777;
-    self->ds.sem_perm.mode |= (mode_t)newmode;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.mode = (mode_t)oldmode;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setuid(int Uid)
-*/
-
-static PyObject *
-PyShmSemaphore_setuid(PyShmSemObj *self, PyObject *args)
-{
-    long newuid, olduid;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "l", &newuid))
-        return NULL;
-    refresh_semaphore_status(self);
-    olduid = (long)self->ds.sem_perm.uid;
-    /* v1.1 - fixed typo that set the group id rather than the user id */
-    self->ds.sem_perm.uid = (uid_t)newuid;
-    arg.buf = &(self->ds);
-    if (semctl(self->semid, 0, IPC_SET, arg) == -1) {
-        self->ds.sem_perm.uid = (uid_t)olduid;
-        return PyShm_Err();
-    }
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setundo(0|1)
-*/
-
-static PyObject *
-PyShmSemaphore_setundo(PyShmSemObj *self, PyObject *args)
-{
-    int undo;
-
-    if (!PyArg_ParseTuple(args, "i", &undo))
-        return NULL;
-    refresh_semaphore_status(self);
-    if (undo)
-        self->opflag |= SEM_UNDO;
-    else
-        self->opflag &= ~SEM_UNDO;
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- setval(int Value)
-*/
-
-static PyObject *
-PyShmSemaphore_setval(PyShmSemObj *self, PyObject *args)
-{
-    int value;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "i", &value))
-        return NULL;
-    refresh_semaphore_status(self);
-    arg.val = value;
-    if (semctl(self->semid, 0, SETVAL, arg) == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of methods for semaphore objects */
-
-static PyMethodDef semaphore_methods[] = {
-    {"P",		(PyCFunction)PyShmSemaphore_P,			0,
-     "P() --> None | except shm.error"},
-    {"V",		(PyCFunction)PyShmSemaphore_V,			0,
-     "V() --> None | except shm.error"},
-    {"Z",		(PyCFunction)PyShmSemaphore_Z,			0,
-     "Z() --> None | except shm.error"},
-    {"setblocking",	(PyCFunction)PyShmSemaphore_setblocking,	1,
-     "setblocking(0|1) --> None"},
-    {"setgid",		(PyCFunction)PyShmSemaphore_setgid,		1,
-     "setgid(int Gid) --> None | except shm.error"},
-    {"setperm",		(PyCFunction)PyShmSemaphore_setperm,		1,
-     "setperm(int Perm) --> None | except shm.error"},
-    {"setuid",		(PyCFunction)PyShmSemaphore_setuid,		1,
-     "setuid(int Uid) --> None | except shm.error"},
-    {"setundo",		(PyCFunction)PyShmSemaphore_setundo,		1,
-     "setundo(0|1) --> None"},
-    {"setval",		(PyCFunction)PyShmSemaphore_setval,		1,
-     "setval(int Value) --> None | except shm.error"},
-    {NULL,	NULL}		/* sentinel */
-};
-
-#define OFF(x)	offsetof(PyShmSemaphoreObject, x)
-#define OFF1(x)	OFF(ds) + offsetof(struct semid_ds, x)
-#define OFF2(x)	OFF1(sem_perm) + offsetof(struct ipc_perm, x)
-
-/* List of members for semaphore objects */
-
-/* Note: member types are set in the initshm function.
-   Members which need separate processing are:
-   - val, lpid, ncnt, zcnt --> in kernel memory, not accessible from a process
-   - perm --> return permission (lower 9) bits only of ds.sem_perm.mode
-   - blocking --> in opflags
-*/
-
-static struct memberlist semaphore_memberlist[] = {
-    {"cgid",	T_INT,	OFF2(cgid),		RO},	/* 0  (gid_t)  */
-    {"cuid",	T_INT,	OFF2(cuid),		RO},	/* 1  (uid_t)  */
-    {"key",	    T_INT,	OFF2(IPC_PERM_KEY_NAME),		RO},	/* 2  (key_t)  */
-    {"semid",	T_INT,	OFF(semid),		RO},	/* 3  (int)    */
-    {"gid",	    T_INT,	OFF2(gid),		RO},	/* 4  (gid_t)  */
-    {"uid",	    T_INT,	OFF2(uid),		RO},	/* 5  (uid_t)  */
-    /* The following members are implemented without this table */
-    {"lpid",	T_INT,	0,			RO},	/* 6  (ushort) */
-    {"ncnt",	T_INT,	0,			RO},	/* 7  (ushort) */
-    {"perm",	T_INT,	0,			RO},	/* 8  (mode_t) */
-    {"val",	    T_INT,	0,			RO},	/* 9  (ushort) */
-    {"zcnt",	T_INT,	0,			RO},	/* 10 (ushort) */
-    {"blocking",T_INT,	0,			RO},	/* 11 (ushort) */
-    {NULL}			/* sentinel */
-};
-
-#undef OFF
-#undef OFF1
-#undef OFF2
-
-static void
-PyShmSemaphore_dealloc(PyShmSemObj *self)
-{
-    /* del sem_dict[key], ignore if it fails */
-    if (PyDict_DelItem(sem_dict, PyInt_FromLong(self->semid)) == -1)
-        PyErr_Clear();
-    /* v1.1 - changed the reference below from PyMem_DEL to PyObject_Del.    */
-    PyObject_Del(self);
-}
-
-static PyObject *
-PyShmSemaphore_getattr(PyShmSemObj *self, char *name)
-{
-    PyObject *res;
-
-    res = Py_FindMethod(semaphore_methods, (PyObject *)self, name);
-    if (res != NULL)
-        return res;
-    PyErr_Clear();
-    refresh_semaphore_status(self);
-    if (strcmp(name, "val") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETVAL, 0));
-    if (strcmp(name, "lpid") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETPID, 0));
-    if (strcmp(name, "ncnt") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETNCNT, 0));
-    if (strcmp(name, "zcnt") == 0)
-        return PyInt_FromLong(semctl(self->semid, 0, GETZCNT, 0));
-    if (strcmp(name, "perm") == 0)
-        return PyInt_FromLong(self->ds.sem_perm.mode & 0777);
-    /* v1.1 - added blocking */
-    if (strcmp(name, "blocking") == 0)
-        return PyInt_FromLong(self->opflag & IPC_NOWAIT ? 0 : 1);
-    return PyMember_Get((char *)self, semaphore_memberlist, name);
-}
-
-static PyObject *
-PyShmSemaphore_repr(PyShmSemObj *self, char *name)
-{
-    /* v1.1 - added blocking */
-    char buf[200];
-
-    refresh_semaphore_status(self);
-    sprintf(buf, "<semaphore object, id=%d, val=%d, ncnt=%d, zcnt=%d, blocking=%d>",
-            self->semid,
-            semctl(self->semid, 0, GETVAL, 0),
-            semctl(self->semid, 0, GETNCNT, 0),
-            semctl(self->semid, 0, GETZCNT, 0),
-            self->opflag & IPC_NOWAIT ? 0 : 1);
-    return PyString_FromString(buf);
-}
-
-/* Type object for semaphore objects */
-
-static PyTypeObject PyShmSemaphore_Type = {
-    PyObject_HEAD_INIT(&PyType_Type)
-    0,					/*ob_size*/
-    "semaphore",			/*tp_name*/
-    sizeof(PyShmSemObj),		/*tp_size*/
-    0,					/*tp_itemsize*/
-    /* methods */
-    (destructor)PyShmSemaphore_dealloc,	/*tp_dealloc*/
-    0,					/*tp_print*/
-    (getattrfunc)PyShmSemaphore_getattr,/*tp_getattr*/
-    0,					/*tp_setattr*/
-    0,					/*tp_compare*/
-    (reprfunc)PyShmSemaphore_repr,	/*tp_repr*/
-    0,					/*tp_as_number*/
-    0,					/*tp_as_sequence*/
-    0,					/*tp_as_mapping*/
-};
-
-/************************************************************/
-/*                      Module Interface                    */
-/************************************************************/
-
-/*
--- ftok(string Path, int ProjId) -> int
-*/
-
-/* Compute a key by using the system's ftok algorithm */
-
-static PyObject *
-PyShm_ftok(PyObject *self, PyObject *args)
-{
-    char *path;
-    char id;
-    key_t key;
-
-    if (!PyArg_ParseTuple(args, "sb", &path, &id))
-        return NULL;
-    key = ftok(path, id);
-    return PyInt_FromLong((long)key);
-}
-
-/*
--- getshmid(int Key) --> int | except KeyError
-*/
-
-/* Return a shared memory segment id from a given key */
-
-static PyObject *
-PyShm_getshmid(PyObject *self, PyObject *args)
-{
-    long key;
-    int shmid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    shmid = shmget((key_t)key, 0, 0);
-    if (shmid == -1) {
-        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
-        return NULL;
-    }
-    return PyInt_FromLong(shmid);
-}
-
-/*
--- memory_haskey(int Key) --> int
-*/
-
-/* Check whether there is a shared memory segment with the given key */
-
-static PyObject *
-PyShm_memory_haskey(PyObject *self, PyObject *args)
-{
-    long key;
-    int shmid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    shmid = shmget((key_t)key, 0, 0);
-    return PyInt_FromLong((shmid == -1) ? 0 : 1);
-}
-
-/*
--- memory(int Shmid) --> object | except shm.error
-*/
-
-/* Get an existing shared memory segment and return it as a python object. */
-
-static PyObject *
-PyShm_memory(PyObject *self, PyObject *args)
-{
-    int shmid;
-    PyShmObj *o;
-    PyObject *keyo;
-
-    if (!PyArg_ParseTuple(args, "i", &shmid))
-        return NULL;
-    keyo = PyInt_FromLong(shmid);
-    /* get the object from the dictionary */
-    if (PyMapping_HasKey(shm_dict, keyo)) {
-        o = (PyShmObj *)PyDict_GetItem(shm_dict, keyo);
-        Py_INCREF(o);
-    }
-    else {
-        /* not found, create it */
-        if ((o = PyObject_NEW(PyShmObj, &PyShmMemory_Type)) == NULL)
-            return NULL;
-        o->shmid = shmid;
-        o->addr = NULL;
-        o->mode = 0;
-        /* shm_dict[shmid] = o */
-        if (PyDict_SetItem(shm_dict, keyo, (PyObject *)o) == -1) {
-            Py_DECREF(o);
-            PyErr_SetString(PyShm_Error, "can't initialize shared memory object");
-            return NULL;
-        }
-        Py_DECREF(o);	/* the owned reference in shm_dict doesn't count! */
-    }
-    /* v1.1 - plugged memory leak */
-    Py_DECREF(keyo);
-    /* set up the status data */
-    if (shmctl(o->shmid, IPC_STAT, &(o->ds)) == -1) {
-        Py_DECREF(o);
-        PyErr_SetString(PyShm_Error, "can't access shared memory segment");
-        return NULL;
-    }
-    return (PyObject *)o;
-}
-
-/*
--- create_memory(int Key, int Size [,int Perm=0666]) --> object
-*/
-
-/* Create a new shared memory segment. */
-
-static PyObject *
-PyShm_create_memory(PyObject *self, PyObject *args)
-{
-    long key;
-    int size, shmid;
-    int perm = 0666;	/* Default permission is -rw-rw-rw- */
-    PyObject *py_shmid;
-    PyObject *memory;
-
-    if (!PyArg_ParseTuple(args, "li|i", &key, &size, &perm))
-        return NULL;
-    shmid = shmget((key_t)key, size, perm | IPC_CREAT | IPC_EXCL);
-    if (shmid == -1)
-        return PyShm_Err();
-    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
-    py_shmid = Py_BuildValue("(i)", shmid);
-    memory = PyShm_memory(self, py_shmid);
-    Py_DECREF(py_shmid);
-
-    return memory;
-}
-
-/*
--- remove_memory(int Shmid) --> None | except shm.error
-*/
-
-/* Remove an existing shared memory segment. */
-
-static PyObject *
-PyShm_remove_memory(PyObject *self, PyObject *args)
-{
-    int shmid, res;
-
-    if (!PyArg_ParseTuple(args, "i", &shmid))
-        return NULL;
-    res = shmctl(shmid, IPC_RMID, 0);	/* remove it */
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/*
--- getsemid(int Key) --> int | except KeyError
-*/
-
-/* Return a semaphore id from a given key */
-
-static PyObject *
-PyShm_getsemid(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    semid = semget((key_t)key, 0, 0);
-    if (semid == -1) {
-        PyErr_SetObject(PyExc_KeyError, PyInt_FromLong(key));
-        return NULL;
-    }
-    return PyInt_FromLong(semid);
-}
-
-/*
--- semaphore_haskey(int Key) --> int
-*/
-
-/* Check whether there is a semaphore with the given key */
-
-static PyObject *
-PyShm_semaphore_haskey(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-
-    if (!PyArg_ParseTuple(args, "l", &key))
-        return NULL;
-    semid = semget((key_t)key, 0, 0);
-    return PyInt_FromLong((semid == -1) ? 0 : 1);
-}
-
-/*
--- semaphore(int Semid) --> object
-*/
-
-/* Get an existing semaphore and return it as a python object. */
-
-static PyObject *
-PyShm_semaphore(PyObject *self, PyObject *args)
-{
-    int semid;
-    PyShmSemObj *o;
-    PyObject *keyo;
-    semctl_arg arg;
-
-    if (!PyArg_ParseTuple(args, "i", &semid))
-        return NULL;
-    keyo = PyInt_FromLong(semid);
-    /* get the object from the dictionary */
-    if (PyMapping_HasKey(sem_dict, keyo)) {
-        o = (PyShmSemObj *)PyDict_GetItem(sem_dict, keyo);
-        Py_INCREF(o);
-    }
-    else {
-        /* not found, create it */
-        if ((o = PyObject_NEW(PyShmSemObj, &PyShmSemaphore_Type)) == NULL)
-            return NULL;
-        o->semid = semid;
-        o->opflag = 0;
-        /* sem_dict[semid] = o */
-        if (PyDict_SetItem(sem_dict, keyo, (PyObject *)o) == -1) {
-            Py_DECREF(o);
-            PyErr_SetString(PyShm_Error, "can't initialize semaphore object");
-            return NULL;
-        }
-        Py_DECREF(o);	/* the owned reference in sem_dict doesn't count! */
-    }
-    /* v1.1 - plugged memory leak */
-    Py_DECREF(keyo);
-    /* set up the status data */
-    arg.buf = &(o->ds);
-    if (semctl(o->semid, 0, IPC_STAT, arg) == -1) {
-        Py_DECREF(o);
-        PyErr_SetString(PyShm_Error, "can't access semaphore");
-        return NULL;
-    }
-    return (PyObject *)o;
-}
-
-/*
--- create_semaphore(int Key, [,int Value=1 [,int Perm=0666]]) --> object
-*/
-
-/* Create a new semaphore. */
-
-static PyObject *
-PyShm_create_semaphore(PyObject *self, PyObject *args)
-{
-    long key;
-    int semid;
-    int value = 1;
-    int perm = 0666;	/* Default permission is -rw-rw-rw- */
-    semctl_arg arg;
-    PyObject *py_shmid;
-    PyObject *semaphore;
-
-    if (!PyArg_ParseTuple(args, "l|ii", &key, &value, &perm))
-        return NULL;
-    semid = semget((key_t)key, 1, perm | IPC_CREAT | IPC_EXCL);
-    arg.val = value;
-    if (!((semid != -1) && (semctl(semid, 0, SETVAL, arg) != -1)))
-	   return PyShm_Err();
-    /* v1.1 - fixed memory leak resulting from inlining Py_BuildValue */
-    py_shmid = Py_BuildValue("(i)", semid);
-    semaphore = PyShm_semaphore(self, py_shmid);
-    Py_DECREF(py_shmid);
-
-    return semaphore;
-}
-
-/*
--- remove_semaphore(int Semid) --> None | except shm.error
-*/
-
-/* Remove an existing semaphore. */
-
-static PyObject *
-PyShm_remove_semaphore(PyObject *self, PyObject *args)
-{
-    int semid, res;
-
-    if (!PyArg_ParseTuple(args, "i", &semid))
-        return NULL;
-    res = semctl(semid, 0, IPC_RMID, 0);	/* remove it */
-    if (res == -1)
-        return PyShm_Err();
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-
-/* List of functions exported by this module. */
-
-static PyMethodDef PyShm_methods[] = {
-    {"create_memory",		PyShm_create_memory,	1,
-     "create_memory(int Key, int Size [,int Perm=0666]) --> object | except shm.error"},
-    {"create_semaphore",	PyShm_create_semaphore,	1,
-     "create_semaphore(int Key [,int Value=1 [,int Perm=0666]]) --> object | except shm.error"},
-    {"ftok",			PyShm_ftok,		1,
-     "ftok(string Path, int ProjId) --> int | except shm.error"},
-    {"getsemid",		PyShm_getsemid,		1,
-     "getsemid(int Key) --> int | except KeyError"},
-    {"getshmid",		PyShm_getshmid,		1,
-     "getshmid(int Key) --> int | except KeyError"},
-    {"memory_haskey",		PyShm_memory_haskey,	1,
-     "memory_haskey(int Key) --> int"},
-    {"memory",			PyShm_memory,		1,
-     "memory(int Shmid) --> object | except shm.error"},
-    {"semaphore",		PyShm_semaphore,	1,
-     "semaphore(int Semid) --> object | except shm.error"},
-    {"semaphore_haskey",	PyShm_semaphore_haskey,	1,
-     "semaphore_haskey(int Key) --> int"},
-    {"remove_memory",		PyShm_remove_memory,	1,
-     "remove_memory(int Shmid) --> None | except shm.error"},
-    {"remove_semaphore",	PyShm_remove_semaphore,	1,
-     "remove_semaphore(int Semid) --> None | except shm.error"},
-    {NULL,			NULL}		/* Sentinel */
-};
-
-
-/* Initialize this module */
-
-/* This is for inserting constants in the module's dictionary */
-
-static void
-insint(PyObject *d, char *name, int value)
-{
-	PyObject *v = PyInt_FromLong((long) value);
-	if (!v || PyDict_SetItemString(d, name, v))
-		Py_FatalError("can't initialize shm module");
-
-	Py_DECREF(v);
-}
-
-/* This is to set up the type of shared memory/semaphore object members */
-
-static void
-set_member_type(struct memberlist *sxm_memberlist,
-                int index,                          /* index in memberlist */
-                int typesize                        /* sizeof(member_type) */
-               )
-{
-    int t;
-
-    if (typesize == sizeof(char))
-        t = T_UBYTE;
-    else if (typesize == sizeof(short))
-        t = T_USHORT;
-    else if (typesize == sizeof(int))
-        t = T_UINT;
-    else if (typesize == sizeof(long))
-        t = T_ULONG;
-    else
-        Py_FatalError("can't initialize shm module");
-    sxm_memberlist[index].type = t;
-};
-
-void
-initshm(void)
-{
-    PyObject *m, *d;
-
-    m = Py_InitModule("shm", PyShm_methods);
-    d = PyModule_GetDict(m);
-    PyShm_Error = PyString_FromString("shm.error");
-    if (PyShm_Error == NULL ||
-	PyDict_SetItemString(d, "error", PyShm_Error) != 0)
-	    Py_FatalError("can't define shm.error");
-    if (PyDict_SetItemString(d, "__doc__", PyString_FromString
-			     ("Interface to System V shared memory IPC")) != 0)
-        Py_FatalError("can't define shm.__doc__");
-    if ((shm_dict = PyDict_New()) == NULL || (sem_dict = PyDict_New()) == NULL)
-	   Py_FatalError("can't initialize shm module");
-
-    /* initialize the machine dependent types in memory_memberlist */
-    set_member_type(memory_memberlist, 0, sizeof(gid_t));	/* cgid   */
-    set_member_type(memory_memberlist, 1, sizeof(pid_t));	/* cpid   */
-    set_member_type(memory_memberlist, 2, sizeof(uid_t));	/* cuid   */
-    set_member_type(memory_memberlist, 3, sizeof(key_t));	/* key    */
-    set_member_type(memory_memberlist, 4, sizeof(pid_t));	/* lpid   */
-    set_member_type(memory_memberlist, 5, sizeof(int));		/* shmid  */
-    set_member_type(memory_memberlist, 6, sizeof(int));		/* size   */
-    set_member_type(memory_memberlist, 7, sizeof(gid_t));	/* gid    */
-    set_member_type(memory_memberlist, 8, sizeof(uid_t));	/* uid    */
-
-    /* initialize the machine dependent types in semaphore_memberlist */
-    set_member_type(semaphore_memberlist, 0, sizeof(gid_t));	/* cgid   */
-    set_member_type(semaphore_memberlist, 1, sizeof(uid_t));	/* cuid   */
-    set_member_type(semaphore_memberlist, 2, sizeof(key_t));	/* key    */
-    set_member_type(semaphore_memberlist, 3, sizeof(int));	/* semid  */
-    set_member_type(semaphore_memberlist, 4, sizeof(gid_t));	/* gid    */
-    set_member_type(semaphore_memberlist, 5, sizeof(uid_t));	/* uid    */
-
-    /* relevant constants for this module; the others are useless here */
-    insint(d, "IPC_PRIVATE", IPC_PRIVATE);
-    insint(d, "SHM_RDONLY", SHM_RDONLY);
-    insint(d, "SHM_RND", SHM_RND);
-#ifdef SHMLBA
-    insint(d, "SHMLBA", SHMLBA);
-#endif
-#ifdef SEM_A
-    insint(d, "SEM_A", SEM_A);
-#endif
-#ifdef SEM_R
-    insint(d, "SEM_R", SEM_R);
-#endif
-#ifdef SHM_R
-    insint(d, "SHM_R", SHM_R);
-#endif
-#ifdef SHM_W
-    insint(d, "SHM_W", SHM_W);
-#endif
-}

==== BEGIN SVK PATCH BLOCK ====
Version: svk 1.08 (linux)

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
SvmKRXSLAdn/H5ceuVc=
==== END SVK PATCH BLOCK ====
